[

    {
        "id": 27,
        "name": "rubinius",
        "full_name": "rubinius/rubinius",
        "owner_id": 317747,
        "description": "The Rubinius Language Platform",
        "readme": "[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/rubinius/rubinius?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge) [![Build Status](https://travis-ci.org/rubinius/rubinius.svg?branch=master)](https://travis-ci.org/rubinius/rubinius)\n\n## The Rubinius Language Platform\n\nRubinius is a modern language platform that supports a number of programming languages.\n\nRubinius includes a bytecode virtual machine, generational garbage collector, and just-in-time (JIT) native machine code compiler. Rubinius provides concurrency support via native OS threads with no global interpreter lock.\n\nRubinius runs on Mac OS X and many Unix/Linux operating systems. Microsoft Windows is not yet supported.\n\n### Code of Conduct\n\nParticipation in the Rubinius project is governed by the Rubinius [Code of Conduct](https://rubinius.com/code-of-conduct/).\n\n### The Ruby Programming Language\n\nMany popular Ruby applications, like Rails, run on Rubinius, which aims to be compatible with Ruby version 2.3.1.\n\nRubinius includes a Ruby parser, Ruby bytecode compiler, Ruby core library, and C-API compatibility for native C extensions. The Ruby core library is written almost entirely in Ruby. The Ruby bytecode compiler and other tools, such as the debugger, are also written in Ruby.  Rubinius provides the standard Ruby libraries, with the following exceptions:\n\n* Continuation\n* Ripper\n* TracePoint\n* Tracer\n\nThe following Ruby features are not supported on Rubinius:\n\n* Refinements\n* $SAFE levels\n\n### License\n\nAll source code in this repository is subject to the terms of the Mozilla Public License, version 2.0 unless stated otherwise. A copy of this license can be found the file \"LICENSE\" or at <https://www.mozilla.org/MPL/2.0/>.\n\nContributions made prior to January 3rd, 2016 are licensed under the old BSD 3-clause license. A copy of this license can be found in the file \"BSD_LICENSE\".\n\nIn the event a directory contains a \"LICENSE\", \"LICENSE.txt\" or \"COPYING\" file the license specified in said file applies to the contents of said directory and all sub directories, overwriting the licenses specified above.\n\n### Installing Rubinius from Source\n\nTo install Rubinius, use the following steps:\n\n1. Ensure that MRI 2.0+, rubygems, rake, git and LLVM are installed\n2. git clone git://github.com/rubinius/rubinius.git\n3. cd rubinius\n4. bundle\n5. ./configure --prefix=/path/to/install/dir\n6. rake\n\nWhen the install process finishes, follow the directions printed to the terminal to add the Rubinius executable (bin) directory to your PATH.\n\n### Using RubyGems\n\nRubinius comes with RubyGems built-in. To install a gem, run the following:\n\n    $ rbx -S gem install <gem_name>\n\n### Documentation\n\nThe Rubinius documentation is the [Rubinius book](https://rubinius.com/book/).\n\n### Issues & Support\n\nPlease [file tickets](http://github.com/rubinius/rubinius/issues) for bugs or problems.\n\nFor additional help, visit the [Rubinius Gitter chat room](https://gitter.im/rubinius/rubinius).\n\n### Contributing\n\nThe Rubinius team welcomes contributions. For more information, read the [contributing](https://github.com/rubinius/rubinius/blob/master/.github/contributing.md) file.\n",
        "language": [
            {
                "lang": "Ruby",
                "bytes": 7350287
            },
            {
                "lang": "C++",
                "bytes": 2863886
            },
            {
                "lang": "C",
                "bytes": 522238
            },
            {
                "lang": "Perl",
                "bytes": 264756
            },
            {
                "lang": "HTML",
                "bytes": 81103
            },
            {
                "lang": "Groff",
                "bytes": 41909
            },
            {
                "lang": "Shell",
                "bytes": 32465
            },
            {
                "lang": "Python",
                "bytes": 21164
            },
            {
                "lang": "Makefile",
                "bytes": 8464
            },
            {
                "lang": "DTrace",
                "bytes": 4932
            },
            {
                "lang": "GDB",
                "bytes": 383
            },
            {
                "lang": "Batchfile",
                "bytes": 120
            },
            {
                "lang": "Objective-C",
                "bytes": 31
            }
        ],
        "repository": [
            {
                "path": ".autotest",
                "type": "Blob"
            },
            {
                "path": ".bundle",
                "type": "Tree"
            },
            {
                "path": ".bundle/config",
                "type": "Blob"
            },
            {
                "path": ".editorconfig",
                "type": "Blob"
            },
            {
                "path": ".gdbinit",
                "type": "Blob"
            },
            {
                "path": ".github",
                "type": "Tree"
            },
            {
                "path": ".github/contributing.md",
                "type": "Blob"
            },
            {
                "path": ".github/issue_template.md",
                "type": "Blob"
            },
            {
                "path": ".github/pull_request_template.md",
                "type": "Blob"
            },
            {
                "path": ".gitignore",
                "type": "Blob"
            },
            {
                "path": ".travis.yml",
                "type": "Blob"
            },
            {
                "path": "AUTHORS",
                "type": "Blob"
            },
            {
                "path": "BSD_LICENSE",
                "type": "Blob"
            },
            {
                "path": "Gemfile",
                "type": "Blob"
            },
            {
                "path": "Gemfile.installed",
                "type": "Blob"
            },
            {
                "path": "Gemfile.lock",
                "type": "Blob"
            },
            {
                "path": "LICENSE",
                "type": "Blob"
            },
            {
                "path": "README",
                "type": "Blob"
            },
            {
                "path": "README.md",
                "type": "Blob"
            },
            {
                "path": "Rakefile",
                "type": "Blob"
            },
            {
                "path": "SECURITY",
                "type": "Blob"
            },
            {
                "path": "THANKS",
                "type": "Blob"
            },
            {
                "path": "bin",
                "type": "Tree"
            },
            {
                "path": "bin/benchmark",
                "type": "Blob"
            },
            {
                "path": "bin/laces.rb",
                "type": "Blob"
            },
            {
                "path": "bin/mkspec",
                "type": "Blob"
            },
            {
                "path": "bin/mspec",
                "type": "Blob"
            },
            {
                "path": "bin/testrb",
                "type": "Blob"
            },
            {
                "path": "configure",
                "type": "Blob"
            },
            {
                "path": "core",
                "type": "Tree"
            },
            {
                "path": "core/alias.rb",
                "type": "Blob"
            },
            {
                "path": "core/alpha.rb",
                "type": "Blob"
            },
            {
                "path": "core/argf.rb",
                "type": "Blob"
            },
            {
                "path": "core/array.rb",
                "type": "Blob"
            },
            {
                "path": "core/array_mirror.rb",
                "type": "Blob"
            },
            {
                "path": "core/atomic.rb",
                "type": "Blob"
            },
            {
                "path": "core/autoload.rb",
                "type": "Blob"
            },
            {
                "path": "core/backtrace.rb",
                "type": "Blob"
            },
            {
                "path": "core/basic_object.rb",
                "type": "Blob"
            },
            {
                "path": "core/bignum.rb",
                "type": "Blob"
            },
            {
                "path": "core/binding.rb",
                "type": "Blob"
            },
            {
                "path": "core/block_environment.rb",
                "type": "Blob"
            },
            {
                "path": "core/byte_array.rb",
                "type": "Blob"
            },
            {
                "path": "core/call_site.rb",
                "type": "Blob"
            },
            {
                "path": "core/capi.rb",
                "type": "Blob"
            },
            {
                "path": "core/channel.rb",
                "type": "Blob"
            },
            {
                "path": "core/character.rb",
                "type": "Blob"
            },
            {
                "path": "core/class.rb",
                "type": "Blob"
            },
            {
                "path": "core/code_db.rb",
                "type": "Blob"
            },
            {
                "path": "core/code_loader.rb",
                "type": "Blob"
            },
            {
                "path": "core/compact_lookup_table.rb",
                "type": "Blob"
            },
            {
                "path": "core/comparable.rb",
                "type": "Blob"
            },
            {
                "path": "core/compiled_code.rb",
                "type": "Blob"
            },
            {
                "path": "core/complex.rb",
                "type": "Blob"
            },
            {
                "path": "core/complexifier.rb",
                "type": "Blob"
            },
            {
                "path": "core/configuration.rb",
                "type": "Blob"
            },
            {
                "path": "core/console.rb",
                "type": "Blob"
            },
            {
                "path": "core/constant_cache.rb",
                "type": "Blob"
            },
            {
                "path": "core/constant_table.rb",
                "type": "Blob"
            },
            {
                "path": "core/continuation.rb",
                "type": "Blob"
            },
            {
                "path": "core/converter_paths.rb",
                "type": "Blob"
            },
            {
                "path": "core/ctype.rb",
                "type": "Blob"
            },
            {
                "path": "core/delegated_method.rb",
                "type": "Blob"
            },
            {
                "path": "core/deprecations.rb",
                "type": "Blob"
            },
            {
                "path": "core/dir.rb",
                "type": "Blob"
            },
            {
                "path": "core/dir_glob.rb",
                "type": "Blob"
            },
            {
                "path": "core/encoding.rb",
                "type": "Blob"
            },
            {
                "path": "core/enumerable.rb",
                "type": "Blob"
            },
            {
                "path": "core/enumerable_helper.rb",
                "type": "Blob"
            },
            {
                "path": "core/enumerator.rb",
                "type": "Blob"
            },
            {
                "path": "core/env.rb",
                "type": "Blob"
            },
            {
                "path": "core/errno.rb",
                "type": "Blob"
            },
            {
                "path": "core/exception.rb",
                "type": "Blob"
            },
            {
                "path": "core/executable.rb",
                "type": "Blob"
            },
            {
                "path": "core/false.rb",
                "type": "Blob"
            },
            {
                "path": "core/ffi.rb",
                "type": "Blob"
            },
            {
                "path": "core/fiber.rb",
                "type": "Blob"
            },
            {
                "path": "core/file.rb",
                "type": "Blob"
            },
            {
                "path": "core/file_test.rb",
                "type": "Blob"
            },
            {
                "path": "core/fixnum.rb",
                "type": "Blob"
            },
            {
                "path": "core/float.rb",
                "type": "Blob"
            },
            {
                "path": "core/fsevent.rb",
                "type": "Blob"
            },
            {
                "path": "core/gc.rb",
                "type": "Blob"
            },
            {
                "path": "core/global.rb",
                "type": "Blob"
            },
            {
                "path": "core/hash.rb",
                "type": "Blob"
            },
            {
                "path": "core/hook.rb",
                "type": "Blob"
            },
            {
                "path": "core/identity_map.rb",
                "type": "Blob"
            },
            {
                "path": "core/immediate.rb",
                "type": "Blob"
            },
            {
                "path": "core/integer.rb",
                "type": "Blob"
            },
            {
                "path": "core/io.rb",
                "type": "Blob"
            },
            {
                "path": "core/iseq.rb",
                "type": "Blob"
            },
            {
                "path": "core/jit.rb",
                "type": "Blob"
            },
            {
                "path": "core/kernel.rb",
                "type": "Blob"
            },
            {
                "path": "core/lexical_scope.rb",
                "type": "Blob"
            },
            {
                "path": "core/library.rb",
                "type": "Blob"
            },
            {
                "path": "core/load_order.txt",
                "type": "Blob"
            },
            {
                "path": "core/loaded_features.rb",
                "type": "Blob"
            },
            {
                "path": "core/loader.rb",
                "type": "Blob"
            },
            {
                "path": "core/location.rb",
                "type": "Blob"
            },
            {
                "path": "core/logger.rb",
                "type": "Blob"
            },
            {
                "path": "core/lookup_table.rb",
                "type": "Blob"
            },
            {
                "path": "core/lru_cache.rb",
                "type": "Blob"
            },
            {
                "path": "core/main.rb",
                "type": "Blob"
            },
            {
                "path": "core/marshal.rb",
                "type": "Blob"
            },
            {
                "path": "core/match_data.rb",
                "type": "Blob"
            },
            {
                "path": "core/math.rb",
                "type": "Blob"
            },
            {
                "path": "core/method.rb",
                "type": "Blob"
            },
            {
                "path": "core/method_equality.rb",
                "type": "Blob"
            },
            {
                "path": "core/method_table.rb",
                "type": "Blob"
            },
            {
                "path": "core/metrics.rb",
                "type": "Blob"
            },
            {
                "path": "core/mirror.rb",
                "type": "Blob"
            },
            {
                "path": "core/missing_method.rb",
                "type": "Blob"
            },
            {
                "path": "core/module.rb",
                "type": "Blob"
            },
            {
                "path": "core/mutex.rb",
                "type": "Blob"
            },
            {
                "path": "core/native_method.rb",
                "type": "Blob"
            },
            {
                "path": "core/nil.rb",
                "type": "Blob"
            },
            {
                "path": "core/numeric.rb",
                "type": "Blob"
            },
            {
                "path": "core/numeric_mirror.rb",
                "type": "Blob"
            },
            {
                "path": "core/object_space.rb",
                "type": "Blob"
            },
            {
                "path": "core/options.rb",
                "type": "Blob"
            },
            {
                "path": "core/pack.rb",
                "type": "Blob"
            },
            {
                "path": "core/pointer.rb",
                "type": "Blob"
            },
            {
                "path": "core/pointer_accessors.rb",
                "type": "Blob"
            },
            {
                "path": "core/proc.rb",
                "type": "Blob"
            },
            {
                "path": "core/proc_mirror.rb",
                "type": "Blob"
            },
            {
                "path": "core/process.rb",
                "type": "Blob"
            },
            {
                "path": "core/process_mirror.rb",
                "type": "Blob"
            },
            {
                "path": "core/random.rb",
                "type": "Blob"
            },
            {
                "path": "core/range.rb",
                "type": "Blob"
            },
            {
                "path": "core/range_mirror.rb",
                "type": "Blob"
            },
            {
                "path": "core/rational.rb",
                "type": "Blob"
            },
            {
                "path": "core/rationalizer.rb",
                "type": "Blob"
            },
            {
                "path": "core/rbconfig.rb",
                "type": "Blob"
            },
            {
                "path": "core/regexp.rb",
                "type": "Blob"
            },
            {
                "path": "core/respond_to_cache.rb",
                "type": "Blob"
            },
            {
                "path": "core/rubinius.rb",
                "type": "Blob"
            },
            {
                "path": "core/ruby_constants.rb",
                "type": "Blob"
            },
            {
                "path": "core/runtime.rb",
                "type": "Blob"
            },
            {
                "path": "core/signal.rb",
                "type": "Blob"
            },
            {
                "path": "core/splitter.rb",
                "type": "Blob"
            },
            {
                "path": "core/sprinter.rb",
                "type": "Blob"
            },
            {
                "path": "core/stat.rb",
                "type": "Blob"
            },
            {
                "path": "core/stats.rb",
                "type": "Blob"
            },
            {
                "path": "core/string.rb",
                "type": "Blob"
            },
            {
                "path": "core/string_mirror.rb",
                "type": "Blob"
            },
            {
                "path": "core/struct.rb",
                "type": "Blob"
            },
            {
                "path": "core/symbol.rb",
                "type": "Blob"
            },
            {
                "path": "core/thread.rb",
                "type": "Blob"
            },
            {
                "path": "core/thread_group.rb",
                "type": "Blob"
            },
            {
                "path": "core/thread_group_mirror.rb",
                "type": "Blob"
            },
            {
                "path": "core/thread_mirror.rb",
                "type": "Blob"
            },
            {
                "path": "core/throw_catch.rb",
                "type": "Blob"
            },
            {
                "path": "core/thunk.rb",
                "type": "Blob"
            },
            {
                "path": "core/time.rb",
                "type": "Blob"
            },
            {
                "path": "core/true.rb",
                "type": "Blob"
            },
            {
                "path": "core/tuple.rb",
                "type": "Blob"
            },
            {
                "path": "core/type.rb",
                "type": "Blob"
            },
            {
                "path": "core/undefined.rb",
                "type": "Blob"
            },
            {
                "path": "core/variable_scope.rb",
                "type": "Blob"
            },
            {
                "path": "core/vm.rb",
                "type": "Blob"
            },
            {
                "path": "core/weakref.rb",
                "type": "Blob"
            },
            {
                "path": "core/zed.rb",
                "type": "Blob"
            },
            {
                "path": "debian",
                "type": "Tree"
            },
            {
                "path": "debian/README.source",
                "type": "Blob"
            },
            {
                "path": "debian/changelog",
                "type": "Blob"
            },
            {
                "path": "debian/compat",
                "type": "Blob"
            },
            {
                "path": "debian/control",
                "type": "Blob"
            },
            {
                "path": "debian/copyright",
                "type": "Blob"
            },
            {
                "path": "debian/manpages",
                "type": "Tree"
            },
            {
                "path": "debian/manpages/erb-rbx2.3.1",
                "type": "Blob"
            },
            {
                "path": "debian/manpages/gem-rbx2.3.1",
                "type": "Blob"
            },
            {
                "path": "debian/manpages/irb-rbx2.3.1",
                "type": "Blob"
            },
            {
                "path": "debian/manpages/rdoc-rbx2.3.1",
                "type": "Blob"
            },
            {
                "path": "debian/manpages/ri-rbx2.3.1",
                "type": "Blob"
            },
            {
                "path": "debian/manpages/ruby-rbx2.3.1",
                "type": "Blob"
            },
            {
                "path": "debian/manpages/testrb-rbx2.3.1",
                "type": "Blob"
            },
            {
                "path": "debian/rbx2.3.1",
                "type": "Blob"
            },
            {
                "path": "debian/rubinius-2.3.docs",
                "type": "Blob"
            },
            {
                "path": "debian/rubinius-2.3.manpages",
                "type": "Blob"
            },
            {
                "path": "debian/rubinius-2.3.postinst",
                "type": "Blob"
            },
            {
                "path": "debian/rubinius-2.3.prerm",
                "type": "Blob"
            },
            {
                "path": "debian/rules",
                "type": "Blob"
            },
            {
                "path": "debian/source",
                "type": "Tree"
            },
            {
                "path": "debian/source/format",
                "type": "Blob"
            },
            {
                "path": "gems_list.txt",
                "type": "Blob"
            },
            {
                "path": "library",
                "type": "Tree"
            },
            {
                "path": "library/bin",
                "type": "Tree"
            },
            {
                "path": "library/bin/compile.rb",
                "type": "Blob"
            },
            {
                "path": "library/bin/erb.rb",
                "type": "Blob"
            },
            {
                "path": "library/bin/gem.rb",
                "type": "Blob"
            },
            {
                "path": "library/bin/irb.rb",
                "type": "Blob"
            },
            {
                "path": "library/ffi",
                "type": "Tree"
            },
            {
                "path": "library/ffi/file_processor.rb",
                "type": "Blob"
            },
            {
                "path": "library/ffi/generator.rb",
                "type": "Blob"
            },
            {
                "path": "library/ffi/generators.rb",
                "type": "Blob"
            },
            {
                "path": "library/ffi/generators",
                "type": "Tree"
            },
            {
                "path": "library/ffi/generators/constants.rb",
                "type": "Blob"
            },
            {
                "path": "library/ffi/generators/structures.rb",
                "type": "Blob"
            },
            {
                "path": "library/ffi/generators/types.rb",
                "type": "Blob"
            },
            {
                "path": "library/gauntlet_rubygems.rb",
                "type": "Blob"
            },
            {
                "path": "library/rbconfig.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubinius",
                "type": "Tree"
            },
            {
                "path": "library/rubinius/configuration.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubinius/configuration_variables.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubinius/ffi.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems",
                "type": "Tree"
            },
            {
                "path": "library/rubygems/LICENSE.txt",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/MIT.txt",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/available_set.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/basic_specification.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/command_manager.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands",
                "type": "Tree"
            },
            {
                "path": "library/rubygems/commands/build_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/cert_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/check_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/cleanup_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/contents_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/dependency_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/environment_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/fetch_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/generate_index_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/help_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/install_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/list_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/lock_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/mirror_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/open_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/outdated_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/owner_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/pristine_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/push_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/query_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/rdoc_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/search_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/server_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/setup_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/sources_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/specification_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/stale_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/uninstall_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/unpack_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/update_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/which_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/commands/yank_command.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/compatibility.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/config_file.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/core_ext",
                "type": "Tree"
            },
            {
                "path": "library/rubygems/core_ext/kernel_gem.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/core_ext/kernel_require.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/defaults.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/defaults",
                "type": "Tree"
            },
            {
                "path": "library/rubygems/defaults/rbx.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/dependency.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/dependency_installer.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/dependency_list.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/dependency_resolver.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/dependency_resolver",
                "type": "Tree"
            },
            {
                "path": "library/rubygems/dependency_resolver/activation_request.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/dependency_resolver/api_set.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/dependency_resolver/api_specification.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/dependency_resolver/composed_set.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/dependency_resolver/current_set.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/dependency_resolver/dependency_conflict.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/dependency_resolver/dependency_request.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/dependency_resolver/index_set.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/dependency_resolver/index_specification.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/dependency_resolver/installed_specification.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/dependency_resolver/installer_set.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/deprecate.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/doctor.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/errors.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/exceptions.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/ext.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/ext",
                "type": "Tree"
            },
            {
                "path": "library/rubygems/ext/build_error.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/ext/builder.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/ext/cmake_builder.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/ext/configure_builder.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/ext/ext_conf_builder.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/ext/rake_builder.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/gem_runner.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/gemcutter_utilities.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/indexer.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/install_default_message.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/install_message.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/install_update_options.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/installer.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/installer_test_case.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/local_remote_options.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/mock_gem_ui.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/name_tuple.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/package.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/package",
                "type": "Tree"
            },
            {
                "path": "library/rubygems/package/digest_io.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/package/file_source.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/package/io_source.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/package/old.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/package/source.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/package/tar_header.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/package/tar_reader.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/package/tar_reader",
                "type": "Tree"
            },
            {
                "path": "library/rubygems/package/tar_reader/entry.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/package/tar_test_case.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/package/tar_writer.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/package_task.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/path_support.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/platform.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/psych_additions.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/psych_tree.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/rdoc.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/remote_fetcher.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/request.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/request",
                "type": "Tree"
            },
            {
                "path": "library/rubygems/request/connection_pools.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/request/http_pool.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/request/https_pool.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/request_set.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/request_set",
                "type": "Tree"
            },
            {
                "path": "library/rubygems/request_set/gem_dependency_api.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/request_set/lockfile.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/request_set/lockfile",
                "type": "Tree"
            },
            {
                "path": "library/rubygems/request_set/lockfile/parser.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/request_set/lockfile/tokenizer.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/requirement.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver",
                "type": "Tree"
            },
            {
                "path": "library/rubygems/resolver/activation_request.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/api_set.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/api_specification.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/best_set.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/composed_set.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/conflict.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/current_set.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/dependency_request.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/git_set.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/git_specification.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/index_set.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/index_specification.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/installed_specification.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/installer_set.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/local_specification.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/lock_set.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/lock_specification.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/molinillo.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/molinillo",
                "type": "Tree"
            },
            {
                "path": "library/rubygems/resolver/molinillo/lib",
                "type": "Tree"
            },
            {
                "path": "library/rubygems/resolver/molinillo/lib/molinillo.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/molinillo/lib/molinillo",
                "type": "Tree"
            },
            {
                "path": "library/rubygems/resolver/molinillo/lib/molinillo/delegates",
                "type": "Tree"
            },
            {
                "path": "library/rubygems/resolver/molinillo/lib/molinillo/delegates/resolution_state.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/molinillo/lib/molinillo/delegates/specification_provider.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/molinillo/lib/molinillo/dependency_graph.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/molinillo/lib/molinillo/dependency_graph",
                "type": "Tree"
            },
            {
                "path": "library/rubygems/resolver/molinillo/lib/molinillo/dependency_graph/action.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/molinillo/lib/molinillo/dependency_graph/add_edge_no_circular.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/molinillo/lib/molinillo/dependency_graph/add_vertex.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/molinillo/lib/molinillo/dependency_graph/detach_vertex_named.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/molinillo/lib/molinillo/dependency_graph/log.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/molinillo/lib/molinillo/dependency_graph/set_payload.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/molinillo/lib/molinillo/dependency_graph/tag.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/molinillo/lib/molinillo/dependency_graph/vertex.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/molinillo/lib/molinillo/errors.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/molinillo/lib/molinillo/gem_metadata.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/molinillo/lib/molinillo/modules",
                "type": "Tree"
            },
            {
                "path": "library/rubygems/resolver/molinillo/lib/molinillo/modules/specification_provider.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/molinillo/lib/molinillo/modules/ui.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/molinillo/lib/molinillo/resolution.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/molinillo/lib/molinillo/resolver.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/molinillo/lib/molinillo/state.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/requirement_list.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/set.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/source_set.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/spec_specification.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/specification.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/stats.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/vendor_set.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/resolver/vendor_specification.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/security.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/security",
                "type": "Tree"
            },
            {
                "path": "library/rubygems/security/policies.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/security/policy.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/security/signer.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/security/trust_dir.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/server.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/source.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/source",
                "type": "Tree"
            },
            {
                "path": "library/rubygems/source/git.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/source/installed.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/source/local.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/source/lock.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/source/specific_file.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/source/vendor.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/source_list.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/source_local.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/source_specific_file.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/spec_fetcher.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/specification.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/ssl_certs",
                "type": "Tree"
            },
            {
                "path": "library/rubygems/ssl_certs/.document",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/ssl_certs/AddTrustExternalCARoot-2048.pem",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/ssl_certs/AddTrustExternalCARoot.pem",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/ssl_certs/Class3PublicPrimaryCertificationAuthority.pem",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/ssl_certs/DigiCertHighAssuranceEVRootCA.pem",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/ssl_certs/Entrust_net-Secure-Server-Certification-Authority.pem",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/ssl_certs/EntrustnetSecureServerCertificationAuthority.pem",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/ssl_certs/GeoTrustGlobalCA.pem",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/ssl_certs/GeoTrust_Global_CA.pem",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/ssl_certs/VerisignClass3PublicPrimaryCertificationAuthority-G2.pem",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/ssl_certs/ca-bundle.pem",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/ssl_certs/index.rubygems.org",
                "type": "Tree"
            },
            {
                "path": "library/rubygems/ssl_certs/index.rubygems.org/GlobalSignRootCA.pem",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/ssl_certs/rubygems.global.ssl.fastly.net",
                "type": "Tree"
            },
            {
                "path": "library/rubygems/ssl_certs/rubygems.global.ssl.fastly.net/DigiCertHighAssuranceEVRootCA.pem",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/ssl_certs/rubygems.org",
                "type": "Tree"
            },
            {
                "path": "library/rubygems/ssl_certs/rubygems.org/AddTrustExternalCARoot.pem",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/stub_specification.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/syck_hack.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/test_case.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/test_utilities.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/text.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/uninstaller.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/uri_formatter.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/user_interaction.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/util.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/util",
                "type": "Tree"
            },
            {
                "path": "library/rubygems/util/licenses.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/util/list.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/util/stringio.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/validator.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/version.rb",
                "type": "Blob"
            },
            {
                "path": "library/rubygems/version_option.rb",
                "type": "Blob"
            },
            {
                "path": "library/ubygems.rb",
                "type": "Blob"
            },
            {
                "path": "machine",
                "type": "Tree"
            },
            {
                "path": "machine/.gitignore",
                "type": "Blob"
            },
            {
                "path": "machine/accessor_primitives.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/alloc.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/arguments.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/arguments.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/bug.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/bytecode_verifier.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/bytecode_verifier.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/call_frame.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/call_frame.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi",
                "type": "Tree"
            },
            {
                "path": "machine/capi/array.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/bignum.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/capi.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/capi.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/class.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/complex.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/data.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/encoding.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/enumerator.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/exception.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/file.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/fixnum.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/float.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/gc.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/globals.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/handle.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/handle.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/handles.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/handles.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/hash.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/integer.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/io.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/kernel.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/marshal.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/module.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/mri",
                "type": "Tree"
            },
            {
                "path": "machine/capi/mri/compat.h",
                "type": "Blob"
            },
            {
                "path": "machine/capi/mutex.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/numeric.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/object.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/proc.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/range.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/rational.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/regexp.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/string.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/struct.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/symbol.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/tag.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/thread.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/time.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/util.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/capi/value.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class",
                "type": "Tree"
            },
            {
                "path": "machine/class/access_variable.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/access_variable.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/alias.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/alias.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/array.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/array.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/atomic.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/atomic.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/autoload.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/autoload.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/basic_object.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/basic_object.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/bignum.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/bignum.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/block_as_method.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/block_as_method.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/block_environment.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/block_environment.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/byte_array.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/byte_array.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/call_site.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/call_site.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/channel.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/channel.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/character.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/character.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/class.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/class.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/code_db.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/code_db.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/compact_lookup_table.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/compact_lookup_table.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/compiled_code.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/compiled_code.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/constant_cache.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/constant_cache.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/constant_table.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/constant_table.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/data.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/data.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/diagnostics.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/diagnostics.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/dir.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/dir.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/encoding.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/encoding.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/exception.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/exception.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/executable.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/executable.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/ffi_pointer.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/ffi_pointer.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/fiber.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/fiber.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/find_object.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/fixnum.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/fixnum.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/float.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/float.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/fsevent.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/fsevent.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/heap_dump.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/immediates.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/immediates.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/integer.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/integer.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/io.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/io.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/iseq.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/iseq.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/jit.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/jit.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/lexical_scope.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/lexical_scope.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/list.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/list.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/location.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/location.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/logger.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/logger.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/lookup_table.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/lookup_table.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/method_table.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/method_table.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/module.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/module.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/native_function.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/native_function.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/native_method.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/native_method.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/object.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/object.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/pack.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/packed_object.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/packed_object.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/proc.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/proc.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/randomizer.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/randomizer.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/regexp.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/regexp.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/stat.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/stat.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/string.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/string.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/symbol.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/symbol.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/system.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/system.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/thread.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/thread.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/thread_state.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/thread_state.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/thunk.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/thunk.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/time.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/time.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/trie.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/trie.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/tuple.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/tuple.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/unpack.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/variable_scope.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/variable_scope.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/weakref.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/class/weakref.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/codegen",
                "type": "Tree"
            },
            {
                "path": "machine/codegen/config_vars.rb",
                "type": "Blob"
            },
            {
                "path": "machine/codegen/encoding_extract.rb",
                "type": "Blob"
            },
            {
                "path": "machine/codegen/field_extract.rb",
                "type": "Blob"
            },
            {
                "path": "machine/codegen/super-instructions.yml",
                "type": "Blob"
            },
            {
                "path": "machine/codegen/transcoders_extract.rb",
                "type": "Blob"
            },
            {
                "path": "machine/codegen/transforms.rb",
                "type": "Blob"
            },
            {
                "path": "machine/compile.sh",
                "type": "Blob"
            },
            {
                "path": "machine/compiled_file.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/compiled_file.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/config.h",
                "type": "Blob"
            },
            {
                "path": "machine/config_parser.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/config_parser.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/configuration.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/console.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/console.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/defines.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/detection.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/diagnostics.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/diagnostics.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/dispatch.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/dispatch.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/drivers",
                "type": "Tree"
            },
            {
                "path": "machine/drivers/cli.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/drivers/jit-test.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/dtrace",
                "type": "Tree"
            },
            {
                "path": "machine/dtrace/dtrace.h",
                "type": "Blob"
            },
            {
                "path": "machine/dtrace/probes.d",
                "type": "Blob"
            },
            {
                "path": "machine/dtrace/probes_dummy.h",
                "type": "Blob"
            },
            {
                "path": "machine/environment.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/environment.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/exception.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/exception.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/exception_point.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/exception_point.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/executor.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/ffi.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/ffi_util.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/ffi_util.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/field_offset.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/global_cache.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/global_cache.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/globals.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/helpers.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/helpers.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/include",
                "type": "Tree"
            },
            {
                "path": "machine/include/capi",
                "type": "Tree"
            },
            {
                "path": "machine/include/capi/capi_constants.h",
                "type": "Blob"
            },
            {
                "path": "machine/include/capi/capi_oop.h",
                "type": "Blob"
            },
            {
                "path": "machine/include/capi/rbx_config.h",
                "type": "Blob"
            },
            {
                "path": "machine/include/capi/ruby.h",
                "type": "Blob"
            },
            {
                "path": "machine/include/capi/ruby",
                "type": "Tree"
            },
            {
                "path": "machine/include/capi/ruby/backward",
                "type": "Tree"
            },
            {
                "path": "machine/include/capi/ruby/backward/rubyio.h",
                "type": "Blob"
            },
            {
                "path": "machine/include/capi/ruby/backward/rubysig.h",
                "type": "Blob"
            },
            {
                "path": "machine/include/capi/ruby/backward/st.h",
                "type": "Blob"
            },
            {
                "path": "machine/include/capi/ruby/backward/util.h",
                "type": "Blob"
            },
            {
                "path": "machine/include/capi/ruby/defines.h",
                "type": "Blob"
            },
            {
                "path": "machine/include/capi/ruby/dl.h",
                "type": "Blob"
            },
            {
                "path": "machine/include/capi/ruby/encoding.h",
                "type": "Blob"
            },
            {
                "path": "machine/include/capi/ruby/intern.h",
                "type": "Blob"
            },
            {
                "path": "machine/include/capi/ruby/io.h",
                "type": "Blob"
            },
            {
                "path": "machine/include/capi/ruby/missing.h",
                "type": "Blob"
            },
            {
                "path": "machine/include/capi/ruby/oniguruma.h",
                "type": "Blob"
            },
            {
                "path": "machine/include/capi/ruby/re.h",
                "type": "Blob"
            },
            {
                "path": "machine/include/capi/ruby/regenc.h",
                "type": "Blob"
            },
            {
                "path": "machine/include/capi/ruby/regex.h",
                "type": "Blob"
            },
            {
                "path": "machine/include/capi/ruby/ruby.h",
                "type": "Blob"
            },
            {
                "path": "machine/include/capi/ruby/st.h",
                "type": "Blob"
            },
            {
                "path": "machine/include/capi/ruby/subst.h",
                "type": "Blob"
            },
            {
                "path": "machine/include/capi/ruby/thread.h",
                "type": "Blob"
            },
            {
                "path": "machine/include/capi/ruby/thread_native.h",
                "type": "Blob"
            },
            {
                "path": "machine/include/capi/ruby/transcoder.h",
                "type": "Blob"
            },
            {
                "path": "machine/include/capi/ruby/util.h",
                "type": "Blob"
            },
            {
                "path": "machine/include/capi/ruby/version.h",
                "type": "Blob"
            },
            {
                "path": "machine/include/capi/ruby/win32.h",
                "type": "Blob"
            },
            {
                "path": "machine/instructions.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions.def",
                "type": "Blob"
            },
            {
                "path": "machine/instructions.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions",
                "type": "Tree"
            },
            {
                "path": "machine/instructions/add_scope.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/allow_private.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/cast_array.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/cast_for_multi_block_arg.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/cast_for_single_block_arg.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/cast_for_splat_block_arg.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/cast_multi_value.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/check_frozen.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/check_interrupts.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/check_serial.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/check_serial_private.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/clear_exception.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/create_block.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data",
                "type": "Tree"
            },
            {
                "path": "machine/instructions/data/add_scope.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/allow_private.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/cast_array.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/cast_for_multi_block_arg.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/cast_for_single_block_arg.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/cast_for_splat_block_arg.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/cast_multi_value.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/check_frozen.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/check_interrupts.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/check_serial.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/check_serial_private.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/clear_exception.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/create_block.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/dup.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/dup_many.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/ensure_return.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/find_const.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/goto.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/goto_if_equal.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/goto_if_false.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/goto_if_nil.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/goto_if_not_equal.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/goto_if_not_nil.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/goto_if_not_undefined.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/goto_if_true.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/goto_if_undefined.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/instance_of.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/invoke_primitive.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/kind_of.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/make_array.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/move_down.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/noop.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/object_to_s.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/passed_arg.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/passed_blockarg.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/pop.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/pop_many.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/pop_unwind.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/push_block.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/push_block_arg.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/push_const.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/push_cpath_top.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/push_current_exception.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/push_exception_state.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/push_false.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/push_has_block.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/push_int.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/push_ivar.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/push_literal.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/push_local.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/push_local_depth.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/push_memo.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/push_mirror.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/push_my_field.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/push_my_offset.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/push_nil.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/push_proc.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/push_rubinius.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/push_scope.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/push_self.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/push_stack_local.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/push_true.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/push_type.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/push_undef.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/push_variables.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/raise_break.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/raise_exc.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/raise_return.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/reraise.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/restore_exception_state.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/ret.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/rotate.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/send_method.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/send_stack.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/send_stack_with_block.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/send_stack_with_splat.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/send_super_stack_with_block.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/send_super_stack_with_splat.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/send_vcall.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/set_call_flags.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/set_const.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/set_const_at.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/set_ivar.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/set_local.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/set_local_depth.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/set_stack_local.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/setup_unwind.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/shift_array.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/store_my_field.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/string_append.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/string_build.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/string_dup.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/swap.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/yield_debugger.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/yield_splat.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/yield_stack.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/data/zsuper.json",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/dup.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/dup_many.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/ensure_return.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/find_const.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/goto.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/goto_if_equal.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/goto_if_false.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/goto_if_nil.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/goto_if_not_equal.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/goto_if_not_nil.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/goto_if_not_undefined.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/goto_if_true.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/goto_if_undefined.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/instance_of.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/invoke_primitive.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit",
                "type": "Tree"
            },
            {
                "path": "machine/instructions/jit/add_scope.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/allow_private.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/cast_array.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/cast_for_multi_block_arg.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/cast_for_single_block_arg.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/cast_for_splat_block_arg.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/cast_multi_value.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/check_frozen.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/check_interrupts.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/check_serial.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/check_serial_private.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/clear_exception.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/create_block.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/dup.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/dup_many.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/ensure_return.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/find_const.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/goto.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/goto_if_equal.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/goto_if_false.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/goto_if_nil.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/goto_if_not_equal.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/goto_if_not_nil.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/goto_if_not_undefined.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/goto_if_true.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/goto_if_undefined.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/instance_of.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/invoke_primitive.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/kind_of.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/make_array.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/move_down.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/noop.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/object_to_s.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/passed_arg.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/passed_blockarg.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/pop.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/pop_many.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/pop_unwind.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/push_block.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/push_block_arg.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/push_const.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/push_cpath_top.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/push_current_exception.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/push_exception_state.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/push_false.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/push_has_block.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/push_int.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/push_ivar.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/push_literal.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/push_local.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/push_local_depth.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/push_memo.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/push_mirror.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/push_my_field.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/push_my_offset.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/push_nil.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/push_proc.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/push_rubinius.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/push_scope.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/push_self.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/push_stack_local.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/push_true.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/push_type.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/push_undef.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/push_variables.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/raise_break.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/raise_exc.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/raise_return.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/reraise.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/restore_exception_state.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/ret.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/rotate.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/send_method.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/send_stack.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/send_stack_with_block.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/send_stack_with_splat.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/send_super_stack_with_block.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/send_super_stack_with_splat.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/send_vcall.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/set_call_flags.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/set_const.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/set_const_at.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/set_ivar.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/set_local.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/set_local_depth.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/set_stack_local.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/setup_unwind.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/shift_array.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/store_my_field.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/string_append.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/string_build.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/string_dup.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/swap.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/yield_debugger.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/yield_splat.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/yield_stack.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/jit/zsuper.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/kind_of.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/make_array.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/move_down.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/noop.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/object_to_s.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/passed_arg.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/passed_blockarg.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/pop.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/pop_many.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/pop_unwind.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/push_block.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/push_block_arg.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/push_const.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/push_cpath_top.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/push_current_exception.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/push_exception_state.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/push_false.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/push_has_block.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/push_int.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/push_ivar.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/push_literal.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/push_local.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/push_local_depth.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/push_memo.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/push_mirror.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/push_my_field.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/push_my_offset.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/push_nil.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/push_proc.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/push_rubinius.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/push_scope.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/push_self.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/push_stack_local.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/push_true.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/push_type.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/push_undef.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/push_variables.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/raise_break.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/raise_exc.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/raise_return.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/reraise.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/restore_exception_state.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/ret.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/rotate.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/run_exception.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/send_method.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/send_stack.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/send_stack_with_block.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/send_stack_with_splat.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/send_super_stack_with_block.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/send_super_stack_with_splat.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/send_vcall.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/set_call_flags.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/set_const.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/set_const_at.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/set_ivar.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/set_local.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/set_local_depth.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/set_stack_local.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/setup_unwind.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/shift_array.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/store_my_field.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/string_append.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/string_build.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/string_dup.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/swap.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/yield_debugger.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/yield_splat.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/yield_stack.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions/zsuper.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instructions_util.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/instruments",
                "type": "Tree"
            },
            {
                "path": "machine/instruments/timing.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter",
                "type": "Tree"
            },
            {
                "path": "machine/interpreter/add_scope.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/addresses.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/allow_private.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/cast_array.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/cast_for_multi_block_arg.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/cast_for_single_block_arg.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/cast_for_splat_block_arg.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/cast_multi_value.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/check_frozen.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/check_interrupts.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/check_serial.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/check_serial_private.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/clear_exception.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/create_block.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/dup.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/dup_many.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/ensure_return.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/find_const.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/goto.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/goto_if_equal.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/goto_if_false.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/goto_if_nil.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/goto_if_not_equal.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/goto_if_not_nil.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/goto_if_not_undefined.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/goto_if_true.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/goto_if_undefined.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/instance_of.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/instructions.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/invoke_primitive.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/kind_of.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/make_array.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/move_down.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/noop.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/object_to_s.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/passed_arg.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/passed_blockarg.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/pop.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/pop_many.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/pop_unwind.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/prototypes.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/push_block.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/push_block_arg.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/push_const.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/push_cpath_top.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/push_current_exception.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/push_exception_state.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/push_false.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/push_has_block.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/push_int.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/push_ivar.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/push_literal.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/push_local.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/push_local_depth.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/push_memo.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/push_mirror.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/push_my_field.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/push_my_offset.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/push_nil.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/push_proc.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/push_rubinius.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/push_scope.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/push_self.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/push_stack_local.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/push_true.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/push_type.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/push_undef.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/push_variables.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/raise_break.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/raise_exc.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/raise_return.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/reraise.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/restore_exception_state.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/ret.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/rotate.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/run_exception.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/send_method.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/send_stack.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/send_stack_with_block.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/send_stack_with_splat.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/send_super_stack_with_block.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/send_super_stack_with_splat.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/send_vcall.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/set_call_flags.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/set_const.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/set_const_at.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/set_ivar.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/set_local.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/set_local_depth.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/set_stack_local.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/setup_unwind.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/shift_array.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/store_my_field.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/string_append.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/string_build.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/string_dup.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/swap.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/yield_debugger.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/yield_splat.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/yield_stack.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/interpreter/zsuper.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/invoke_primitives.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/jit.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/jit.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/jit",
                "type": "Tree"
            },
            {
                "path": "machine/jit/instructions.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/linkedlist.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/linkedlist.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/logger.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/logger.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/lookup_data.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/machine_code.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/machine_code.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/machine_threads.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/machine_threads.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/marshal.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/marshal.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory",
                "type": "Tree"
            },
            {
                "path": "machine/memory/address.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/allocator.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/code_manager.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/code_manager.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/code_resource.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/debug.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/debug.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/finalizer.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/finalizer.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/gc.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/gc.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/gc_alloc.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/header.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/header.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/immix_collector.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/immix_collector.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/immix_marker.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/immix_marker.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/immix_region.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/inflated_headers.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/inflated_headers.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/managed.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/managed.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/mark_sweep.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/mark_sweep.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/object_mark.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/object_mark.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/root.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/root.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/root_buffer.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/slab.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/variable_buffer.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/walker.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/walker.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/write_barrier.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/memory/write_barrier.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/method_primitives.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/metrics.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/metrics.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/missing",
                "type": "Tree"
            },
            {
                "path": "machine/missing/crypt.c",
                "type": "Blob"
            },
            {
                "path": "machine/missing/gettid.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/missing/gettid.h",
                "type": "Blob"
            },
            {
                "path": "machine/missing/leopard_hashtable.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/missing/math.h",
                "type": "Blob"
            },
            {
                "path": "machine/missing/setproctitle.c",
                "type": "Blob"
            },
            {
                "path": "machine/missing/setproctitle.h",
                "type": "Blob"
            },
            {
                "path": "machine/missing/string.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/missing/string.h",
                "type": "Blob"
            },
            {
                "path": "machine/missing/time.h",
                "type": "Blob"
            },
            {
                "path": "machine/missing/unordered_map.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/missing/unordered_set.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/missing/windows.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/object_position.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/object_types.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/object_utils.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/object_watch.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/on_stack.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/ontology.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/ontology.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/park.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/park.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/paths.h",
                "type": "Blob"
            },
            {
                "path": "machine/primitives.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/profiler.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/profiler.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/raise_reason.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/release.h",
                "type": "Blob"
            },
            {
                "path": "machine/shared_state.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/shared_state.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/signal.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/signal.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/signature.h",
                "type": "Blob"
            },
            {
                "path": "machine/spinlock.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/stack_variables.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/stack_variables.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/state.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/state.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/super-instruction",
                "type": "Tree"
            },
            {
                "path": "machine/super-instruction/analyze.rb",
                "type": "Blob"
            },
            {
                "path": "machine/super-instruction/show.rb",
                "type": "Blob"
            },
            {
                "path": "machine/symbol_table.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/symbol_table.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test",
                "type": "Tree"
            },
            {
                "path": "machine/test/.gitignore",
                "type": "Blob"
            },
            {
                "path": "machine/test/capi",
                "type": "Tree"
            },
            {
                "path": "machine/test/capi/test_constants.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/capi/test_handles.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest",
                "type": "Tree"
            },
            {
                "path": "machine/test/cxxtest/COPYING",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/README",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/TODO",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/Versions",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest.spec",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest",
                "type": "Tree"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/Descriptions.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/Descriptions.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/DummyDescriptions.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/DummyDescriptions.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/ErrorFormatter.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/ErrorPrinter.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/Flags.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/GlobalFixture.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/GlobalFixture.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/Gui.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/LinkedList.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/LinkedList.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/Mock.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/ParenPrinter.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/QtGui.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/RealDescriptions.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/RealDescriptions.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/Root.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/SelfTest.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/StdHeaders.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/StdValueTraits.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/StdioFilePrinter.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/StdioPrinter.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/TeeListener.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/TestListener.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/TestRunner.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/TestSuite.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/TestSuite.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/TestTracker.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/TestTracker.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/ValueTraits.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/ValueTraits.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/Win32Gui.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/X11Gui.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtest/YesNoRunner.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtestgen.pl",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/cxxtestgen.py",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/docs",
                "type": "Tree"
            },
            {
                "path": "machine/test/cxxtest/docs/convert.pl",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/docs/guide.html",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/docs/index.html",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/docs/qt.png",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/docs/qt2.png",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/docs/win32.png",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/docs/x11.png",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample",
                "type": "Tree"
            },
            {
                "path": "machine/test/cxxtest/sample/Construct",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/CreatedTest.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/DeltaTest.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/EnumTraits.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/ExceptionTest.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/FixtureTest.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/Makefile.PL",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/Makefile.bcc32",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/Makefile.msvc",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/Makefile.unix",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/MessageTest.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/SimpleTest.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/TraitsTest.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/aborter.tpl",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/file_printer.tpl",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/gui",
                "type": "Tree"
            },
            {
                "path": "machine/test/cxxtest/sample/gui/GreenYellowRed.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/mock",
                "type": "Tree"
            },
            {
                "path": "machine/test/cxxtest/sample/mock/Dice.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/mock/Dice.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/mock/Makefile",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/mock/MockStdlib.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/mock/T",
                "type": "Tree"
            },
            {
                "path": "machine/test/cxxtest/sample/mock/T/stdlib.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/mock/TestDice.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/mock/mock_stdlib.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/mock/real_stdlib.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/mock/roll.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/msvc",
                "type": "Tree"
            },
            {
                "path": "machine/test/cxxtest/sample/msvc/CxxTest_1_Run.dsp",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/msvc/CxxTest_2_Build.dsp",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/msvc/CxxTest_3_Generate.dsp",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/msvc/CxxTest_Workspace.dsw",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/msvc/FixFiles.bat",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/msvc/Makefile",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/msvc/ReadMe.txt",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/only.tpl",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/parts",
                "type": "Tree"
            },
            {
                "path": "machine/test/cxxtest/sample/parts/Makefile.unix",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/winddk",
                "type": "Tree"
            },
            {
                "path": "machine/test/cxxtest/sample/winddk/Makefile",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/winddk/Makefile.inc",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/winddk/RunTests.tpl",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/winddk/SOURCES",
                "type": "Blob"
            },
            {
                "path": "machine/test/cxxtest/sample/yes_no_runner.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/fixture.rb",
                "type": "Blob"
            },
            {
                "path": "machine/test/fixture.rbc_",
                "type": "Blob"
            },
            {
                "path": "machine/test/jit",
                "type": "Tree"
            },
            {
                "path": "machine/test/jit/crash_goto_loop_header.rb",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov",
                "type": "Tree"
            },
            {
                "path": "machine/test/lcov/CHANGES",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/Makefile",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/README",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/bin",
                "type": "Tree"
            },
            {
                "path": "machine/test/lcov/bin/gendesc",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/bin/genhtml",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/bin/geninfo",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/bin/genpng",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/bin/install.sh",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/bin/lcov",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/bin/updateversion.pl",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/contrib",
                "type": "Tree"
            },
            {
                "path": "machine/test/lcov/contrib/galaxy",
                "type": "Tree"
            },
            {
                "path": "machine/test/lcov/contrib/galaxy/CHANGES",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/contrib/galaxy/README",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/contrib/galaxy/conglomerate_functions.pl",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/contrib/galaxy/gen_makefile.sh",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/contrib/galaxy/genflat.pl",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/contrib/galaxy/posterize.pl",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/descriptions.tests",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/example",
                "type": "Tree"
            },
            {
                "path": "machine/test/lcov/example/Makefile",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/example/README",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/example/descriptions.txt",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/example/example.c",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/example/gauss.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/example/iterate.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/example/methods",
                "type": "Tree"
            },
            {
                "path": "machine/test/lcov/example/methods/gauss.c",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/example/methods/iterate.c",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/lcovrc",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/man",
                "type": "Tree"
            },
            {
                "path": "machine/test/lcov/man/gendesc.1",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/man/genhtml.1",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/man/geninfo.1",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/man/genpng.1",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/man/lcov.1",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/man/lcovrc.5",
                "type": "Blob"
            },
            {
                "path": "machine/test/lcov/rpm",
                "type": "Tree"
            },
            {
                "path": "machine/test/lcov/rpm/lcov.spec",
                "type": "Blob"
            },
            {
                "path": "machine/test/one.sh",
                "type": "Blob"
            },
            {
                "path": "machine/test/simple.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_access_variable.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_arguments.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_array.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_bignum.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_block_environment.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_byte_array.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_channel.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_class.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_compact_lookup_table.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_compiled_code.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_compiled_file.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_config.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_constant_scope.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_dir.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_exception.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_executable.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_fixnum.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_float.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_gc_immix.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_instructions.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_integer.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_interpreter.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_iseq.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_linked_list.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_list.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_lookup_table.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_machine_code.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_memory_header.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_message.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_module.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_native_function.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_native_method.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_object.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_object_memory.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_ontology.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_pointer.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_regexp.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_setup.h",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_string.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_symbol.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_symbol_table.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_thread.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_time.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_tuple.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_unmarshal.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/test/test_vm.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/testable.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/thread_nexus.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/thread_nexus.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/thread_phase.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/type_info.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/type_info.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/unwind_info.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/unwind_info.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/util",
                "type": "Tree"
            },
            {
                "path": "machine/util/atomic.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/util/atomic_types.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/util/configuration.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/util/file.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/util/file.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/util/local_buffer.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/util/murmur_hash3.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/util/murmur_hash3.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/util/optimize.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/util/random.c",
                "type": "Blob"
            },
            {
                "path": "machine/util/random.h",
                "type": "Blob"
            },
            {
                "path": "machine/util/sha1.c",
                "type": "Blob"
            },
            {
                "path": "machine/util/sha1.h",
                "type": "Blob"
            },
            {
                "path": "machine/util/siphash.c",
                "type": "Blob"
            },
            {
                "path": "machine/util/siphash.h",
                "type": "Blob"
            },
            {
                "path": "machine/util/spinlock.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/util/spinlock.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/util/strftime.c",
                "type": "Blob"
            },
            {
                "path": "machine/util/strftime.h",
                "type": "Blob"
            },
            {
                "path": "machine/util/thread.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/util/time64.c",
                "type": "Blob"
            },
            {
                "path": "machine/util/time64.h",
                "type": "Blob"
            },
            {
                "path": "machine/util/timer.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/util/timer.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/util/timing.c",
                "type": "Blob"
            },
            {
                "path": "machine/util/timing.h",
                "type": "Blob"
            },
            {
                "path": "machine/util/utf8.c",
                "type": "Blob"
            },
            {
                "path": "machine/util/utf8.h",
                "type": "Blob"
            },
            {
                "path": "machine/util/vsnprintf.c",
                "type": "Blob"
            },
            {
                "path": "machine/util/vsnprintf.h",
                "type": "Blob"
            },
            {
                "path": "machine/vm.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/vm.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/vm_thread_state.cpp",
                "type": "Blob"
            },
            {
                "path": "machine/vm_thread_state.hpp",
                "type": "Blob"
            },
            {
                "path": "machine/windows_compat.h",
                "type": "Blob"
            },
            {
                "path": "mspec",
                "type": "Tree"
            },
            {
                "path": "mspec/Gemfile",
                "type": "Blob"
            },
            {
                "path": "mspec/LICENSE",
                "type": "Blob"
            },
            {
                "path": "mspec/README",
                "type": "Blob"
            },
            {
                "path": "mspec/Rakefile",
                "type": "Blob"
            },
            {
                "path": "mspec/bin",
                "type": "Tree"
            },
            {
                "path": "mspec/bin/mkspec",
                "type": "Blob"
            },
            {
                "path": "mspec/bin/mkspec.bat",
                "type": "Blob"
            },
            {
                "path": "mspec/bin/mspec",
                "type": "Blob"
            },
            {
                "path": "mspec/bin/mspec-ci",
                "type": "Blob"
            },
            {
                "path": "mspec/bin/mspec-ci.bat",
                "type": "Blob"
            },
            {
                "path": "mspec/bin/mspec-run",
                "type": "Blob"
            },
            {
                "path": "mspec/bin/mspec-run.bat",
                "type": "Blob"
            },
            {
                "path": "mspec/bin/mspec-tag",
                "type": "Blob"
            },
            {
                "path": "mspec/bin/mspec-tag.bat",
                "type": "Blob"
            },
            {
                "path": "mspec/bin/mspec.bat",
                "type": "Blob"
            },
            {
                "path": "mspec/lib",
                "type": "Tree"
            },
            {
                "path": "mspec/lib/mspec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec",
                "type": "Tree"
            },
            {
                "path": "mspec/lib/mspec/commands",
                "type": "Tree"
            },
            {
                "path": "mspec/lib/mspec/commands/mkspec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/commands/mspec-ci.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/commands/mspec-run.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/commands/mspec-tag.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/commands/mspec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/expectations.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/expectations",
                "type": "Tree"
            },
            {
                "path": "mspec/lib/mspec/expectations/expectations.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/expectations/should.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/guards.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/guards",
                "type": "Tree"
            },
            {
                "path": "mspec/lib/mspec/guards/background.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/guards/block_device.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/guards/bug.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/guards/compliance.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/guards/conflict.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/guards/endian.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/guards/extensions.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/guards/feature.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/guards/guard.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/guards/noncompliance.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/guards/platform.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/guards/quarantine.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/guards/runner.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/guards/specified.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/guards/superuser.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/guards/support.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/guards/tty.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/guards/user.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/guards/version.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/helpers.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/helpers",
                "type": "Tree"
            },
            {
                "path": "mspec/lib/mspec/helpers/argv.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/helpers/const_lookup.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/helpers/datetime.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/helpers/ducktype.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/helpers/encode.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/helpers/enumerator_class.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/helpers/environment.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/helpers/fixture.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/helpers/flunk.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/helpers/fs.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/helpers/hash.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/helpers/io.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/helpers/mock_to_path.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/helpers/numeric.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/helpers/pack.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/helpers/ruby_exe.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/helpers/scratch.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/helpers/singleton_class.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/helpers/stasy.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/helpers/tmp.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers",
                "type": "Tree"
            },
            {
                "path": "mspec/lib/mspec/matchers/base.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/be_an_instance_of.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/be_ancestor_of.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/be_close.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/be_computed_by.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/be_computed_by_function.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/be_empty.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/be_false.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/be_kind_of.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/be_nan.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/be_nil.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/be_true.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/be_valid_dns_name.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/block_caller.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/complain.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/eql.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/equal.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/equal_element.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/equal_utf16.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/have_class_variable.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/have_constant.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/have_data.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/have_instance_method.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/have_instance_variable.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/have_method.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/have_private_instance_method.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/have_private_method.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/have_protected_instance_method.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/have_public_instance_method.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/have_singleton_method.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/include.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/infinity.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/match_yaml.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/method.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/output.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/output_to_fd.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/raise_error.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/raise_exception.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/respond_to.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/signed_zero.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/stringsymboladapter.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/matchers/variable.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/mocks.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/mocks",
                "type": "Tree"
            },
            {
                "path": "mspec/lib/mspec/mocks/mock.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/mocks/object.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/mocks/proxy.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner",
                "type": "Tree"
            },
            {
                "path": "mspec/lib/mspec/runner/actions.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/actions",
                "type": "Tree"
            },
            {
                "path": "mspec/lib/mspec/runner/actions/filter.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/actions/tag.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/actions/taglist.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/actions/tagpurge.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/actions/tally.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/actions/timer.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/context.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/evaluate.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/example.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/exception.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/filters.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/filters",
                "type": "Tree"
            },
            {
                "path": "mspec/lib/mspec/runner/filters/match.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/filters/profile.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/filters/regexp.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/filters/tag.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/formatters.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/formatters",
                "type": "Tree"
            },
            {
                "path": "mspec/lib/mspec/runner/formatters/describe.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/formatters/dotted.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/formatters/file.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/formatters/html.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/formatters/junit.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/formatters/method.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/formatters/profile.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/formatters/specdoc.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/formatters/spinner.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/formatters/summary.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/formatters/unit.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/formatters/yaml.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/mspec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/object.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/shared.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/runner/tag.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/utils",
                "type": "Tree"
            },
            {
                "path": "mspec/lib/mspec/utils/name_map.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/utils/options.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/utils/ruby_name.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/utils/script.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/utils/version.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/lib/mspec/version.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/mspec.diff",
                "type": "Blob"
            },
            {
                "path": "mspec/mspec.gemspec",
                "type": "Blob"
            },
            {
                "path": "mspec/spec",
                "type": "Tree"
            },
            {
                "path": "mspec/spec/commands",
                "type": "Tree"
            },
            {
                "path": "mspec/spec/commands/fixtures",
                "type": "Tree"
            },
            {
                "path": "mspec/spec/commands/fixtures/four.txt",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/commands/fixtures/level2",
                "type": "Tree"
            },
            {
                "path": "mspec/spec/commands/fixtures/level2/three_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/commands/fixtures/one_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/commands/fixtures/three.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/commands/fixtures/two_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/commands/mkspec_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/commands/mspec_ci_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/commands/mspec_run_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/commands/mspec_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/commands/mspec_tag_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/expectations",
                "type": "Tree"
            },
            {
                "path": "mspec/spec/expectations/expectations_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/expectations/should.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/expectations/should_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/guards",
                "type": "Tree"
            },
            {
                "path": "mspec/spec/guards/background_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/guards/block_device_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/guards/bug_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/guards/compliance_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/guards/conflict_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/guards/endian_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/guards/extensions_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/guards/feature_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/guards/guard_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/guards/noncompliance_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/guards/platform_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/guards/quarantine_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/guards/runner_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/guards/specified_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/guards/superuser_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/guards/support_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/guards/tty_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/guards/user_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/guards/version_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/helpers",
                "type": "Tree"
            },
            {
                "path": "mspec/spec/helpers/argv_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/helpers/const_lookup_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/helpers/datetime_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/helpers/ducktype_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/helpers/encode_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/helpers/enumerator_class_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/helpers/environment_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/helpers/fixture_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/helpers/flunk_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/helpers/fs_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/helpers/hash_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/helpers/io_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/helpers/mock_to_path_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/helpers/numeric_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/helpers/ruby_exe_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/helpers/scratch_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/helpers/stasy_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/helpers/tmp_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers",
                "type": "Tree"
            },
            {
                "path": "mspec/spec/matchers/base_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/be_an_instance_of_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/be_ancestor_of_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/be_close_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/be_computed_by_function_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/be_computed_by_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/be_empty_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/be_false_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/be_kind_of_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/be_nan_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/be_nil_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/be_true_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/be_valid_dns_name_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/block_caller_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/complain_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/eql_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/equal_element_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/equal_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/equal_utf16_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/have_class_variable_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/have_constant_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/have_data_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/have_instance_method_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/have_instance_variable_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/have_method_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/have_private_instance_method_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/have_private_method_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/have_protected_instance_method_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/have_public_instance_method_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/have_singleton_method_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/include_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/infinity_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/match_yaml_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/output_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/output_to_fd_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/raise_error_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/raise_exception_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/respond_to_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/signed_zero_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/matchers/stringsymboladapter_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/mocks",
                "type": "Tree"
            },
            {
                "path": "mspec/spec/mocks/mock_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/mocks/proxy_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner",
                "type": "Tree"
            },
            {
                "path": "mspec/spec/runner/actions",
                "type": "Tree"
            },
            {
                "path": "mspec/spec/runner/actions/filter_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/actions/tag_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/actions/taglist_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/actions/tagpurge_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/actions/tally_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/actions/timer_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/context_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/example_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/exception_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/filters",
                "type": "Tree"
            },
            {
                "path": "mspec/spec/runner/filters/a.yaml",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/filters/b.yaml",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/filters/match_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/filters/profile_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/filters/regexp_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/filters/tag_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/formatters",
                "type": "Tree"
            },
            {
                "path": "mspec/spec/runner/formatters/describe_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/formatters/dotted_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/formatters/file_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/formatters/html_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/formatters/junit_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/formatters/method_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/formatters/specdoc_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/formatters/spinner_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/formatters/summary_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/formatters/unit_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/formatters/yaml_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/mspec_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/shared_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/tag_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/runner/tags.txt",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/spec_helper.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/utils",
                "type": "Tree"
            },
            {
                "path": "mspec/spec/utils/name_map_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/utils/options_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/utils/script_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/spec/utils/version_spec.rb",
                "type": "Blob"
            },
            {
                "path": "mspec/valgrind.diff",
                "type": "Blob"
            },
            {
                "path": "rakelib",
                "type": "Tree"
            },
            {
                "path": "rakelib/bench.rake",
                "type": "Blob"
            },
            {
                "path": "rakelib/blueprint.rb",
                "type": "Blob"
            },
            {
                "path": "rakelib/build_signature.rb",
                "type": "Blob"
            },
            {
                "path": "rakelib/committers.rake",
                "type": "Blob"
            },
            {
                "path": "rakelib/config.guess",
                "type": "Blob"
            },
            {
                "path": "rakelib/configure.rb",
                "type": "Blob"
            },
            {
                "path": "rakelib/core.rake",
                "type": "Blob"
            },
            {
                "path": "rakelib/dependency_grapher.rb",
                "type": "Blob"
            },
            {
                "path": "rakelib/digest_files.rb",
                "type": "Blob"
            },
            {
                "path": "rakelib/doc.rake",
                "type": "Blob"
            },
            {
                "path": "rakelib/gems.rake",
                "type": "Blob"
            },
            {
                "path": "rakelib/generator_task.rb",
                "type": "Blob"
            },
            {
                "path": "rakelib/git.rake",
                "type": "Blob"
            },
            {
                "path": "rakelib/git.rb",
                "type": "Blob"
            },
            {
                "path": "rakelib/install.rake",
                "type": "Blob"
            },
            {
                "path": "rakelib/instruction_parser.rb",
                "type": "Blob"
            },
            {
                "path": "rakelib/jit.rake",
                "type": "Blob"
            },
            {
                "path": "rakelib/mspec.rake",
                "type": "Blob"
            },
            {
                "path": "rakelib/oniguruma.rake",
                "type": "Blob"
            },
            {
                "path": "rakelib/package.rake",
                "type": "Blob"
            },
            {
                "path": "rakelib/package.rb",
                "type": "Blob"
            },
            {
                "path": "rakelib/platform.rake",
                "type": "Blob"
            },
            {
                "path": "rakelib/preinstall_gems.rb",
                "type": "Blob"
            },
            {
                "path": "rakelib/rapa.rake",
                "type": "Blob"
            },
            {
                "path": "rakelib/release.rake",
                "type": "Blob"
            },
            {
                "path": "rakelib/release.rb",
                "type": "Blob"
            },
            {
                "path": "rakelib/rubyspec.rake",
                "type": "Blob"
            },
            {
                "path": "rakelib/stress.rake",
                "type": "Blob"
            },
            {
                "path": "rakelib/tasks.rake",
                "type": "Blob"
            },
            {
                "path": "rakelib/todo.rake",
                "type": "Blob"
            },
            {
                "path": "rakelib/transcheck.rb",
                "type": "Blob"
            },
            {
                "path": "rakelib/vm.rake",
                "type": "Blob"
            },
            {
                "path": "rakelib/web.rake",
                "type": "Blob"
            },
            {
                "path": "rakelib/winpthreads.rake",
                "type": "Blob"
            },
            {
                "path": "rubinius-build_tools.gemspec",
                "type": "Blob"
            },
            {
                "path": "rubinius-developer_tools.gemspec",
                "type": "Blob"
            },
            {
                "path": "rubinius.gemspec",
                "type": "Blob"
            },
            {
                "path": "scripts",
                "type": "Tree"
            },
            {
                "path": "scripts/aws.sh",
                "type": "Blob"
            },
            {
                "path": "scripts/build_support.sh",
                "type": "Blob"
            },
            {
                "path": "scripts/configuration.sh",
                "type": "Blob"
            },
            {
                "path": "scripts/dependencies.sh",
                "type": "Blob"
            },
            {
                "path": "scripts/deploy.sh",
                "type": "Blob"
            },
            {
                "path": "scripts/digest.sh",
                "type": "Blob"
            },
            {
                "path": "scripts/gems.sh",
                "type": "Blob"
            },
            {
                "path": "scripts/github.sh",
                "type": "Blob"
            },
            {
                "path": "scripts/io.sh",
                "type": "Blob"
            },
            {
                "path": "scripts/json.sh",
                "type": "Blob"
            },
            {
                "path": "scripts/package.sh",
                "type": "Blob"
            },
            {
                "path": "scripts/release.sh",
                "type": "Blob"
            },
            {
                "path": "scripts/tag.sh",
                "type": "Blob"
            },
            {
                "path": "security.pub",
                "type": "Blob"
            },
            {
                "path": "spec",
                "type": "Tree"
            },
            {
                "path": "spec/README",
                "type": "Blob"
            },
            {
                "path": "spec/core",
                "type": "Tree"
            },
            {
                "path": "spec/core/array",
                "type": "Tree"
            },
            {
                "path": "spec/core/array/sample_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/array/shuffle_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/array/to_tuple_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/atomicreference",
                "type": "Tree"
            },
            {
                "path": "spec/core/atomicreference/compare_and_set_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/atomicreference/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/backtrace",
                "type": "Tree"
            },
            {
                "path": "spec/core/backtrace/backtrace_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/backtrace/color_from_loc_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/backtrace/each_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/backtrace/element_reference_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/backtrace/eval_color_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/backtrace/fill_from_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/backtrace/first_color_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/backtrace/frames_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/backtrace/join_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/backtrace/kernel_color_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/backtrace/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/backtrace/reverse_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/backtrace/show_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/backtrace/to_mri_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/backtrace/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/backtrace/top_context_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/bignum",
                "type": "Tree"
            },
            {
                "path": "spec/core/bignum/bignum_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/bignum/coerce_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/bignum/left_shift_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/bytearray",
                "type": "Tree"
            },
            {
                "path": "spec/core/bytearray/element_reference_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/bytearray/element_set_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/bytearray/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/core/bytearray/fixtures/common.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/bytearray/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/callsite",
                "type": "Tree"
            },
            {
                "path": "spec/core/callsite/depth_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/callsite/hits_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/callsite/invokes_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/callsite/ip_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/callsite/misses_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/callsite/name_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/callsite/reset_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/character",
                "type": "Tree"
            },
            {
                "path": "spec/core/character/alphabetical_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/character/ascii_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/character/digit_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/character/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/core/character/fixtures/common.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/character/lower_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/character/printable_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/character/punctuation_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/character/space_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/character/upper_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/class",
                "type": "Tree"
            },
            {
                "path": "spec/core/class/name_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/codeloader",
                "type": "Tree"
            },
            {
                "path": "spec/core/codeloader/require_compiled_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/compiledcode",
                "type": "Tree"
            },
            {
                "path": "spec/core/compiledcode/call_sites_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/compiledcode/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/core/compiledcode/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/compiledcode/locate_line_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/compiledcode/locate_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/compiledcode/post_args_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/compiledcode/required_args_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/compiledcode/total_args_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/constantcache",
                "type": "Tree"
            },
            {
                "path": "spec/core/constantcache/executable_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/constantcache/ip_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/constantcache/lexical_scope_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/constantcache/location_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/constantcache/module_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/constantcache/name_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/constantcache/serial_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/constantcache/value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ctype",
                "type": "Tree"
            },
            {
                "path": "spec/core/ctype/isalnum_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ctype/isctrl_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ctype/isdigit_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ctype/islower_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ctype/isspace_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ctype/isupper_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ctype/tolower_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ctype/toprint_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ctype/toupper_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/exception",
                "type": "Tree"
            },
            {
                "path": "spec/core/exception/arguments_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/exception/render_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi",
                "type": "Tree"
            },
            {
                "path": "spec/core/ffi/add_typedef_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/config_hash_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/config_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/find_type_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/library",
                "type": "Tree"
            },
            {
                "path": "spec/core/ffi/library/attach_foreign.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/library/attach_function_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/library/ffi_lib_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/library/native_function.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer",
                "type": "Tree"
            },
            {
                "path": "spec/core/ffi/memorypointer/address_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/autorelease_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/clone_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/dup_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/element_reference_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/free_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/from_string_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/get_at_offset_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/null_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/plus_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/read_array_of_int_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/read_array_of_long_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/read_array_of_type_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/read_double_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/read_float_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/read_int_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/read_long_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/read_pointer_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/read_string_length_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/read_string_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/read_string_to_null_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/set_at_offset_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/total_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/type_size_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/write_array_of_int_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/write_array_of_long_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/write_array_of_pointer_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/write_array_of_type_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/write_double_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/write_float_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/write_int_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/write_long_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/write_pointer_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/write_string_length_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/memorypointer/write_string_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/platform_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/pointer_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/size_to_type_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/struct",
                "type": "Tree"
            },
            {
                "path": "spec/core/ffi/struct/config_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/struct/element_reference_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/struct/element_set_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/struct/free_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/struct/initialize_copy_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/struct/layout_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/struct/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/struct/pointer_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/struct/size_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/ffi/type_size_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/fixnum",
                "type": "Tree"
            },
            {
                "path": "spec/core/fixnum/left_shift_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/fixnum/right_shift_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/core/fixtures/call_site.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash",
                "type": "Tree"
            },
            {
                "path": "spec/core/hash/allocate_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash/bucket",
                "type": "Tree"
            },
            {
                "path": "spec/core/hash/bucket/key_hash_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash/bucket/key_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash/bucket/link_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash/bucket/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash/bucket/value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash/delete_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash/item",
                "type": "Tree"
            },
            {
                "path": "spec/core/hash/item/delete_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash/item/insert_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash/item/lookup_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash/item/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash/iterator",
                "type": "Tree"
            },
            {
                "path": "spec/core/hash/iterator/index_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash/iterator/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash/iterator/next_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash/list",
                "type": "Tree"
            },
            {
                "path": "spec/core/hash/list/delete_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash/list/insert_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash/list/lookup_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash/redistribute_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash/table",
                "type": "Tree"
            },
            {
                "path": "spec/core/hash/table/delete_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash/table/insert_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash/table/item_index_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash/table/lookup_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash/trie",
                "type": "Tree"
            },
            {
                "path": "spec/core/hash/trie/add_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash/trie/delete_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash/trie/insert_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash/trie/item_index_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash/trie/lookup_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash/trie/set_bitmap_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/hash/trie/unset_bitmap_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/identitymap",
                "type": "Tree"
            },
            {
                "path": "spec/core/identitymap/delete_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/identitymap/from_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/identitymap/include_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/identitymap/size_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/identitymap/to_array_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/io",
                "type": "Tree"
            },
            {
                "path": "spec/core/io/buffer_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/kernel",
                "type": "Tree"
            },
            {
                "path": "spec/core/kernel/Integer_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/kernel/StringValue_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/kernel/const_lookup_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/kernel/dup_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/kernel/eval_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/kernel/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/core/kernel/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/kernel/fixtures/eval_cache.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/kernel/rand_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/loader",
                "type": "Tree"
            },
            {
                "path": "spec/core/loader/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/core/loader/fixtures/common.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/loader/fixtures/multi.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/loader/fixtures/single.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/loader/x_options_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/lookuptable",
                "type": "Tree"
            },
            {
                "path": "spec/core/lookuptable/allocate_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/lookuptable/clone_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/lookuptable/delete_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/lookuptable/dup_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/lookuptable/each_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/lookuptable/element_reference_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/lookuptable/element_set_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/lookuptable/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/core/lookuptable/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/lookuptable/has_key_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/lookuptable/include_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/lookuptable/initialize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/lookuptable/key_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/lookuptable/keys_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/lookuptable/member_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/lookuptable/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/lookuptable/shared",
                "type": "Tree"
            },
            {
                "path": "spec/core/lookuptable/shared/clone.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/lookuptable/shared/has_key.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/lookuptable/size_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/lookuptable/values_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/marshal",
                "type": "Tree"
            },
            {
                "path": "spec/core/marshal/dump_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/marshal/load_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/marshal/shared",
                "type": "Tree"
            },
            {
                "path": "spec/core/marshal/shared/load.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/method",
                "type": "Tree"
            },
            {
                "path": "spec/core/method/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/core/method/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/method/parameters_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/method/source_location_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/mirror",
                "type": "Tree"
            },
            {
                "path": "spec/core/mirror/reflect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/mirror/string",
                "type": "Tree"
            },
            {
                "path": "spec/core/mirror/string/byte_index_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/mirror/string/copy_from_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/mirror/string/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/core/mirror/string/fixtures/common.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/mirror/string/previous_byte_index_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/mirror/string/splice_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/module",
                "type": "Tree"
            },
            {
                "path": "spec/core/module/set_class_visibility_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/module/set_visibility_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/module/thunk_method_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/object",
                "type": "Tree"
            },
            {
                "path": "spec/core/object/class_variable_get_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/object/class_variable_set_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/object/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/core/object/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/options",
                "type": "Tree"
            },
            {
                "path": "spec/core/options/add_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/options/banner_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/options/config_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/options/doc_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/options/help_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/options/match_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/options/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/options/on_extra_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/options/on_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/options/option",
                "type": "Tree"
            },
            {
                "path": "spec/core/options/option/arg_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/options/option/block_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/options/option/description_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/options/option/long_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/options/option/match_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/options/option/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/options/option/optional_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/options/option/short_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/options/parse_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/options/process_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/options/split_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/options/stop_parsing_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/options/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/options/version_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/options/width_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/regexp",
                "type": "Tree"
            },
            {
                "path": "spec/core/regexp/match_start_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/string",
                "type": "Tree"
            },
            {
                "path": "spec/core/string/byte_to_character_index_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/string/character_to_byte_index_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/string/chr_at_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/string/compare_substring_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/string/count_table_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/string/data_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/string/lstrip_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/string/pattern_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/string/prefix_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/string/substring_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/string/suffix_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/string/tr_expand_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/tuple",
                "type": "Tree"
            },
            {
                "path": "spec/core/tuple/at_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/tuple/constructor_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/tuple/copy_from_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/tuple/delete_at_index_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/tuple/dup_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/tuple/each_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/tuple/element_reference_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/tuple/element_set_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/tuple/equal_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/tuple/first_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/tuple/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/core/tuple/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/tuple/insert_at_index_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/tuple/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/tuple/join_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/tuple/join_upto_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/tuple/last_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/tuple/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/tuple/pattern_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/tuple/plus_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/tuple/put_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/tuple/shared",
                "type": "Tree"
            },
            {
                "path": "spec/core/tuple/shared/at.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/tuple/shared/put.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/tuple/shift_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/tuple/swap_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/tuple/to_a_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/type",
                "type": "Tree"
            },
            {
                "path": "spec/core/type/check_convert_type_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/type/coerce_to_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/type/coerce_to_symbol_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/type/const_exists_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/type/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/core/type/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/type/infect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/type/object_kind_of_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/type/object_respond_to__dump_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/type/object_respond_to_ary_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/type/object_respond_to_marshal_dump_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/type/object_respond_to_marshal_load_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/type/object_respond_to_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/type/try_convert_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/unboundmethod",
                "type": "Tree"
            },
            {
                "path": "spec/core/unboundmethod/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/core/unboundmethod/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/unboundmethod/parameters_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/unboundmethod/source_location_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/core/vm",
                "type": "Tree"
            },
            {
                "path": "spec/core/vm/coerce_to_array_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/custom",
                "type": "Tree"
            },
            {
                "path": "spec/custom/guards",
                "type": "Tree"
            },
            {
                "path": "spec/custom/guards/profiler.rb",
                "type": "Blob"
            },
            {
                "path": "spec/custom/helpers",
                "type": "Tree"
            },
            {
                "path": "spec/custom/helpers/generator.rb",
                "type": "Blob"
            },
            {
                "path": "spec/custom/matchers",
                "type": "Tree"
            },
            {
                "path": "spec/custom/matchers/compile_as.rb",
                "type": "Blob"
            },
            {
                "path": "spec/custom/mspec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/custom/runner",
                "type": "Tree"
            },
            {
                "path": "spec/custom/runner/actions",
                "type": "Tree"
            },
            {
                "path": "spec/custom/runner/actions/debug.rb",
                "type": "Blob"
            },
            {
                "path": "spec/custom/runner/actions/gcstats.rb",
                "type": "Blob"
            },
            {
                "path": "spec/custom/runner/actions/memory.rb",
                "type": "Blob"
            },
            {
                "path": "spec/custom/runner/actions/parser.rb",
                "type": "Blob"
            },
            {
                "path": "spec/custom/runner/actions/profiler.rb",
                "type": "Blob"
            },
            {
                "path": "spec/custom/runner/relates.rb",
                "type": "Blob"
            },
            {
                "path": "spec/custom/utils",
                "type": "Tree"
            },
            {
                "path": "spec/custom/utils/options.rb",
                "type": "Blob"
            },
            {
                "path": "spec/custom/utils/script.rb",
                "type": "Blob"
            },
            {
                "path": "spec/default.mspec",
                "type": "Blob"
            },
            {
                "path": "spec/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/fixtures/code_loading.rb",
                "type": "Blob"
            },
            {
                "path": "spec/full.mspec",
                "type": "Blob"
            },
            {
                "path": "spec/jit",
                "type": "Tree"
            },
            {
                "path": "spec/jit/call_site_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/jit/instruction_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/jit/method_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/jit/spec_helper.rb",
                "type": "Blob"
            },
            {
                "path": "spec/laces",
                "type": "Tree"
            },
            {
                "path": "spec/laces/alias.rb",
                "type": "Blob"
            },
            {
                "path": "spec/laces/define_method.rb",
                "type": "Blob"
            },
            {
                "path": "spec/laces/locals.rb",
                "type": "Blob"
            },
            {
                "path": "spec/language",
                "type": "Tree"
            },
            {
                "path": "spec/language/predefined_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/language/regexp_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/language/string_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/library",
                "type": "Tree"
            },
            {
                "path": "spec/library/config",
                "type": "Tree"
            },
            {
                "path": "spec/library/config/rbconfig_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/library/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/library/fixtures/pingpong.rb",
                "type": "Blob"
            },
            {
                "path": "spec/profiles",
                "type": "Tree"
            },
            {
                "path": "spec/profiles/base64.yaml",
                "type": "Blob"
            },
            {
                "path": "spec/profiles/benchmark.yaml",
                "type": "Blob"
            },
            {
                "path": "spec/profiles/cgi.yaml",
                "type": "Blob"
            },
            {
                "path": "spec/profiles/core.yaml",
                "type": "Blob"
            },
            {
                "path": "spec/profiles/digest.yaml",
                "type": "Blob"
            },
            {
                "path": "spec/profiles/drb.yaml",
                "type": "Blob"
            },
            {
                "path": "spec/profiles/erb.yaml",
                "type": "Blob"
            },
            {
                "path": "spec/profiles/fileutils.yaml",
                "type": "Blob"
            },
            {
                "path": "spec/profiles/mutex.yaml",
                "type": "Blob"
            },
            {
                "path": "spec/profiles/openssl.yaml",
                "type": "Blob"
            },
            {
                "path": "spec/profiles/optionparser.yaml",
                "type": "Blob"
            },
            {
                "path": "spec/profiles/rails.yaml",
                "type": "Blob"
            },
            {
                "path": "spec/profiles/rexml.yaml",
                "type": "Blob"
            },
            {
                "path": "spec/profiles/set.yaml",
                "type": "Blob"
            },
            {
                "path": "spec/profiles/singleton.yaml",
                "type": "Blob"
            },
            {
                "path": "spec/profiles/socket.yaml",
                "type": "Blob"
            },
            {
                "path": "spec/profiles/stringio.yaml",
                "type": "Blob"
            },
            {
                "path": "spec/profiles/strscan.yaml",
                "type": "Blob"
            },
            {
                "path": "spec/profiles/time.yaml",
                "type": "Blob"
            },
            {
                "path": "spec/profiles/timeout.yaml",
                "type": "Blob"
            },
            {
                "path": "spec/profiles/uri.yaml",
                "type": "Blob"
            },
            {
                "path": "spec/profiles/webrick.yaml",
                "type": "Blob"
            },
            {
                "path": "spec/profiles/yaml.yaml",
                "type": "Blob"
            },
            {
                "path": "spec/rbx.2.3.mspec",
                "type": "Blob"
            },
            {
                "path": "spec/ruby",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/.gitignore",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/CHANGES.before-2008-05-10",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/Gemfile",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/LICENSE",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/README.md",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/TODO",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/command_line/dash_a_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/dash_c_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/dash_d_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/dash_e_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/dash_n_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/dash_p_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/dash_r_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/dash_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/dash_upper_c_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/dash_upper_e_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/dash_upper_f_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/dash_upper_i_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/dash_upper_k_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/dash_upper_u_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/dash_upper_w_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/dash_v_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/dash_w_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/dash_x_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/error_message_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/command_line/fixtures/conditional_range.txt",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/fixtures/dash_s_script.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/fixtures/dash_upper_c_script.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/fixtures/debug.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/fixtures/embedded_ruby.txt",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/fixtures/full_names.txt",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/fixtures/loadpath.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/fixtures/names.txt",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/fixtures/passwd_file.txt",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/fixtures/require.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/fixtures/test_file.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/fixtures/verbose.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/rubyopt_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/command_line/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/command_line/shared/verbose.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/argf",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/argf/argf_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/binmode_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/bytes_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/chars_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/close_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/closed_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/codepoints_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/each_byte_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/each_char_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/each_codepoint_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/each_line_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/each_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/eof_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/file_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/filename_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/fileno_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/argf/fixtures/bin_file.txt",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/fixtures/file1.txt",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/fixtures/file2.txt",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/fixtures/stdin.txt",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/getc_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/gets_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/lineno_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/lines_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/path_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/pos_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/read_nonblock_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/read_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/readchar_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/readline_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/readlines_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/readpartial_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/rewind_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/seek_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/set_encoding_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/argf/shared/each_byte.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/shared/each_char.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/shared/each_codepoint.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/shared/each_line.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/shared/eof.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/shared/filename.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/shared/fileno.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/shared/getc.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/shared/gets.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/shared/pos.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/shared/read.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/shared/readlines.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/skip_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/tell_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/to_a_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/to_i_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/to_io_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/argf/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/array/allocate_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/append_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/array_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/assoc_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/at_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/bsearch_index_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/bsearch_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/clear_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/clone_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/collect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/combination_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/compact_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/comparison_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/concat_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/constructor_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/count_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/cycle_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/delete_at_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/delete_if_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/delete_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/dig_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/drop_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/drop_while_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/dup_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/each_index_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/each_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/element_reference_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/element_set_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/empty_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/eql_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/equal_value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/fetch_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/fill_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/find_index_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/first_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/array/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/fixtures/encoded_strings.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/flatten_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/frozen_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/hash_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/include_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/index_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/initialize_copy_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/initialize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/insert_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/intersection_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/join_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/keep_if_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/last_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/length_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/map_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/minus_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/multiply_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/new_range_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/array/pack/a_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/at_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/b_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/c_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/comment_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/d_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/e_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/empty_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/f_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/g_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/h_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/i_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/l_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/m_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/n_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/p_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/percent_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/q_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/array/pack/shared/basic.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/shared/encodings.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/shared/float.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/shared/integer.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/shared/numeric_basic.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/shared/string.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/shared/unicode.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/u_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/v_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/w_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/x_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pack/z_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/partition_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/permutation_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/plus_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/pop_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/product_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/push_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/rassoc_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/reject_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/repeated_combination_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/repeated_permutation_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/replace_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/reverse_each_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/reverse_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/rindex_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/rotate_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/sample_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/select_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/array/shared/clone.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/shared/collect.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/shared/enumeratorize.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/shared/eql.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/shared/index.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/shared/inspect.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/shared/join.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/shared/keep_if.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/shared/length.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/shared/replace.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/shared/slice.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/shift_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/shuffle_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/size_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/slice_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/sort_by_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/sort_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/take_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/take_while_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/to_a_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/to_ary_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/to_h_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/transpose_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/try_convert_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/union_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/uniq_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/unshift_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/values_at_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/array/zip_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/basicobject",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/basicobject/__id__spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/basicobject/__send___spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/basicobject/ancestors_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/basicobject/basicobject_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/basicobject/class_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/basicobject/equal_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/basicobject/equal_value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/basicobject/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/basicobject/fixtures/common.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/basicobject/fixtures/remove_method_missing.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/basicobject/initialize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/basicobject/instance_eval_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/basicobject/instance_exec_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/basicobject/method_missing_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/basicobject/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/basicobject/not_equal_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/basicobject/not_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/basicobject/singleton_method_added_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/basicobject/singleton_method_removed_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/basicobject/singleton_method_undefined_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/basicobject/superclass_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/bignum/abs_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/bignum_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/bit_and_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/bit_length_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/bit_or_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/bit_xor_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/case_compare_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/coerce_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/comparison_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/complement_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/div_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/divide_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/divmod_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/element_reference_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/eql_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/equal_value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/even_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/exponent_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/fdiv_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/gt_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/gte_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/hash_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/left_shift_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/lt_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/lte_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/magnitude_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/minus_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/modulo_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/multiply_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/negative_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/odd_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/plus_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/positive_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/remainder_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/right_shift_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/bignum/shared/abs.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/shared/divide.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/shared/equal.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/shared/modulo.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/size_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/to_f_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/bignum/uminus_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/binding",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/binding/clone_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/binding/dup_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/binding/eval_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/binding/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/binding/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/binding/local_variable_defined_p_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/binding/local_variable_get_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/binding/local_variable_set_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/binding/local_variables_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/binding/location_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/binding/receiver_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/binding/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/binding/shared/clone.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/builtin_constants",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/builtin_constants/builtin_constants_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/class",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/class/allocate_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/class/dup_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/class/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/class/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/class/inherited_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/class/initialize_copy_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/class/initialize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/class/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/class/superclass_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/comparable",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/comparable/between_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/comparable/equal_value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/comparable/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/comparable/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/comparable/gt_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/comparable/gte_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/comparable/lt_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/comparable/lte_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/complex/abs2_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/abs_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/angle_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/arg_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/coerce_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/conj_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/conjugate_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/constants_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/denominator_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/divide_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/eql_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/equal_value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/exponent_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/fdiv_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/hash_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/imag_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/imaginary_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/integer_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/magnitude_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/marshal_dump_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/minus_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/multiply_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/numerator_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/phase_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/plus_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/polar_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/quo_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/rationalize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/real_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/rect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/rectangular_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/to_f_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/to_i_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/to_r_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/complex/uminus_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/continuation",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/continuation/call_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/continuation/element_reference_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/continuation/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/dir/chdir_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/chroot_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/close_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/delete_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/dir_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/each_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/element_reference_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/entries_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/exist_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/exists_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/fileno_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/dir/fixtures/common.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/foreach_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/getwd_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/glob_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/home_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/initialize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/mkdir_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/open_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/path_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/pos_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/pwd_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/read_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/rewind_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/rmdir_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/seek_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/dir/shared/chroot.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/shared/closed.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/shared/delete.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/shared/exists.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/shared/glob.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/shared/open.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/shared/path.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/shared/pos.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/shared/pwd.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/tell_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/to_path_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/dir/unlink_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/encoding/_dump_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/_load_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/aliases_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/ascii_compatible_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/compatible_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/converter",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/encoding/converter/asciicompat_encoding_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/converter/constants_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/converter/convert_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/converter/convpath_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/converter/destination_encoding_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/converter/finish_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/converter/insert_output_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/converter/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/converter/last_error_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/converter/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/converter/primitive_convert_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/converter/primitive_errinfo_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/converter/putback_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/converter/replacement_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/converter/search_convpath_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/converter/source_encoding_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/default_external_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/default_internal_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/dummy_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/find_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/encoding/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/invalid_byte_sequence_error",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/encoding/invalid_byte_sequence_error/destination_encoding_name_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/invalid_byte_sequence_error/destination_encoding_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/invalid_byte_sequence_error/error_bytes_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/invalid_byte_sequence_error/incomplete_input_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/invalid_byte_sequence_error/readagain_bytes_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/invalid_byte_sequence_error/source_encoding_name_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/invalid_byte_sequence_error/source_encoding_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/list_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/locale_charmap_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/name_list_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/name_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/names_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/replicate_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/encoding/shared/name.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/undefined_conversion_error",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/encoding/undefined_conversion_error/destination_encoding_name_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/undefined_conversion_error/destination_encoding_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/undefined_conversion_error/error_char_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/undefined_conversion_error/source_encoding_name_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/encoding/undefined_conversion_error/source_encoding_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/enumerable/all_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/any_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/chunk_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/chunk_while_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/collect_concat_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/collect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/count_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/cycle_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/detect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/drop_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/drop_while_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/each_cons_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/each_entry_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/each_slice_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/each_with_index_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/each_with_object_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/entries_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/find_all_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/find_index_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/find_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/first_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/enumerable/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/flat_map_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/grep_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/grep_v_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/group_by_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/include_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/inject_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/lazy_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/map_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/max_by_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/max_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/member_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/min_by_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/min_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/minmax_by_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/minmax_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/none_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/one_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/partition_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/reduce_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/reject_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/reverse_each_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/select_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/enumerable/shared/collect.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/shared/collect_concat.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/shared/entries.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/shared/enumerable_enumeratorized.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/shared/enumeratorized.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/shared/find.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/shared/find_all.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/shared/include.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/shared/inject.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/shared/take.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/slice_after_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/slice_before_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/slice_when_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/sort_by_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/sort_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/take_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/take_while_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/to_a_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/to_h_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerable/zip_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/enumerator/each_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/each_with_index_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/each_with_object_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/enum_for_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/enumerator_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/feed_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/enumerator/fixtures/common.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/generator",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/enumerator/generator/each_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/generator/initialize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/initialize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/inject_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/lazy",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/enumerator/lazy/collect_concat_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/lazy/collect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/lazy/drop_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/lazy/drop_while_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/lazy/enum_for_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/lazy/find_all_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/lazy/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/enumerator/lazy/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/lazy/flat_map_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/lazy/force_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/lazy/grep_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/lazy/grep_v_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/lazy/initialize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/lazy/lazy_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/lazy/map_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/lazy/reject_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/lazy/select_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/lazy/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/enumerator/lazy/shared/collect.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/lazy/shared/collect_concat.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/lazy/shared/select.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/lazy/shared/to_enum.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/lazy/take_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/lazy/take_while_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/lazy/to_enum_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/lazy/zip_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/next_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/next_values_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/peek_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/peek_values_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/rewind_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/size_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/to_enum_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/with_index_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/with_object_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/yielder",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/enumerator/yielder/append_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/yielder/initialize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/enumerator/yielder/yield_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/env/assoc_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/clear_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/delete_if_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/delete_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/each_key_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/each_pair_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/each_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/each_value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/element_reference_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/element_set_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/empty_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/fetch_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/has_key_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/has_value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/include_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/index_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/indexes_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/indices_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/invert_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/keep_if_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/key_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/keys_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/length_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/member_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/rassoc_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/rehash_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/reject_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/replace_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/select_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/env/shared/each.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/shared/include.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/shared/key.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/shared/length.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/shared/store.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/shared/to_hash.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/shared/value.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/shift_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/size_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/store_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/to_a_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/to_h_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/to_hash_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/update_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/values_at_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/env/values_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/exception/args_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/arguments_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/backtrace_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/case_compare_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/cause_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/destination_encoding_name_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/destination_encoding_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/equal_value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/errno_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/error_bytes_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/error_char_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/exception_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/exit_value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/exception/fixtures/common.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/incomplete_input_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/initialize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/io_error_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/load_error_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/message_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/name_error_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/name_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/no_method_error_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/range_error_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/readagain_bytes_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/reason_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/receiver_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/result_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/script_error_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/set_backtrace_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/exception/shared/new.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/signal_exception_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/signm_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/signo_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/source_encoding_name_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/source_encoding_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/standard_error_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/status_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/success_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/system_call_error_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/system_stack_error_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/exception/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/false",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/false/and_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/false/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/false/or_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/false/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/false/xor_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fiber",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/fiber/count_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fiber/list_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fiber/main_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fiber/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fiber/resume_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fiber/stack_size_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fiber/transfer_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fiber/yield_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/file/absolute_path_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/atime_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/basename_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/birthtime_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/blockdev_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/chardev_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/chmod_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/chown_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/constants",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/file/constants/constants_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/constants_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/ctime_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/delete_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/directory_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/dirname_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/executable_real_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/executable_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/exist_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/exists_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/expand_path_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/extname_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/file_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/file/fixtures/common.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/fixtures/do_not_remove",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/fixtures/file_types.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/flock_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/fnmatch_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/ftype_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/grpowned_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/identical_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/initialize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/join_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/lchmod_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/lchown_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/link_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/lstat_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/mkfifo_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/mtime_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/null_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/open_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/owned_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/path_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/pipe_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/read_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/readable_real_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/readable_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/readlink_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/realdirpath_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/realpath_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/rename_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/reopen_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/setgid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/setuid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/file/shared/fnmatch.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/shared/open.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/shared/read.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/shared/stat.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/shared/unlink.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/size_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/socket_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/split_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/file/stat/atime_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/birthtime_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/blksize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/blockdev_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/blocks_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/chardev_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/comparison_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/ctime_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/dev_major_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/dev_minor_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/dev_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/directory_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/executable_real_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/executable_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/file_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/file/stat/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/ftype_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/gid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/grpowned_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/ino_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/mode_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/mtime_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/nlink_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/owned_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/pipe_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/rdev_major_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/rdev_minor_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/rdev_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/readable_real_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/readable_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/setgid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/setuid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/size_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/socket_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/sticky_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/symlink_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/uid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/world_readable_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/world_writable_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/writable_real_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/writable_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat/zero_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/stat_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/sticky_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/symlink_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/to_path_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/truncate_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/umask_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/unlink_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/utime_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/world_readable_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/world_writable_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/writable_real_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/writable_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/file/zero_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/filetest",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/filetest/blockdev_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/filetest/chardev_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/filetest/directory_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/filetest/executable_real_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/filetest/executable_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/filetest/exist_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/filetest/exists_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/filetest/file_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/filetest/grpowned_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/filetest/identical_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/filetest/owned_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/filetest/pipe_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/filetest/readable_real_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/filetest/readable_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/filetest/setgid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/filetest/setuid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/filetest/size_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/filetest/socket_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/filetest/sticky_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/filetest/symlink_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/filetest/world_readable_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/filetest/world_writable_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/filetest/writable_real_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/filetest/writable_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/filetest/zero_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/fixnum/abs_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/bit_and_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/bit_length_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/bit_or_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/bit_xor_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/case_compare_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/coerce_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/comparison_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/complement_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/div_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/divide_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/divmod_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/element_reference_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/equal_value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/even_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/exponent_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/fdiv_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/fixnum_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/gt_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/gte_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/hash_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/left_shift_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/lt_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/lte_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/magnitude_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/minus_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/modulo_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/multiply_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/negative_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/odd_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/plus_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/positive_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/right_shift_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/fixnum/shared/abs.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/shared/equal.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/shared/modulo.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/size_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/succ_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/to_f_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/uminus_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/fixnum/zero_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/float/abs_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/angle_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/arg_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/case_compare_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/ceil_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/coerce_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/comparison_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/constants_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/denominator_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/divide_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/divmod_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/eql_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/equal_value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/exponent_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/fdiv_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/finite_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/float/fixtures/coerce.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/float_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/floor_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/gt_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/gte_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/hash_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/infinite_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/lt_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/lte_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/magnitude_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/minus_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/modulo_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/multiply_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/nan_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/negative_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/next_float_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/numerator_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/phase_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/plus_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/positive_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/prev_float_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/quo_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/rationalize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/round_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/float/shared/abs.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/shared/equal.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/shared/modulo.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/shared/quo.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/shared/to_i.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/to_f_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/to_i_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/to_int_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/to_r_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/truncate_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/uminus_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/uplus_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/float/zero_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/gc",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/gc/count_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/gc/disable_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/gc/enable_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/gc/garbage_collect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/gc/profiler",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/gc/profiler/clear_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/gc/profiler/disable_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/gc/profiler/enable_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/gc/profiler/enabled_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/gc/profiler/report_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/gc/profiler/result_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/gc/profiler/total_time_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/gc/start_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/gc/stress_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/hash/allocate_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/assoc_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/clear_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/clone_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/compare_by_identity_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/constructor_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/default_proc_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/default_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/delete_if_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/delete_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/dig_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/each_key_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/each_pair_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/each_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/each_value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/element_reference_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/element_set_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/empty_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/eql_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/equal_value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/fetch_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/fetch_values_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/hash/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/flatten_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/greater_than_or_equal_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/greater_than_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/has_key_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/has_value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/hash_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/include_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/index_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/initialize_copy_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/initialize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/invert_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/keep_if_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/key_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/keys_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/length_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/less_than_or_equal_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/less_than_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/member_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/merge_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/rassoc_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/rehash_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/reject_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/replace_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/select_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/hash/shared/comparison.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/shared/each.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/shared/eql.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/shared/equal.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/shared/greater_than.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/shared/index.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/shared/iteration.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/shared/key.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/shared/length.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/shared/less_than.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/shared/replace.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/shared/store.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/shared/to_s.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/shared/update.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/shared/value.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/shared/values_at.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/shift_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/size_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/sort_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/store_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/to_a_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/to_h_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/to_hash_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/to_proc_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/try_convert_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/update_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/values_at_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/hash/values_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/integer",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/integer/ceil_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/integer/chr_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/integer/denominator_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/integer/downto_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/integer/even_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/integer/floor_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/integer/gcd_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/integer/gcdlcm_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/integer/integer_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/integer/lcm_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/integer/next_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/integer/numerator_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/integer/odd_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/integer/ord_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/integer/pred_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/integer/rationalize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/integer/round_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/integer/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/integer/shared/next.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/integer/shared/to_i.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/integer/succ_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/integer/times_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/integer/to_i_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/integer/to_int_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/integer/to_r_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/integer/truncate_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/integer/upto_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/io/advise_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/binmode_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/binread_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/binwrite_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/bytes_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/chars_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/close_on_exec_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/close_read_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/close_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/close_write_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/closed_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/codepoints_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/constants_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/copy_stream_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/dup_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/each_byte_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/each_char_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/each_codepoint_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/each_line_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/each_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/eof_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/external_encoding_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/fcntl_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/fdatasync_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/fileno_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/io/fixtures/bom_UTF-16BE.txt",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/fixtures/bom_UTF-16LE.txt",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/fixtures/bom_UTF-32BE.txt",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/fixtures/bom_UTF-32LE.txt",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/fixtures/bom_UTF-8.txt",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/fixtures/copy_stream.txt",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/fixtures/empty.txt",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/fixtures/lines.txt",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/fixtures/no_bom_UTF-8.txt",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/fixtures/numbered_lines.txt",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/fixtures/one_byte.txt",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/fixtures/read_binary.txt",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/fixtures/read_euc_jp.txt",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/fixtures/read_text.txt",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/fixtures/reopen_stdout.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/flush_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/for_fd_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/foreach_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/fsync_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/getbyte_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/getc_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/gets_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/initialize_copy_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/initialize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/internal_encoding_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/io_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/ioctl_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/isatty_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/lineno_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/lines_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/open_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/output_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/pid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/pipe_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/popen_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/pos_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/print_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/printf_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/putc_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/puts_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/read_nonblock_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/read_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/readbyte_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/readchar_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/readline_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/readlines_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/readpartial_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/reopen_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/rewind_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/seek_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/select_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/set_encoding_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/io/shared/binwrite.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/shared/chars.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/shared/codepoints.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/shared/each.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/shared/gets_ascii.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/shared/new.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/shared/pos.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/shared/readlines.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/shared/tty.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/shared/write.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/shared/z_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/stat_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/sync_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/sysopen_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/sysread_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/sysseek_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/syswrite_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/tell_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/to_i_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/to_io_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/try_convert_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/tty_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/ungetbyte_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/ungetc_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/write_nonblock_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/io/write_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/kernel/Array_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/Complex_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/Float_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/Hash_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/Integer_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/Rational_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/String_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/__callee___spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/__dir___spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/__method___spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/__send___spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/abort_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/at_exit_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/autoload_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/backtick_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/binding_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/block_given_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/callcc_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/caller_locations_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/caller_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/case_compare_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/catch_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/chomp_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/chop_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/class_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/clone_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/comparison_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/define_singleton_method_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/display_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/dup_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/enum_for_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/eql_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/equal_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/equal_value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/eval_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/exec_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/exit_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/extend_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/fail_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/kernel/fixtures/__method__.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/fixtures/autoload_b.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/fixtures/autoload_c.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/fixtures/autoload_d.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/fixtures/caller.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/fixtures/caller_locations.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/fixtures/chomp.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/fixtures/chomp_f.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/fixtures/chop.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/fixtures/chop_f.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/fixtures/eval_locals.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/fixtures/eval_return_with_lambda.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/fixtures/eval_return_without_lambda.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/fixtures/test.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/fork_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/format_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/freeze_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/frozen_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/gets_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/global_variables_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/gsub_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/initialize_clone_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/initialize_copy_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/initialize_dup_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/instance_eval_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/instance_of_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/instance_variable_defined_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/instance_variable_get_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/instance_variable_set_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/instance_variables_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/is_a_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/iterator_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/itself_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/kind_of_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/lambda_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/load_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/local_variables_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/loop_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/match_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/method_missing_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/method_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/methods_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/nil_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/not_match_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/open_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/p_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/print_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/printf_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/private_methods_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/proc_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/protected_methods_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/public_method_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/public_methods_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/public_send_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/putc_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/puts_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/raise_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/rand_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/readline_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/readlines_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/remove_instance_variable_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/require_relative_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/require_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/respond_to_missing_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/respond_to_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/select_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/send_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/set_trace_func_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/kernel/shared/__method__.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/shared/lambda.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/shared/load.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/shared/method.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/shared/require.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/shared/send.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/singleton_class_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/singleton_methods_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/sleep_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/spawn_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/sprintf_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/srand_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/sub_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/syscall_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/system_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/taint_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/tainted_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/tap_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/test_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/throw_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/to_enum_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/trace_var_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/trap_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/trust_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/type_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/untaint_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/untrace_var_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/untrust_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/untrusted_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/kernel/warn_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/main",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/main/def_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/main/define_method_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/main/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/main/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/main/fixtures/wrapped_include.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/main/include_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/main/private_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/main/public_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/main/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/marshal",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/marshal/dump_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/marshal/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/marshal/fixtures/marshal_data.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/marshal/fixtures/marshal_data19.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/marshal/fixtures/random.dump",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/marshal/float_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/marshal/load_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/marshal/major_version_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/marshal/minor_version_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/marshal/restore_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/marshal/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/marshal/shared/load.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/matchdata",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/matchdata/begin_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/matchdata/captures_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/matchdata/element_reference_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/matchdata/end_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/matchdata/eql_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/matchdata/equal_value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/matchdata/hash_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/matchdata/initialize_copy_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/matchdata/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/matchdata/length_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/matchdata/names_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/matchdata/offset_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/matchdata/post_match_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/matchdata/pre_match_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/matchdata/regexp_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/matchdata/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/matchdata/shared/eql.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/matchdata/shared/length.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/matchdata/size_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/matchdata/string_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/matchdata/to_a_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/matchdata/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/matchdata/values_at_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/math",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/math/acos_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/math/acosh_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/math/asin_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/math/asinh_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/math/atan2_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/math/atan_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/math/atanh_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/math/cbrt_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/math/constants_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/math/cos_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/math/cosh_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/math/erf_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/math/erfc_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/math/exp_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/math/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/math/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/math/frexp_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/math/gamma_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/math/hypot_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/math/ldexp_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/math/lgamma_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/math/log10_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/math/log2_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/math/log_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/math/sin_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/math/sinh_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/math/sqrt_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/math/tan_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/math/tanh_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/method",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/method/arity_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/method/call_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/method/clone_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/method/curry_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/method/element_reference_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/method/eql_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/method/equal_value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/method/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/method/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/method/hash_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/method/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/method/name_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/method/owner_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/method/parameters_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/method/receiver_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/method/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/method/shared/call.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/method/shared/eql.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/method/shared/to_s.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/method/source_location_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/method/super_method_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/method/to_proc_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/method/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/method/unbind_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/module/alias_method_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/allocate_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/ancestors_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/append_features_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/attr_accessor_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/attr_reader_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/attr_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/attr_writer_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/autoload_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/case_compare_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/class_eval_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/class_exec_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/class_variable_defined_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/class_variable_get_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/class_variable_set_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/class_variables_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/comparison_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/const_defined_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/const_get_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/const_missing_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/const_set_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/constants_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/define_method_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/define_singleton_method_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/eql_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/equal_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/equal_value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/extend_object_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/extended_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/module/fixtures/autoload.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/autoload_abc.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/autoload_c.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/autoload_concur.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/autoload_d.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/autoload_e.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/autoload_empty.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/autoload_ex1.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/autoload_f.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/autoload_g.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/autoload_h.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/autoload_i.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/autoload_j.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/autoload_k.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/autoload_lm.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/autoload_n.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/autoload_o.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/autoload_r.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/autoload_s.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/autoload_scope.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/autoload_subclass.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/autoload_t.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/autoload_v.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/autoload_w.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/autoload_w2.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/autoload_x.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/autoload_z.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/module.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/name.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/path1",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/module/fixtures/path1/load_path.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/path2",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/module/fixtures/path2/load_path.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/fixtures/repeated_concurrent_autoload.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/freeze_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/gt_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/gte_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/include_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/included_modules_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/included_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/initialize_copy_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/initialize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/instance_method_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/instance_methods_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/lt_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/lte_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/method_added_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/method_defined_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/method_removed_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/method_undefined_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/module_eval_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/module_exec_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/module_function_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/name_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/nesting_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/prepend_features_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/prepend_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/prepended_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/private_class_method_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/private_constant_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/private_instance_methods_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/private_method_defined_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/private_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/protected_instance_methods_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/protected_method_defined_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/protected_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/public_class_method_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/public_constant_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/public_instance_method_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/public_instance_methods_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/public_method_defined_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/public_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/remove_class_variable_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/remove_const_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/remove_method_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/module/shared/class_eval.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/shared/class_exec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/shared/equal_value.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/shared/set_visibility.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/module/undef_method_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/mutex",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/mutex/lock_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/mutex/locked_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/mutex/sleep_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/mutex/synchronize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/mutex/try_lock_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/mutex/unlock_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/nil",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/nil/and_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/nil/dup_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/nil/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/nil/nil_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/nil/or_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/nil/rationalize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/nil/to_a_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/nil/to_c_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/nil/to_f_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/nil/to_h_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/nil/to_i_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/nil/to_r_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/nil/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/nil/xor_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/numeric/abs2_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/abs_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/angle_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/arg_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/ceil_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/coerce_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/comparison_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/conj_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/conjugate_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/denominator_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/div_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/divmod_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/eql_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/fdiv_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/numeric/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/floor_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/i_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/imag_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/imaginary_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/initialize_copy_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/integer_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/magnitude_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/modulo_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/negative_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/nonzero_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/numerator_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/numeric_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/phase_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/polar_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/positive_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/quo_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/real_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/rect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/rectangular_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/remainder_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/round_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/numeric/shared/abs.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/shared/quo.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/shared/rect.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/shared/step.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/singleton_method_added_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/step_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/to_c_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/to_int_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/truncate_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/uminus_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/uplus_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/numeric/zero_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/object",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/object/clone_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/object/dup_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/object/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/object/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/object/initialize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/object/instance_exec_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/object/instance_of_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/object/is_a_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/object/kind_of_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/object/match_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/object/metaclass_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/object/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/object/object_id_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/object/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/object/shared/dup_clone.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/object/shared/kind_of.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/objectspace",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/objectspace/_id2ref_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/objectspace/add_finalizer_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/objectspace/call_finalizer_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/objectspace/count_objects_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/objectspace/define_finalizer_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/objectspace/each_object_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/objectspace/finalizers_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/objectspace/fixtures.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/objectspace/garbage_collect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/objectspace/remove_finalizer_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/objectspace/undefine_finalizer_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/proc",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/proc/allocate_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/proc/arity_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/proc/binding_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/proc/block_pass_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/proc/call_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/proc/case_compare_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/proc/clone_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/proc/curry_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/proc/dup_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/proc/element_reference_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/proc/eql_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/proc/equal_value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/proc/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/proc/fixtures/common.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/proc/fixtures/source_location.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/proc/hash_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/proc/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/proc/lambda_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/proc/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/proc/parameters_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/proc/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/proc/shared/call.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/proc/shared/call_arguments.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/proc/shared/dup.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/proc/shared/equal.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/proc/shared/to_s.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/proc/source_location_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/proc/to_proc_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/proc/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/proc/yield_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/process/abort_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/constants_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/daemon_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/detach_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/egid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/euid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/exec_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/exit_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/exitstatus_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/process/fixtures/common.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/fixtures/daemon.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/fixtures/kill.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/fork_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/getpgid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/getpgrp_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/getpriority_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/getrlimit_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/gid",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/process/gid/change_privilege_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/gid/eid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/gid/grant_privilege_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/gid/re_exchange_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/gid/re_exchangeable_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/gid/rid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/gid/sid_available_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/gid/switch_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/gid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/groups_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/initgroups_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/initialize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/kill_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/maxgroups_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/pid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/ppid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/set_proctitle_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/setpgid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/setpgrp_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/setpriority_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/setrlimit_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/setsid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/spawn_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/status",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/process/status/_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/status/coredump_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/status/equal_value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/status/exited_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/status/exitstatus_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/status/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/status/pid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/status/right_shift_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/status/signaled_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/status/stopped_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/status/stopsig_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/status/success_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/status/termsig_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/status/to_i_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/status/to_int_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/status/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/sys",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/process/sys/getegid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/sys/geteuid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/sys/getgid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/sys/getuid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/sys/issetugid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/sys/setegid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/sys/seteuid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/sys/setgid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/sys/setregid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/sys/setresgid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/sys/setresuid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/sys/setreuid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/sys/setrgid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/sys/setruid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/sys/setuid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/times_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/uid",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/process/uid/change_privilege_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/uid/eid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/uid/grant_privilege_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/uid/re_exchange_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/uid/re_exchangeable_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/uid/rid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/uid/sid_available_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/uid/switch_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/uid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/wait2_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/wait_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/waitall_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/waitpid2_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/process/waitpid_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/random",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/random/bytes_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/random/equal_value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/random/new_seed_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/random/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/random/rand_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/random/seed_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/random/srand_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/range/begin_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/bsearch_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/case_compare_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/cover_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/each_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/end_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/eql_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/equal_value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/exclude_end_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/first_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/range/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/hash_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/include_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/initialize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/last_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/max_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/member_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/min_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/range_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/range/shared/begin.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/shared/cover.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/shared/cover_and_include.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/shared/end.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/shared/equal_value.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/shared/include.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/size_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/step_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/to_a_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/range/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/rational/abs_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/ceil_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/coerce_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/comparison_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/denominator_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/div_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/divide_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/divmod_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/equal_value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/exponent_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/fdiv_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/floor_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/hash_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/integer_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/magnitude_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/marshal_dump_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/minus_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/modulo_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/multiply_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/negative_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/numerator_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/plus_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/positive_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/quo_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/rational_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/rationalize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/remainder_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/round_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/to_f_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/to_i_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/to_r_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/truncate_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/rational/zero_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/regexp",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/regexp/case_compare_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/regexp/casefold_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/regexp/compile_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/regexp/encoding_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/regexp/eql_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/regexp/equal_value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/regexp/escape_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/regexp/fixed_encoding_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/regexp/hash_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/regexp/initialize_copy_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/regexp/initialize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/regexp/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/regexp/last_match_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/regexp/match_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/regexp/named_captures_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/regexp/names_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/regexp/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/regexp/options_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/regexp/quote_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/regexp/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/regexp/shared/equal_value.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/regexp/shared/new_ascii.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/regexp/shared/new_ascii_8bit.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/regexp/shared/quote.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/regexp/source_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/regexp/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/regexp/try_convert_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/regexp/union_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/signal",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/signal/list_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/signal/trap_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/string/allocate_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/append_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/ascii_only_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/b_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/bytes_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/bytesize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/byteslice_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/capitalize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/case_compare_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/casecmp_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/center_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/chars_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/chomp_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/chop_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/chr_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/clear_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/clone_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/codepoints_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/comparison_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/concat_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/count_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/crypt_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/delete_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/downcase_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/dump_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/dup_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/each_byte_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/each_char_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/each_codepoint_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/each_line_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/element_reference_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/element_set_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/empty_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/encode_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/encoding_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/end_with_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/eql_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/equal_value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/string/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/fixtures/iso-8859-9-encoding.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/fixtures/utf-8-encoding.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/force_encoding_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/getbyte_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/gsub_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/hash_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/hex_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/include_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/index_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/initialize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/insert_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/intern_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/length_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/lines_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/ljust_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/lstrip_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/match_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/minus_prefix_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/modulo_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/multiply_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/next_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/oct_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/ord_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/partition_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/plus_prefix_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/plus_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/prepend_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/replace_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/reverse_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/rindex_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/rjust_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/rpartition_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/rstrip_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/scan_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/scrub_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/setbyte_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/string/shared/chars.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/shared/codepoints.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/shared/concat.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/shared/each_char_without_block.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/shared/each_codepoint_without_block.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/shared/each_line.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/shared/each_line_without_block.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/shared/encode.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/shared/eql.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/shared/equal_value.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/shared/length.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/shared/replace.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/shared/slice.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/shared/succ.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/shared/to_a.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/shared/to_s.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/shared/to_sym.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/size_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/slice_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/split_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/squeeze_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/start_with_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/string_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/strip_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/sub_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/succ_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/sum_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/swapcase_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/to_c_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/to_f_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/to_i_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/to_r_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/to_str_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/to_sym_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/tr_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/tr_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/try_convert_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unicode_normalize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unpack",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/string/unpack/a_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unpack/at_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unpack/b_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unpack/c_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unpack/comment_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unpack/d_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unpack/e_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unpack/f_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unpack/g_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unpack/h_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unpack/i_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unpack/l_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unpack/m_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unpack/n_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unpack/p_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unpack/percent_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unpack/q_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unpack/s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unpack/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/string/unpack/shared/basic.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unpack/shared/float.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unpack/shared/integer.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unpack/shared/string.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unpack/shared/unicode.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unpack/u_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unpack/v_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unpack/w_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unpack/x_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/unpack/z_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/upcase_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/upto_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/string/valid_encoding_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/struct/dig_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/each_pair_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/each_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/element_reference_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/element_set_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/eql_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/equal_value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/struct/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/hash_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/initialize_copy_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/initialize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/instance_variables_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/length_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/members_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/select_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/struct/shared/accessor.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/shared/equal_value.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/shared/inspect.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/size_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/struct_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/tms",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/struct/tms/cstime_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/tms/cutime_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/tms/element_reference_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/tms/members_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/tms/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/tms/stime_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/tms/utime_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/to_a_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/to_h_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/values_at_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/struct/values_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/symbol/all_symbols_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/capitalize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/case_compare_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/casecmp_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/comparison_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/downcase_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/element_reference_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/empty_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/encoding_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/equal_value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/symbol/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/id2name_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/intern_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/length_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/match_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/next_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/symbol/shared/id2name.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/shared/length.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/shared/slice.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/shared/succ.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/size_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/slice_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/succ_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/swapcase_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/symbol_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/to_proc_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/to_sym_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/upcase_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/symbol/versions",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/symbol/versions/encoding_1.9_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/systemexit",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/systemexit/initialize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/systemexit/success_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/thread/abort_on_exception_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/add_trace_func_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/alive_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/allocate_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/backtrace",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/thread/backtrace/location",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/thread/backtrace/location/absolute_path_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/backtrace/location/base_label_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/backtrace/location/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/thread/backtrace/location/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/backtrace/location/fixtures/main.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/backtrace/location/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/backtrace/location/label_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/backtrace/location/lineno_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/backtrace/location/path_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/backtrace/location/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/thread/backtrace/location/shared/to_string.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/backtrace/location/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/backtrace_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/count_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/current_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/element_reference_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/element_set_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/exclusive_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/exit_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/fiber_list_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/thread/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/fork_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/group_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/initialize_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/join_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/key_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/keys_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/kill_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/list_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/main_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/name_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/pass_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/priority_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/raise_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/run_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/safe_level_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/set_trace_func_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/thread/shared/exit.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/shared/start.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/shared/wakeup.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/stack_size_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/start_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/status_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/stop_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/terminate_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/thread_variable_get_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/thread_variable_key_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/thread_variable_set_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/thread_variables_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/thread/wakeup_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/threadgroup",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/threadgroup/add_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/threadgroup/default_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/threadgroup/enclose_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/threadgroup/enclosed_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/threadgroup/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/threadgroup/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/threadgroup/list_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/time/_dump_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/_load_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/asctime_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/at_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/comparison_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/ctime_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/day_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/dst_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/dup_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/eql_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/time/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/fixtures/methods.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/friday_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/getgm_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/getlocal_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/getutc_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/gm_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/gmt_offset_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/gmt_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/gmtime_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/gmtoff_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/hash_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/hour_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/initialize_copy_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/isdst_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/local_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/localtime_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/mday_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/min_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/minus_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/mktime_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/mon_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/monday_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/month_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/new_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/now_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/nsec_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/plus_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/round_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/saturday_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/sec_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/time/shared/asctime.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/shared/day.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/shared/getgm.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/shared/gm.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/shared/gmt_offset.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/shared/gmtime.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/shared/inspect.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/shared/isdst.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/shared/local.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/shared/month.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/shared/now.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/shared/time_params.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/shared/to_i.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/strftime_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/subsec_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/succ_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/sunday_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/thursday_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/time_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/to_a_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/to_f_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/to_i_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/to_r_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/tuesday_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/tv_nsec_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/tv_sec_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/tv_usec_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/usec_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/utc_offset_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/utc_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/wday_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/wednesday_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/yday_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/year_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/time/zone_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/true",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/true/and_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/true/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/true/or_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/true/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/true/xor_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/unboundmethod",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/unboundmethod/arity_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/unboundmethod/bind_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/unboundmethod/clone_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/unboundmethod/eql_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/unboundmethod/equal_value_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/unboundmethod/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/unboundmethod/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/unboundmethod/hash_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/unboundmethod/inspect_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/unboundmethod/name_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/unboundmethod/owner_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/unboundmethod/parameters_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/unboundmethod/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/core/unboundmethod/shared/to_s.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/unboundmethod/source_location_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/unboundmethod/super_method_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/core/unboundmethod/to_s_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/fixtures/class.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/class_variables.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/fixtures/code/a",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/fixtures/code/a/load_fixture.bundle",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/a/load_fixture.dll",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/a/load_fixture.dylib",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/a/load_fixture.so",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/b",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/fixtures/code/b/load_fixture.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/concurrent.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/concurrent2.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/concurrent3.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/file_fixture.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/gem",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/fixtures/code/gem/load_fixture.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/line_fixture.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/load_ext_fixture.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/load_fixture",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/load_fixture.bundle",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/load_fixture.dll",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/load_fixture.dylib",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/load_fixture.ext",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/load_fixture.ext.bundle",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/load_fixture.ext.dll",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/load_fixture.ext.dylib",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/load_fixture.ext.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/load_fixture.ext.so",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/load_fixture.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/load_fixture.so",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/load_wrap_method_fixture.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/methods_fixture.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/raise_fixture.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/recursive_load_fixture.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/recursive_require_fixture.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/symlink",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/fixtures/code/symlink/symlink1.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/symlink/symlink2",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/fixtures/code/symlink/symlink2/symlink2.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code/wrap_fixture.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/code_loading.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/constants.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/enumerator",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/fixtures/enumerator/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/kernel",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/fixtures/kernel/callcc.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/kernel/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/kernel/singleton_method.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/math",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/fixtures/math/common.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/rational.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/reflection.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/fixtures/thread_runner.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/language/BEGIN_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/README",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/alias_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/and_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/array_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/block_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/break_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/case_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/class_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/class_variable_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/constants_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/def_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/defined_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/encoding_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/ensure_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/execution_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/file_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/language/fixtures/argv_encoding.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/fixtures/array.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/fixtures/block.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/fixtures/break.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/fixtures/break_lambda_toplevel.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/fixtures/break_lambda_toplevel_block.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/fixtures/break_lambda_toplevel_method.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/fixtures/classes.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/fixtures/coding_us_ascii.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/fixtures/coding_utf_8.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/fixtures/constant_visibility.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/fixtures/defined.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/fixtures/ensure.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/fixtures/file.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/fixtures/match_operators.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/fixtures/metaclass.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/fixtures/module.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/fixtures/next.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/fixtures/precedence.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/fixtures/private.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/fixtures/return.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/fixtures/return19.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/fixtures/rubyopt.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/fixtures/send.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/fixtures/super.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/fixtures/variables.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/fixtures/yield.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/for_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/hash_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/if_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/lambda_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/line_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/loop_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/magic_comment_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/match_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/metaclass_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/method_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/module_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/next_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/not_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/numbers_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/optional_assignments_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/or_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/order_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/precedence_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/predefined",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/language/predefined/data_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/predefined/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/language/predefined/fixtures/data1.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/predefined/fixtures/data2.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/predefined/fixtures/data3.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/predefined/fixtures/data4.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/predefined/fixtures/data_flock.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/predefined/fixtures/data_only.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/predefined/fixtures/print_data.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/predefined_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/private_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/proc_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/redo_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/regexp",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/language/regexp/anchors_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/regexp/back-references_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/regexp/character_classes_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/regexp/encoding_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/regexp/escapes_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/regexp/grouping_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/regexp/interpolation_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/regexp/modifiers_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/regexp/repetition_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/regexp_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/rescue_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/retry_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/return_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/send_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/language/shared/__FILE__.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/shared/__LINE__.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/singleton_class_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/string_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/super_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/symbol_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/throw_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/undef_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/unless_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/until_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/variables_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/while_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/language/yield_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/optional/capi",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/optional/capi/README",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/array_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/bignum_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/class_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/complex_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/constants_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/data_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/encoding_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/enumerator_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/exception_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/optional/capi/ext/.gitignore",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/array_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/bignum_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/class_id_under_autoload_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/class_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/class_under_autoload_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/complex_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/constants_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/data_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/encoding_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/enumerator_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/exception_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/file_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/fixnum_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/float_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/gc_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/globals_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/hash_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/integer_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/io_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/jruby.h",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/kernel_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/marshal_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/module_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/module_under_autoload_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/mri.h",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/mutex_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/numeric_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/object_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/proc_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/range_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/rational_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/regexp_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/rubinius.h",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/rubyspec.h",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/safe_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/string_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/struct_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/symbol_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/thread_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/time_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/typed_data_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/ext/util_spec.c",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/file_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/fixnum_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/optional/capi/fixtures/class.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/fixtures/const_get.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/fixtures/const_get_at.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/fixtures/const_get_from.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/fixtures/const_get_object.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/fixtures/encoding.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/fixtures/foo.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/fixtures/module.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/fixtures/module_autoload.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/fixtures/path_to_class.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/fixtures/proc.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/float_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/gc_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/globals_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/hash_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/integer_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/io_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/kernel_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/marshal_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/module_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/mutex_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/numeric_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/object_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/proc_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/rake_helper.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/range_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/rational_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/regexp_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/safe_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/spec_helper.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/string_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/struct_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/symbol_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/thread_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/time_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/typed_data_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/optional/capi/util_spec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/ruby.2.3.mspec",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/shared/complex",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/shared/complex/Complex.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/complex/abs.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/complex/abs2.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/complex/arg.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/complex/coerce.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/complex/conjugate.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/complex/constants.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/complex/denominator.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/complex/divide.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/complex/equal_value.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/complex/exponent.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/complex/float",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/shared/complex/float/arg.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/complex/hash.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/complex/image.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/complex/inspect.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/complex/minus.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/complex/multiply.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/complex/numerator.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/complex/numeric",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/shared/complex/numeric/arg.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/complex/numeric/conj.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/complex/numeric/imag.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/complex/numeric/polar.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/complex/numeric/real.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/complex/plus.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/complex/polar.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/complex/real.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/complex/rect.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/complex/to_s.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/continuation",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/shared/continuation/call.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/continuation/new.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/enumerator",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/shared/enumerator/each.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/enumerator/enum_cons.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/enumerator/enum_for.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/enumerator/new.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/enumerator/next.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/enumerator/rewind.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/enumerator/with_index.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/enumerator/with_object.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/file",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/shared/file/blockdev.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/file/chardev.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/file/directory.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/file/executable.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/file/executable_real.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/file/exist.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/file/file.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/file/grpowned.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/file/identical.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/file/owned.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/file/pipe.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/file/readable.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/file/readable_real.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/file/setgid.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/file/setuid.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/file/size.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/file/socket.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/file/sticky.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/file/symlink.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/file/world_readable.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/file/world_writable.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/file/writable.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/file/writable_real.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/file/zero.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/io",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/shared/io/putc.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/kernel",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/shared/kernel/callcc.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/kernel/method_missing.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/kernel/raise.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/kernel/singleton_method_added.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/kernel/singleton_method_removed.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/kernel/singleton_method_undefined.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/math",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/shared/math/atanh.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/mutex",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/shared/mutex/lock.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/mutex/locked.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/mutex/synchronize.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/mutex/try_lock.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/mutex/unlock.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/object",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/shared/object/object_id.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/process",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/shared/process/abort.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/process/exec.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/process/exit.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/process/fixtures",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/shared/process/fixtures/map_fd.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/process/fork.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/process/spawn.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/process/times.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational",
                "type": "Tree"
            },
            {
                "path": "spec/ruby/shared/rational/Rational.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/abs.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/ceil.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/coerce.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/comparison.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/denominator.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/div.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/divide.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/divmod.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/equal_value.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/exponent.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/fdiv.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/floor.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/hash.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/inspect.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/marshal_dump.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/marshal_load.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/minus.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/modulo.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/multiply.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/numerator.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/plus.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/quo.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/remainder.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/round.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/to_f.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/to_i.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/to_r.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/to_s.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/shared/rational/truncate.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/spec_helper.rb",
                "type": "Blob"
            },
            {
                "path": "spec/ruby/version.rb",
                "type": "Blob"
            },
            {
                "path": "spec/spec_helper.rb",
                "type": "Blob"
            },
            {
                "path": "spec/tags",
                "type": "Tree"
            },
            {
                "path": "spec/tags/compiler",
                "type": "Tree"
            },
            {
                "path": "spec/tags/compiler/attrasgn_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/compiler/ensure_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/compiler/masgn_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/jit",
                "type": "Tree"
            },
            {
                "path": "spec/tags/jit/method_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/command_line",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/command_line/dash_e_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/command_line/dash_n_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/command_line/dash_upper_k_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/command_line/dash_upper_u_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/command_line/dash_x_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/command_line/rubyopt_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/core/array",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/core/array/pack",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/core/array/pack/a_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/array/pack/z_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/bignum",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/core/bignum/bit_and_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/bignum/bit_length_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/bignum/bit_or_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/bignum/bit_xor_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/bignum/lte_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/dir",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/core/dir/element_reference_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/dir/glob_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/enumerable",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/core/enumerable/cycle_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/enumerator",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/core/enumerator/next_values_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/enumerator/peek_values_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/exception",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/core/exception/receiver_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/file",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/core/file/lchmod_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/file/stat",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/core/file/stat/birthtime_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/fixnum",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/core/fixnum/bit_and_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/fixnum/bit_length_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/fixnum/bit_or_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/fixnum/bit_xor_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/integer",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/core/integer/round_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/io",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/core/io/advise_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/io/codepoints_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/io/each_codepoint_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/io/foreach_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/io/readlines_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/io/sysread_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/kernel",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/core/kernel/__callee___tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/kernel/define_singleton_method_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/kernel/eval_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/kernel/frozen_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/kernel/load_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/kernel/public_send_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/kernel/respond_to_missing_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/main",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/core/main/include_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/marshal",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/core/marshal/load_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/marshal/restore_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/method",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/core/method/curry_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/method/hash_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/module",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/core/module/define_method_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/module/name_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/proc",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/core/proc/curry_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/process",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/core/process/euid_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/process/uid_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/random",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/core/random/bytes_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/regexp",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/core/regexp/initialize_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/string",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/core/string/delete_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/string/dump_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/string/encode_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/string/inspect_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/string/unicode_normalize_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/thread",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/core/thread/abort_on_exception_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/thread/inspect_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/thread/status_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/time",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/core/time/local_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/time/minus_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/time/mktime_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/time/new_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/time/plus_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/core/time/strftime_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/language",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/language/array_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/language/block_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/language/break_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/language/constants_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/language/def_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/language/defined_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/language/encoding_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/language/hash_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/language/lambda_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/language/optional_assignments_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/language/predefined_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/language/regexp",
                "type": "Tree"
            },
            {
                "path": "spec/tags/ruby/language/regexp/back-references_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/language/regexp/character_classes_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/language/regexp/grouping_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/language/regexp/modifiers_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/language/regexp_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/language/retry_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/language/singleton_class_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/language/splat_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/language/super_tags.txt",
                "type": "Blob"
            },
            {
                "path": "spec/tags/ruby/language/symbol_tags.txt",
                "type": "Blob"
            },
            {
                "path": "tools",
                "type": "Tree"
            },
            {
                "path": "tools/agent.rb",
                "type": "Blob"
            },
            {
                "path": "tools/dtrace",
                "type": "Tree"
            },
            {
                "path": "tools/dtrace/custom.d",
                "type": "Blob"
            },
            {
                "path": "tools/dtrace/entry-counts.d",
                "type": "Blob"
            },
            {
                "path": "tools/dtrace/gc.d",
                "type": "Blob"
            },
            {
                "path": "tools/dtrace/gc.rb",
                "type": "Blob"
            },
            {
                "path": "tools/dtrace/method-trace.d",
                "type": "Blob"
            },
            {
                "path": "tools/llvm_type_extract.rb",
                "type": "Blob"
            },
            {
                "path": "tools/rubuildius",
                "type": "Tree"
            },
            {
                "path": "tools/rubuildius/README",
                "type": "Blob"
            },
            {
                "path": "tools/rubuildius/bin",
                "type": "Tree"
            },
            {
                "path": "tools/rubuildius/bin/cleanup.zsh",
                "type": "Blob"
            },
            {
                "path": "tools/rubuildius/bin/nopaste",
                "type": "Blob"
            },
            {
                "path": "tools/rubuildius/bin/pastie.rb",
                "type": "Blob"
            },
            {
                "path": "tools/rubuildius/bin/pastie_client.rb",
                "type": "Blob"
            },
            {
                "path": "tools/rubuildius/bin/rubinius.zsh",
                "type": "Blob"
            },
            {
                "path": "tools/rubuildius/matzbot",
                "type": "Tree"
            },
            {
                "path": "tools/rubuildius/matzbot/README",
                "type": "Blob"
            },
            {
                "path": "tools/rubuildius/matzbot/cron.rb",
                "type": "Blob"
            },
            {
                "path": "tools/rubuildius/matzbot/launch.rb",
                "type": "Blob"
            },
            {
                "path": "tools/rubuildius/matzbot/lib",
                "type": "Tree"
            },
            {
                "path": "tools/rubuildius/matzbot/lib/client.rb",
                "type": "Blob"
            },
            {
                "path": "tools/rubuildius/matzbot/lib/commands.rb",
                "type": "Blob"
            },
            {
                "path": "tools/rubuildius/matzbot/lib/daemon.rb",
                "type": "Blob"
            },
            {
                "path": "tools/rubuildius/matzbot/lib/matzbot.rb",
                "type": "Blob"
            },
            {
                "path": "tools/rubuildius/matzbot/lib/session.rb",
                "type": "Blob"
            },
            {
                "path": "tools/rubuildius/matzbot/plugins",
                "type": "Tree"
            },
            {
                "path": "tools/rubuildius/matzbot/plugins/git.rb",
                "type": "Blob"
            },
            {
                "path": "tools/rubuildius/repo",
                "type": "Tree"
            },
            {
                "path": "tools/rubuildius/repo/rubinius",
                "type": "Tree"
            },
            {
                "path": "tools/rubuildius/repo/rubinius/HEAD",
                "type": "Tree"
            },
            {
                "path": "tools/rubuildius/repo/rubinius/HEAD/.empty_dir",
                "type": "Blob"
            },
            {
                "path": "vendor",
                "type": "Tree"
            },
            {
                "path": "vendor/.gitignore",
                "type": "Blob"
            },
            {
                "path": "vendor/double-conversion",
                "type": "Tree"
            },
            {
                "path": "vendor/double-conversion/.gitignore",
                "type": "Blob"
            },
            {
                "path": "vendor/double-conversion/AUTHORS",
                "type": "Blob"
            },
            {
                "path": "vendor/double-conversion/COPYING",
                "type": "Blob"
            },
            {
                "path": "vendor/double-conversion/Changelog",
                "type": "Blob"
            },
            {
                "path": "vendor/double-conversion/LICENSE",
                "type": "Blob"
            },
            {
                "path": "vendor/double-conversion/Makefile",
                "type": "Blob"
            },
            {
                "path": "vendor/double-conversion/README",
                "type": "Blob"
            },
            {
                "path": "vendor/double-conversion/src",
                "type": "Tree"
            },
            {
                "path": "vendor/double-conversion/src/bignum-dtoa.cc",
                "type": "Blob"
            },
            {
                "path": "vendor/double-conversion/src/bignum-dtoa.h",
                "type": "Blob"
            },
            {
                "path": "vendor/double-conversion/src/bignum.cc",
                "type": "Blob"
            },
            {
                "path": "vendor/double-conversion/src/bignum.h",
                "type": "Blob"
            },
            {
                "path": "vendor/double-conversion/src/cached-powers.cc",
                "type": "Blob"
            },
            {
                "path": "vendor/double-conversion/src/cached-powers.h",
                "type": "Blob"
            },
            {
                "path": "vendor/double-conversion/src/diy-fp.cc",
                "type": "Blob"
            },
            {
                "path": "vendor/double-conversion/src/diy-fp.h",
                "type": "Blob"
            },
            {
                "path": "vendor/double-conversion/src/double-conversion.cc",
                "type": "Blob"
            },
            {
                "path": "vendor/double-conversion/src/double-conversion.h",
                "type": "Blob"
            },
            {
                "path": "vendor/double-conversion/src/fast-dtoa.cc",
                "type": "Blob"
            },
            {
                "path": "vendor/double-conversion/src/fast-dtoa.h",
                "type": "Blob"
            },
            {
                "path": "vendor/double-conversion/src/fixed-dtoa.cc",
                "type": "Blob"
            },
            {
                "path": "vendor/double-conversion/src/fixed-dtoa.h",
                "type": "Blob"
            },
            {
                "path": "vendor/double-conversion/src/ieee.h",
                "type": "Blob"
            },
            {
                "path": "vendor/double-conversion/src/strtod.cc",
                "type": "Blob"
            },
            {
                "path": "vendor/double-conversion/src/strtod.h",
                "type": "Blob"
            },
            {
                "path": "vendor/double-conversion/src/utils.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/.gitignore",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/ChangeLog",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/ChangeLog.libffi",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/ChangeLog.libffi-3.1",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/ChangeLog.libgcj",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/ChangeLog.v1",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/LICENSE",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/Makefile.am",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/Makefile.in",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/README",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/acinclude.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/aclocal.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/compile",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/config.guess",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/config.sub",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/configure",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/configure.ac",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/depcomp",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/doc",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/doc/libffi.info",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/doc/libffi.texi",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/doc/stamp-vti",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/doc/version.texi",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/fficonfig.h.in",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/generate-darwin-source-and-headers.py",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/include",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/include/Makefile.am",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/include/Makefile.in",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/include/ffi.h.in",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/include/ffi_common.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/install-sh",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/libffi.pc.in",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/libffi.xcodeproj",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/libffi.xcodeproj/project.pbxproj",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/libtool-ldflags",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/libtool-version",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/ltmain.sh",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/m4",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/m4/asmcfi.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/m4/ax_append_flag.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/m4/ax_cc_maxopt.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/m4/ax_cflags_warn_all.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/m4/ax_check_compile_flag.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/m4/ax_compiler_vendor.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/m4/ax_configure_args.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/m4/ax_enable_builddir.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/m4/ax_gcc_archflag.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/m4/ax_gcc_x86_cpuid.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/m4/libtool.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/m4/ltoptions.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/m4/ltsugar.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/m4/ltversion.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/m4/lt~obsolete.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/man",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/man/Makefile.am",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/man/Makefile.in",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/man/ffi.3",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/man/ffi_call.3",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/man/ffi_prep_cif.3",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/man/ffi_prep_cif_var.3",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/mdate-sh",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/missing",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/msvcc.sh",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/aarch64",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/aarch64/ffi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/aarch64/ffitarget.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/aarch64/sysv.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/alpha",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/alpha/ffi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/alpha/ffitarget.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/alpha/osf.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/arc",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/arc/arcompact.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/arc/ffi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/arc/ffitarget.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/arm",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/arm/ffi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/arm/ffitarget.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/arm/gentramp.sh",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/arm/sysv.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/arm/trampoline.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/avr32",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/avr32/ffi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/avr32/ffitarget.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/avr32/sysv.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/bfin",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/bfin/ffi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/bfin/ffitarget.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/bfin/sysv.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/closures.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/cris",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/cris/ffi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/cris/ffitarget.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/cris/sysv.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/debug.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/dlmalloc.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/frv",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/frv/eabi.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/frv/ffi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/frv/ffitarget.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/ia64",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/ia64/ffi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/ia64/ffitarget.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/ia64/ia64_flags.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/ia64/unix.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/java_raw_api.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/m32r",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/m32r/ffi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/m32r/ffitarget.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/m32r/sysv.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/m68k",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/m68k/ffi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/m68k/ffitarget.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/m68k/sysv.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/m88k",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/m88k/ffi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/m88k/ffitarget.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/m88k/obsd.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/metag",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/metag/ffi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/metag/ffitarget.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/metag/sysv.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/microblaze",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/microblaze/ffi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/microblaze/ffitarget.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/microblaze/sysv.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/mips",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/mips/ffi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/mips/ffitarget.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/mips/n32.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/mips/o32.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/moxie",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/moxie/eabi.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/moxie/ffi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/moxie/ffitarget.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/nios2",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/nios2/ffi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/nios2/ffitarget.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/nios2/sysv.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/or1k",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/or1k/ffi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/or1k/ffitarget.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/or1k/sysv.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/pa",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/pa/ffi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/pa/ffitarget.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/pa/hpux32.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/pa/linux.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/powerpc",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/powerpc/aix.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/powerpc/aix_closure.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/powerpc/asm.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/powerpc/darwin.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/powerpc/darwin_closure.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/powerpc/ffi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/powerpc/ffi_darwin.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/powerpc/ffi_linux64.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/powerpc/ffi_powerpc.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/powerpc/ffi_sysv.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/powerpc/ffitarget.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/powerpc/linux64.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/powerpc/linux64_closure.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/powerpc/ppc_closure.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/powerpc/sysv.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/prep_cif.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/raw_api.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/s390",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/s390/ffi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/s390/ffitarget.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/s390/sysv.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/sh",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/sh/ffi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/sh/ffitarget.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/sh/sysv.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/sh64",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/sh64/ffi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/sh64/ffitarget.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/sh64/sysv.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/sparc",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/sparc/ffi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/sparc/ffitarget.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/sparc/v8.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/sparc/v9.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/tile",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/tile/ffi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/tile/ffitarget.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/tile/tile.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/types.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/vax",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/vax/elfbsd.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/vax/ffi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/vax/ffitarget.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/x86",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/x86/darwin.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/x86/darwin64.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/x86/ffi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/x86/ffi64.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/x86/ffitarget.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/x86/freebsd.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/x86/sysv.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/x86/unix64.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/x86/win32.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/x86/win64.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/xtensa",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/src/xtensa/ffi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/xtensa/ffitarget.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/src/xtensa/sysv.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/testsuite/Makefile.am",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/Makefile.in",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/config",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/testsuite/config/default.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/lib",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/testsuite/lib/libffi.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/lib/target-libpath.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/lib/wrapper.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call",
                "type": "Tree"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/call.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/closure_fn0.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/closure_fn1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/closure_fn2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/closure_fn3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/closure_fn4.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/closure_fn5.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/closure_fn6.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/closure_loc_fn0.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/closure_simple.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_12byte.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_16byte.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_18byte.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_19byte.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_1_1byte.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_20byte.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_20byte1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_24byte.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_2byte.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_3_1byte.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_3byte1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_3byte2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_4_1byte.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_4byte.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_5_1_byte.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_5byte.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_64byte.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_6_1_byte.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_6byte.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_7_1_byte.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_7byte.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_8byte.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_9byte1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_9byte2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_align_double.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_align_float.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_align_longdouble.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_align_longdouble_split.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_align_longdouble_split2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_align_pointer.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_align_sint16.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_align_sint32.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_align_sint64.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_align_uint16.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_align_uint32.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_align_uint64.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_dbls_struct.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_double.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_double_va.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_float.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_longdouble.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_longdouble_va.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_multi_schar.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_multi_sshort.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_multi_sshortchar.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_multi_uchar.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_multi_ushort.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_multi_ushortchar.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_pointer.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_pointer_stack.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_schar.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_sint.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_sshort.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_struct_va1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_uchar.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_uchar_va.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_uint.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_uint_va.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_ulong_va.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_ulonglong.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_ushort.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/cls_ushort_va.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/err_bad_abi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/err_bad_typedef.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/ffitest.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/float.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/float1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/float2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/float3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/float4.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/float_va.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/huge_struct.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/many.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/many2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/negint.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/nested_struct.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/nested_struct1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/nested_struct10.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/nested_struct11.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/nested_struct2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/nested_struct3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/nested_struct4.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/nested_struct5.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/nested_struct6.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/nested_struct7.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/nested_struct8.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/nested_struct9.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/problem1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/promotion.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/pyobjc-tc.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/return_dbl.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/return_dbl1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/return_dbl2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/return_fl.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/return_fl1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/return_fl2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/return_fl3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/return_ldl.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/return_ll.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/return_ll1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/return_sc.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/return_sl.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/return_uc.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/return_ul.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/stret_large.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/stret_large2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/stret_medium.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/stret_medium2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/strlen.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/strlen2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/strlen3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/strlen4.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/struct1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/struct2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/struct3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/struct4.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/struct5.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/struct6.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/struct7.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/struct8.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/struct9.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/testclosure.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/uninitialized.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/unwindtest.cc",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/unwindtest_ffi_call.cc",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/va_1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/va_struct1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/va_struct2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/testsuite/libffi.call/va_struct3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libffi/texinfo.tex",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/AUTHORS",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/ChangeLog",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/LICENSE",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/Makefile.am",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/Makefile.in",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/README.markdown",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/THANKS",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/aclocal.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/autogen.sh",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/build-aux",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/build-aux/compile",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/build-aux/config.guess",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/build-aux/config.sub",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/build-aux/depcomp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/build-aux/install-sh",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/build-aux/ltmain.sh",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/build-aux/missing",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/build-aux/test-driver",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/compile",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/config.guess",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/config.sub",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/configure",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/configure.ac",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/depcomp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/dist-build",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/dist-build/Makefile.am",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/dist-build/Makefile.in",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/dist-build/android-arm.sh",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/dist-build/android-armv7-a.sh",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/dist-build/android-armv8-a.sh",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/dist-build/android-build.sh",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/dist-build/android-mips32.sh",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/dist-build/android-mips64.sh",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/dist-build/android-x86.sh",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/dist-build/android-x86_64.sh",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/dist-build/emscripten.sh",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/dist-build/ios.sh",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/dist-build/msys2-win32.sh",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/dist-build/msys2-win64.sh",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/dist-build/nativeclient-pnacl.sh",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/dist-build/nativeclient-x86.sh",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/dist-build/nativeclient-x86_64.sh",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/install-sh",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/libsodium-uninstalled.pc.in",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/libsodium.pc.in",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/libsodium.sln",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/libsodium.vcxproj",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/libsodium.vcxproj.filters",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/ltmain.sh",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/m4",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/m4/ax_check_compile_flag.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/m4/ax_check_define.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/m4/ax_check_link_flag.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/m4/ax_pthread.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/m4/ax_valgrind_check.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/m4/ld-output-def.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/m4/libtool.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/m4/ltoptions.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/m4/ltsugar.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/m4/ltversion.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/m4/lt~obsolete.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/missing",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/msvc-scripts",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/msvc-scripts/Makefile.am",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/msvc-scripts/Makefile.in",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/msvc-scripts/process.bat",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/msvc-scripts/rep.vbs",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/msvc-scripts/sodium.props",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/Makefile.am",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/Makefile.in",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/Makefile.am",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/Makefile.in",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_aead",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_aead/aes256gcm",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_aead/aes256gcm/aesni",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_aead/chacha20poly1305",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_auth",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_auth/crypto_auth.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_auth/hmacsha256",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_auth/hmacsha256/auth_hmacsha256_api.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_auth/hmacsha256/cp",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_auth/hmacsha256/cp/hmac_hmacsha256.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_auth/hmacsha256/cp/verify_hmacsha256.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_auth/hmacsha512",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_auth/hmacsha512/auth_hmacsha512_api.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_auth/hmacsha512/cp",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_auth/hmacsha512/cp/hmac_hmacsha512.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_auth/hmacsha512/cp/verify_hmacsha512.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_auth/hmacsha512256",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_auth/hmacsha512256/auth_hmacsha512256_api.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_auth/hmacsha512256/cp",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_auth/hmacsha512256/cp/hmac_hmacsha512256.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_auth/hmacsha512256/cp/verify_hmacsha512256.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_box",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_box/crypto_box.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_box/crypto_box_easy.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_box/crypto_box_seal.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/after_curve25519xsalsa20poly1305.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/before_curve25519xsalsa20poly1305.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/box_curve25519xsalsa20poly1305.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/keypair_curve25519xsalsa20poly1305.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_core",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_core/curve25519",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_core/curve25519/ref10",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_core/curve25519/ref10/base.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_core/curve25519/ref10/base2.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_core/hchacha20",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_core/hchacha20/core_hchacha20.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_core/hchacha20/core_hchacha20.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_core/hsalsa20",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_core/hsalsa20/core_hsalsa20_api.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_core/hsalsa20/ref2",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_core/hsalsa20/ref2/core_hsalsa20.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_core/salsa20",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_core/salsa20/core_salsa20_api.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_core/salsa20/ref",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_core/salsa20/ref/core_salsa20.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_core/salsa2012",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_core/salsa2012/core_salsa2012_api.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_core/salsa2012/ref",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_core/salsa2012/ref/core_salsa2012.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_core/salsa208",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_core/salsa208/core_salsa208_api.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_core/salsa208/ref",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_core/salsa208/ref/core_salsa208.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_generichash",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_generichash/blake2",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_generichash/blake2/generichash_blake2_api.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_generichash/blake2/ref",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2-impl.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-avx2.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-ref.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-sse41.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-sse41.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-ssse3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-ssse3.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-avx2.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-ref.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_generichash/blake2/ref/generichash_blake2b.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_generichash/crypto_generichash.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_hash",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_hash/crypto_hash.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_hash/sha256",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_hash/sha256/cp",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_hash/sha256/hash_sha256_api.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_hash/sha512",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_hash/sha512/cp",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_hash/sha512/hash_sha512_api.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_onetimeauth",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_onetimeauth/crypto_onetimeauth.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_onetimeauth/poly1305",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_pwhash",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_pwhash/argon2",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-ref.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-ssse3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_pwhash/argon2/argon2-impl.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_pwhash/argon2/argon2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_pwhash/argon2/blake2b-long.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_pwhash/argon2/blake2b-long.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ref.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ssse3.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/crypto_scalarmult.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/x25519_ref10.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/x25519_ref10.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_invert.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_namespace.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe_frombytes_sandy2x.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base_namespace.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_namespace.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/sandy2x.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_secretbox",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_secretbox/crypto_secretbox.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_secretbox/crypto_secretbox_easy.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_secretbox/xsalsa20poly1305",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_secretbox/xsalsa20poly1305/ref",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_secretbox/xsalsa20poly1305/ref/box_xsalsa20poly1305.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305_api.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_shorthash",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_shorthash/crypto_shorthash.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_shorthash/siphash24",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_shorthash/siphash24/ref",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_shorthash/siphash24/ref/shorthash_siphash24.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_shorthash/siphash24/shorthash_siphash24_api.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_sign",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_sign/crypto_sign.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_sign/ed25519",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_sign/ed25519/ref10",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_sign/ed25519/ref10/keypair.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_sign/ed25519/ref10/obsolete.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_sign/ed25519/ref10/open.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_sign/ed25519/ref10/sign.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_sign/ed25519/sign_ed25519_api.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/aes128ctr",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/aes128ctr/portable",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/afternm_aes128ctr.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/beforenm_aes128ctr.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts_aes128ctr.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128_aes128ctr.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/stream_aes128ctr.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/types.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/xor_afternm_aes128ctr.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/aes128ctr/stream_aes128ctr_api.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/chacha20",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/chacha20/ref",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/chacha20/vec",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/crypto_stream.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/salsa20",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/salsa20/ref",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/salsa20/ref/stream_salsa20_ref.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/salsa20/ref/xor_salsa20_ref.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20_api.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/salsa2012",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/salsa2012/ref",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/salsa2012/ref/stream_salsa2012.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/salsa2012/ref/xor_salsa2012.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/salsa2012/stream_salsa2012_api.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/salsa208",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/salsa208/ref",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/salsa208/ref/stream_salsa208.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/salsa208/ref/xor_salsa208.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/salsa208/stream_salsa208_api.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/xsalsa20",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/xsalsa20/ref",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/xsalsa20/ref/stream_xsalsa20.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/xsalsa20/ref/xor_xsalsa20.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_stream/xsalsa20/stream_xsalsa20_api.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_verify",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_verify/16",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_verify/16/ref",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_verify/16/ref/verify_16.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_verify/16/verify_16_api.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_verify/32",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_verify/32/ref",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_verify/32/ref/verify_32.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_verify/32/verify_32_api.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_verify/64",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_verify/64/ref",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_verify/64/ref/verify_64.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/crypto_verify/64/verify_64_api.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/Makefile.am",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/Makefile.in",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/core.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_aead_aes256gcm.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_auth.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha256.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512256.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_box.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_box_curve25519xsalsa20poly1305.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_core_hchacha20.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_core_hsalsa20.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_core_salsa20.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_core_salsa2012.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_core_salsa208.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_generichash.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_hash.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_hash_sha256.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_hash_sha512.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_int32.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_int64.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_onetimeauth.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_onetimeauth_poly1305.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_pwhash.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_scalarmult.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_scalarmult_curve25519.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_secretbox.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_secretbox_xsalsa20poly1305.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_shorthash.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_shorthash_siphash24.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_sign.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_sign_ed25519.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_sign_edwards25519sha512batch.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_stream.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_stream_aes128ctr.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_stream_chacha20.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_stream_salsa20.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_stream_salsa2012.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_stream_salsa208.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_stream_xsalsa20.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_uint16.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_uint32.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_uint64.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_uint8.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_verify_16.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_verify_32.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/crypto_verify_64.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/export.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/private",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/private/common.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/private/mutex.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/randombytes.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/randombytes_nativeclient.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/randombytes_salsa20_random.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/randombytes_sysrandom.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/runtime.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/utils.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/include/sodium/version.h.in",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/randombytes",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/randombytes/nativeclient",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/randombytes/nativeclient/randombytes_nativeclient.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/randombytes/randombytes.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/randombytes/salsa20",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/randombytes/sysrandom",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/sodium",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/src/libsodium/sodium/core.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/sodium/runtime.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/sodium/utils.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/src/libsodium/sodium/version.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/test/Makefile.am",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/Makefile.in",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/test/default/Makefile.am",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/Makefile.in",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/aead_aes256gcm.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/aead_aes256gcm.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/aead_chacha20poly1305.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/aead_chacha20poly1305.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/auth.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/auth.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/auth2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/auth2.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/auth3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/auth3.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/auth5.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/auth5.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/auth6.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/auth6.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/auth7.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/auth7.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/box.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/box.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/box2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/box2.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/box7.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/box7.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/box8.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/box8.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/box_easy.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/box_easy.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/box_easy2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/box_easy2.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/box_seal.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/box_seal.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/box_seed.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/box_seed.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/chacha20.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/chacha20.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/cmptest.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/core1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/core1.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/core2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/core2.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/core3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/core3.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/core4.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/core4.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/core5.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/core5.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/core6.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/core6.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/ed25519_convert.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/ed25519_convert.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/generichash.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/generichash.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/generichash2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/generichash2.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/generichash3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/generichash3.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/hash.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/hash.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/hash2.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/hash3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/hash3.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/onetimeauth.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/onetimeauth.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/onetimeauth2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/onetimeauth2.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/onetimeauth7.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/onetimeauth7.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/pre.js.inc",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/pwhash.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/pwhash.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/pwhash_scrypt.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/pwhash_scrypt.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/pwhash_scrypt_ll.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/pwhash_scrypt_ll.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/randombytes.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/randombytes.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/scalarmult.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/scalarmult.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/scalarmult2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/scalarmult2.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/scalarmult5.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/scalarmult5.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/scalarmult6.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/scalarmult6.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/scalarmult7.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/scalarmult7.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/secretbox.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/secretbox.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/secretbox2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/secretbox2.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/secretbox7.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/secretbox7.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/secretbox8.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/secretbox8.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/secretbox_easy.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/secretbox_easy.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/secretbox_easy2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/secretbox_easy2.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/shorthash.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/shorthash.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/sign.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/sign.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/sodium_core.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/sodium_core.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/sodium_utils.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/sodium_utils.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/sodium_utils2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/sodium_utils2.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/sodium_utils3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/sodium_utils3.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/sodium_version.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/sodium_version.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/stream.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/stream.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/stream2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/stream2.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/stream3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/stream3.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/stream4.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/stream4.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/verify1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/verify1.exp",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/default/wintest.bat",
                "type": "Blob"
            },
            {
                "path": "vendor/libsodium/test/quirks",
                "type": "Tree"
            },
            {
                "path": "vendor/libsodium/test/quirks/quirks.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath",
                "type": "Tree"
            },
            {
                "path": "vendor/libtommath/CVS",
                "type": "Tree"
            },
            {
                "path": "vendor/libtommath/CVS/Entries",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/CVS/Repository",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/CVS/Root",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/LICENSE",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn.tex",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_error.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_fast_mp_invmod.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_fast_mp_montgomery_reduce.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_fast_s_mp_mul_digs.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_fast_s_mp_mul_high_digs.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_fast_s_mp_sqr.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_2expt.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_abs.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_add.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_add_d.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_addmod.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_and.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_clamp.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_clear.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_clear_multi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_cmp.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_cmp_d.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_cmp_mag.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_cnt_lsb.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_copy.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_count_bits.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_div.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_div_2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_div_2d.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_div_3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_div_d.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_dr_is_modulus.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_dr_reduce.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_dr_setup.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_exch.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_expt_d.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_exptmod.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_exptmod_fast.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_exteuclid.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_fread.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_fwrite.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_gcd.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_get_int.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_get_long.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_grow.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_init.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_init_copy.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_init_multi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_init_set.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_init_set_int.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_init_set_long.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_init_size.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_invmod.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_invmod_slow.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_is_square.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_jacobi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_karatsuba_mul.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_karatsuba_sqr.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_lcm.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_lshd.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_mod.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_mod_2d.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_mod_d.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_montgomery_calc_normalization.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_montgomery_reduce.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_montgomery_setup.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_mul.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_mul_2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_mul_2d.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_mul_d.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_mulmod.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_n_root.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_neg.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_or.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_prime_fermat.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_prime_is_divisible.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_prime_is_prime.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_prime_miller_rabin.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_prime_next_prime.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_prime_rabin_miller_trials.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_prime_random_ex.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_radix_bits_size.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_radix_size.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_radix_smap.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_rand.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_read_radix.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_read_signed_bin.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_read_unsigned_bin.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_reduce.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_reduce_2k.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_reduce_2k_l.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_reduce_2k_setup.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_reduce_2k_setup_l.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_reduce_is_2k.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_reduce_is_2k_l.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_reduce_setup.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_rshd.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_set.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_set_int.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_set_long.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_shrink.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_signed_bin_size.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_sqr.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_sqrmod.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_sqrt.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_sub.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_sub_d.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_submod.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_to_signed_bin.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_to_signed_bin_n.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_to_unsigned_bin.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_to_unsigned_bin_n.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_toom_mul.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_toom_sqr.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_toradix.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_toradix_n.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_toradix_nd.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_unsigned_bin_size.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_xor.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_mp_zero.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_prime_tab.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_reverse.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_s_mp_add.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_s_mp_exptmod.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_s_mp_mul_digs.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_s_mp_mul_high_digs.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_s_mp_sqr.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bn_s_mp_sub.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/bncore.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/booker.pl",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/callgraph.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/changes.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/demo",
                "type": "Tree"
            },
            {
                "path": "vendor/libtommath/demo/CVS",
                "type": "Tree"
            },
            {
                "path": "vendor/libtommath/demo/CVS/Entries",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/demo/CVS/Repository",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/demo/CVS/Root",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/demo/demo.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/demo/timing.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/dep.pl",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/etc",
                "type": "Tree"
            },
            {
                "path": "vendor/libtommath/etc/2kprime.1",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/etc/2kprime.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/etc/CVS",
                "type": "Tree"
            },
            {
                "path": "vendor/libtommath/etc/CVS/Entries",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/etc/CVS/Repository",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/etc/CVS/Root",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/etc/drprime.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/etc/drprimes.28",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/etc/drprimes.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/etc/makefile",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/etc/makefile.icc",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/etc/makefile.msvc",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/etc/mersenne.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/etc/mont.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/etc/pprime.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/etc/prime.1024",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/etc/prime.512",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/etc/timer.asm",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/etc/tune.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/gen.pl",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/libtommath.dsp",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/logs",
                "type": "Tree"
            },
            {
                "path": "vendor/libtommath/logs/CVS",
                "type": "Tree"
            },
            {
                "path": "vendor/libtommath/logs/CVS/Entries",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/logs/CVS/Repository",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/logs/CVS/Root",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/logs/README",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/logs/add.log",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/logs/addsub.png",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/logs/expt.log",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/logs/expt.png",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/logs/expt_2k.log",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/logs/expt_2kl.log",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/logs/expt_dr.log",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/logs/graphs.dem",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/logs/index.html",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/logs/invmod.log",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/logs/invmod.png",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/logs/mult.log",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/logs/mult.png",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/logs/mult_kara.log",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/logs/sqr.log",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/logs/sqr_kara.log",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/logs/sub.log",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/makefile",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/makefile.bcc",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/makefile.cygwin_dll",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/makefile.icc",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/makefile.msvc",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/makefile.shared",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/mess.sh",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/mtest",
                "type": "Tree"
            },
            {
                "path": "vendor/libtommath/mtest/CVS",
                "type": "Tree"
            },
            {
                "path": "vendor/libtommath/mtest/CVS/Entries",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/mtest/CVS/Repository",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/mtest/CVS/Root",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/mtest/logtab.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/mtest/mpi-config.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/mtest/mpi-types.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/mtest/mpi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/mtest/mpi.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/mtest/mtest.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/pics",
                "type": "Tree"
            },
            {
                "path": "vendor/libtommath/pics/CVS",
                "type": "Tree"
            },
            {
                "path": "vendor/libtommath/pics/CVS/Entries",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/pics/CVS/Repository",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/pics/CVS/Root",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/pics/design_process.sxd",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/pics/design_process.tif",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/pics/expt_state.sxd",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/pics/expt_state.tif",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/pics/makefile",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/pics/primality.tif",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/pics/radix.sxd",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/pics/sliding_window.sxd",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/pics/sliding_window.tif",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/poster.out",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/poster.tex",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/pre_gen",
                "type": "Tree"
            },
            {
                "path": "vendor/libtommath/pre_gen/CVS",
                "type": "Tree"
            },
            {
                "path": "vendor/libtommath/pre_gen/CVS/Entries",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/pre_gen/CVS/Repository",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/pre_gen/CVS/Root",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/pre_gen/mpi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/pretty.build",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/tombc",
                "type": "Tree"
            },
            {
                "path": "vendor/libtommath/tombc/CVS",
                "type": "Tree"
            },
            {
                "path": "vendor/libtommath/tombc/CVS/Entries",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/tombc/CVS/Repository",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/tombc/CVS/Root",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/tombc/grammar.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/tommath.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/tommath.out",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/tommath.src",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/tommath_class.h",
                "type": "Blob"
            },
            {
                "path": "vendor/libtommath/tommath_superclass.h",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma",
                "type": "Tree"
            },
            {
                "path": "vendor/oniguruma/AUTHORS",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/COPYING",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/ChangeLog",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/HISTORY",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/INSTALL",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/NEWS",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/README",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/README.ja",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/depcomp",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/doc",
                "type": "Tree"
            },
            {
                "path": "vendor/oniguruma/doc/API",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/doc/API.ja",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/doc/FAQ",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/doc/FAQ.ja",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/doc/RE",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/doc/RE.ja",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc",
                "type": "Tree"
            },
            {
                "path": "vendor/oniguruma/enc/Makefile.in",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/ascii.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/big5.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/cp949.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/emacs_mule.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/euc_jp.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/euc_kr.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/euc_tw.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/gb18030.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/gb2312.h",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/gbk.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/iso_2022_jp.h",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/iso_8859_1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/iso_8859_10.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/iso_8859_11.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/iso_8859_13.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/iso_8859_14.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/iso_8859_15.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/iso_8859_16.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/iso_8859_2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/iso_8859_3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/iso_8859_4.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/iso_8859_5.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/iso_8859_6.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/iso_8859_7.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/iso_8859_8.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/iso_8859_9.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/koi8_r.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/koi8_u.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/mktable.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/shift_jis.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans",
                "type": "Tree"
            },
            {
                "path": "vendor/oniguruma/enc/trans/CP",
                "type": "Tree"
            },
            {
                "path": "vendor/oniguruma/enc/trans/CP/CP932UDA%UCS.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/CP/CP932VDC@IBM%UCS.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/CP/CP932VDC@NEC_IBM%UCS.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/CP/UCS%CP932UDA.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/CP/UCS%CP932VDC@IBM.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/CP/UCS%CP932VDC@NEC_IBM.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/EMOJI",
                "type": "Tree"
            },
            {
                "path": "vendor/oniguruma/enc/trans/EMOJI/EMOJI_ISO-2022-JP-KDDI%UCS.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/EMOJI/EMOJI_SHIFT_JIS-DOCOMO%UCS.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/EMOJI/EMOJI_SHIFT_JIS-KDDI%UCS.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/EMOJI/EMOJI_SHIFT_JIS-KDDI-UNDOC%UCS.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/EMOJI/EMOJI_SHIFT_JIS-SOFTBANK%UCS.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/EMOJI/UCS%EMOJI_ISO-2022-JP-KDDI-UNDOC.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/EMOJI/UCS%EMOJI_ISO-2022-JP-KDDI.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/EMOJI/UCS%EMOJI_SHIFT_JIS-DOCOMO.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/EMOJI/UCS%EMOJI_SHIFT_JIS-KDDI-UNDOC.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/EMOJI/UCS%EMOJI_SHIFT_JIS-KDDI.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/EMOJI/UCS%EMOJI_SHIFT_JIS-SOFTBANK.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/GB",
                "type": "Tree"
            },
            {
                "path": "vendor/oniguruma/enc/trans/GB/GB12345%UCS.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/GB/GB2312%UCS.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/GB/UCS%GB12345.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/GB/UCS%GB2312.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/JIS",
                "type": "Tree"
            },
            {
                "path": "vendor/oniguruma/enc/trans/JIS/JISX0201-KANA%UCS.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/JIS/JISX0208@1990%UCS.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/JIS/JISX0208@MS%UCS.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/JIS/JISX0208UDC%UCS.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/JIS/JISX0208VDC@NEC%UCS.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/JIS/JISX0212%UCS.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/JIS/JISX0212@MS%UCS.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/JIS/JISX0212UDC%UCS.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/JIS/JISX0212VDC@IBM%UCS.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/JIS/JISX0213-1%UCS@BMP.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/JIS/JISX0213-1%UCS@SIP.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/JIS/JISX0213-2%UCS@BMP.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/JIS/JISX0213-2%UCS@SIP.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/JIS/UCS%JISX0201-KANA.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/JIS/UCS%JISX0208@1990.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/JIS/UCS%JISX0208@MS.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/JIS/UCS%JISX0208UDC.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/JIS/UCS%JISX0208VDC@NEC.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/JIS/UCS%JISX0212.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/JIS/UCS%JISX0212@MS.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/JIS/UCS%JISX0212UDC.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/JIS/UCS%JISX0212VDC@IBM.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/JIS/UCS@BMP%JISX0213-1.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/JIS/UCS@BMP%JISX0213-2.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/JIS/UCS@SIP%JISX0213-1.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/JIS/UCS@SIP%JISX0213-2.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/big5-hkscs-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/big5-uao-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/big5.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/big5.trans",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/chinese.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/chinese.trans",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/cp850-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/cp852-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/cp855-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/cp949-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/emoji-exchange-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/emoji.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/emoji.trans",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/emoji_iso2022_kddi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/emoji_iso2022_kddi.trans",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/emoji_sjis_docomo.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/emoji_sjis_docomo.trans",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/emoji_sjis_kddi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/emoji_sjis_kddi.trans",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/emoji_sjis_softbank.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/emoji_sjis_softbank.trans",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/escape.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/escape.trans",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/euckr-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/gb18030-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/gb18030.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/gb18030.trans",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/gbk-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/gbk.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/gbk.trans",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/ibm437-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/ibm737-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/ibm775-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/ibm852-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/ibm855-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/ibm857-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/ibm860-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/ibm861-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/ibm862-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/ibm863-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/ibm865-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/ibm866-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/ibm869-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/iso-8859-1-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/iso-8859-10-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/iso-8859-11-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/iso-8859-13-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/iso-8859-14-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/iso-8859-15-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/iso-8859-16-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/iso-8859-2-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/iso-8859-3-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/iso-8859-4-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/iso-8859-5-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/iso-8859-6-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/iso-8859-7-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/iso-8859-8-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/iso-8859-9-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/iso2022.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/iso2022.trans",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/japanese.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/japanese.trans",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/japanese_euc.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/japanese_euc.trans",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/japanese_sjis.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/japanese_sjis.trans",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/koi8-r-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/koi8-u-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/korean.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/korean.trans",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/maccroatian-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/maccyrillic-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/macgreek-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/maciceland-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/macroman-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/macromania-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/macturkish-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/macukraine-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/newline.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/newline.trans",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/single_byte.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/single_byte.trans",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/tis-620-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/ucm",
                "type": "Tree"
            },
            {
                "path": "vendor/oniguruma/enc/trans/ucm/glibc-BIG5-2.3.3.ucm",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/ucm/glibc-BIG5HKSCS-2.3.3.ucm",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/ucm/windows-950-2000.ucm",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/ucm/windows-950_hkscs-2001.ucm",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/utf8_mac-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/utf8_mac.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/utf8_mac.trans",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/utf_16_32.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/utf_16_32.trans",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/windows-1250-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/windows-1251-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/windows-1252-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/windows-1253-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/windows-1254-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/windows-1255-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/windows-1256-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/windows-1257-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/trans/windows-874-tbl.rb",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/unicode.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/unicode",
                "type": "Tree"
            },
            {
                "path": "vendor/oniguruma/enc/unicode/casefold.h",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/unicode/name2ctype.h",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/unicode/name2ctype.h.blt",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/unicode/name2ctype.kwd",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/unicode/name2ctype.src",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/us_ascii.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/utf_16_32.h",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/utf_16be.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/utf_16le.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/utf_32be.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/utf_32le.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/utf_7.h",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/utf_8.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/windows_1251.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/windows_31j.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/enc/x_emoji.h",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/index.html",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/index_ja.html",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/missing",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/oniguruma.h",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/regcomp.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/regenc.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/regenc.h",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/regerror.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/regexec.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/regint.h",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/regparse.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/regparse.h",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/regsyntax.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/regtrav.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/regversion.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/sample",
                "type": "Tree"
            },
            {
                "path": "vendor/oniguruma/sample/Makefile.am",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/sample/Makefile.in",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/sample/crnl.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/sample/encode.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/sample/listcap.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/sample/names.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/sample/posix.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/sample/simple.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/sample/sql.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/sample/syntax.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/st.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/st.h",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/test",
                "type": "Tree"
            },
            {
                "path": "vendor/oniguruma/test/testc.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/test/testu.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/transcoder.c",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/transcoder.h",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/win32",
                "type": "Tree"
            },
            {
                "path": "vendor/oniguruma/win32/config.h",
                "type": "Blob"
            },
            {
                "path": "vendor/oniguruma/win32/testc.c",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson",
                "type": "Tree"
            },
            {
                "path": "vendor/rapidjson/rapidjson",
                "type": "Tree"
            },
            {
                "path": "vendor/rapidjson/rapidjson/allocators.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/document.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/encodedstream.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/encodings.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/error",
                "type": "Tree"
            },
            {
                "path": "vendor/rapidjson/rapidjson/error/en.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/error/error.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/filereadstream.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/filewritestream.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/fwd.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/internal",
                "type": "Tree"
            },
            {
                "path": "vendor/rapidjson/rapidjson/internal/biginteger.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/internal/diyfp.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/internal/dtoa.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/internal/ieee754.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/internal/itoa.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/internal/meta.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/internal/pow10.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/internal/regex.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/internal/stack.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/internal/strfunc.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/internal/strtod.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/internal/swap.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/istreamwrapper.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/license.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/memorybuffer.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/memorystream.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/msinttypes",
                "type": "Tree"
            },
            {
                "path": "vendor/rapidjson/rapidjson/msinttypes/inttypes.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/msinttypes/stdint.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/ostreamwrapper.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/pointer.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/prettywriter.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/rapidjson.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/reader.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/schema.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/stream.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/stringbuffer.h",
                "type": "Blob"
            },
            {
                "path": "vendor/rapidjson/rapidjson/writer.h",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads",
                "type": "Tree"
            },
            {
                "path": "vendor/winpthreads/COPYING",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/Makefile.am",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/Makefile.in",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/aclocal.m4",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/build-aux",
                "type": "Tree"
            },
            {
                "path": "vendor/winpthreads/build-aux/config.guess",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/build-aux/config.sub",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/build-aux/depcomp",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/build-aux/install-sh",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/build-aux/missing",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/config.h.in",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/configure",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/configure.ac",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/include",
                "type": "Tree"
            },
            {
                "path": "vendor/winpthreads/include/pthread.h",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/include/semaphore.h",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/makefile.old",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/src",
                "type": "Tree"
            },
            {
                "path": "vendor/winpthreads/src/barrier.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/src/barrier.h",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/src/cond.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/src/cond.h",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/src/misc.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/src/misc.h",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/src/mutex.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/src/mutex.h",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/src/ref.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/src/ref.h",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/src/rwlock.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/src/rwlock.h",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/src/sched.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/src/sem.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/src/sem.h",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/src/semaphore.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/src/spinlock.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/src/spinlock.h",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/src/thread.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/src/thread.h",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/src/version.rc",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/src/wpth_ver.h",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/test",
                "type": "Tree"
            },
            {
                "path": "vendor/winpthreads/test/makefile",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/test/test.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests",
                "type": "Tree"
            },
            {
                "path": "vendor/winpthreads/tests/Bmakefile",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/ChangeLog.2010",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/Debug.dsp",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/Debug.dsw",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/Debug.plg",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/Debug.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/GNUmakefile",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/Makefile",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/README",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/README.BENCHTESTS",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/README.WINPTHREADS",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/SIZES.GC",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/SIZES.GCE",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/SIZES.VC",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/SIZES.VCE",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/SIZES.VSE",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/Wmakefile",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/barrier1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/barrier2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/barrier3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/barrier4.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/barrier5.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/barrier6.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/benchlib.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/benchtest.h",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/benchtest1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/benchtest2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/benchtest3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/benchtest4.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/benchtest5.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/cancel1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/cancel2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/cancel3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/cancel4.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/cancel5.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/cancel6a.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/cancel6d.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/cancel7.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/cancel8.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/cancel9.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/cleanup0.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/cleanup1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/cleanup2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/cleanup3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/condvar1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/condvar1_1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/condvar1_2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/condvar2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/condvar2_1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/condvar3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/condvar3_1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/condvar3_2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/condvar3_3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/condvar4.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/condvar5.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/condvar6.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/condvar7.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/condvar8.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/condvar9.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/context1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/count1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/create1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/create2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/create3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/delay1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/delay2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/detach1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/equal1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/errno1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/exception1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/exception2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/exception3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/exit1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/exit2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/exit3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/exit4.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/exit5.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/eyal1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/inherit1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/join0.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/join1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/join2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/join3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/kill1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/loadfree.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/mutex1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/mutex1e.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/mutex1n.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/mutex1r.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/mutex2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/mutex2e.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/mutex2r.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/mutex3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/mutex3e.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/mutex3r.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/mutex4.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/mutex5.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/mutex6.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/mutex6e.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/mutex6es.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/mutex6n.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/mutex6r.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/mutex6rs.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/mutex6s.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/mutex7.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/mutex7e.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/mutex7n.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/mutex7r.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/mutex8.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/mutex8e.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/mutex8n.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/mutex8r.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/once1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/once2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/once3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/once4.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/priority1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/priority2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/reuse1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/reuse2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/runall.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/rwlock1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/rwlock2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/rwlock2_t.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/rwlock3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/rwlock3_t.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/rwlock4.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/rwlock4_t.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/rwlock5.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/rwlock5_t.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/rwlock6.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/rwlock6_t.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/rwlock6_t2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/rwlock7.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/rwlock8.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/self1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/self2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/semaphore1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/semaphore2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/semaphore3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/semaphore4.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/semaphore4t.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/semaphore5.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/sizes.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/spin1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/spin2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/spin3.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/spin4.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/stress1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/test.h",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/tryentercs.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/tryentercs2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/tsd1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/tsd2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/valid1.c",
                "type": "Blob"
            },
            {
                "path": "vendor/winpthreads/tests/valid2.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/CMakeLists.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/ChangeLog",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/FAQ",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/INDEX",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/LICENSE",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/Makefile.in",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/README",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/adler32.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/amiga",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/amiga/Makefile.pup",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/amiga/Makefile.sas",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/as400",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/as400/bndsrc",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/as400/compile.clp",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/as400/readme.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/as400/zlib.inc",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/compress.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/configure",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/contrib/README.contrib",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/ada",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/contrib/ada/buffer_demo.adb",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/ada/mtest.adb",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/ada/read.adb",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/ada/readme.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/ada/test.adb",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/ada/zlib-streams.adb",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/ada/zlib-streams.ads",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/ada/zlib-thin.adb",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/ada/zlib-thin.ads",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/ada/zlib.adb",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/ada/zlib.ads",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/ada/zlib.gpr",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/amd64",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/contrib/amd64/amd64-match.S",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/asm686",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/contrib/asm686/README.686",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/asm686/match.S",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/blast",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/contrib/blast/Makefile",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/blast/README",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/blast/blast.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/blast/blast.h",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/blast/test.pk",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/blast/test.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/delphi",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/contrib/delphi/ZLib.pas",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/delphi/ZLibConst.pas",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/delphi/readme.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/delphi/zlibd32.mak",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/dotzlib",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/contrib/dotzlib/DotZLib.build",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/dotzlib/DotZLib.chm",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/dotzlib/DotZLib.sln",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/dotzlib/DotZLib",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/contrib/dotzlib/DotZLib/AssemblyInfo.cs",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/dotzlib/DotZLib/ChecksumImpl.cs",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/dotzlib/DotZLib/CircularBuffer.cs",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/dotzlib/DotZLib/CodecBase.cs",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/dotzlib/DotZLib/Deflater.cs",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/dotzlib/DotZLib/DotZLib.cs",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/dotzlib/DotZLib/DotZLib.csproj",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/dotzlib/DotZLib/GZipStream.cs",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/dotzlib/DotZLib/Inflater.cs",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/dotzlib/DotZLib/UnitTests.cs",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/dotzlib/LICENSE_1_0.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/dotzlib/readme.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/gcc_gvmat64",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/contrib/gcc_gvmat64/gvmat64.S",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/infback9",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/contrib/infback9/README",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/infback9/infback9.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/infback9/infback9.h",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/infback9/inffix9.h",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/infback9/inflate9.h",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/infback9/inftree9.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/infback9/inftree9.h",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/inflate86",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/contrib/inflate86/inffas86.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/inflate86/inffast.S",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/iostream",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/contrib/iostream/test.cpp",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/iostream/zfstream.cpp",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/iostream/zfstream.h",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/iostream2",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/contrib/iostream2/zstream.h",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/iostream2/zstream_test.cpp",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/iostream3",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/contrib/iostream3/README",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/iostream3/TODO",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/iostream3/test.cc",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/iostream3/zfstream.cc",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/iostream3/zfstream.h",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/masmx64",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/contrib/masmx64/bld_ml64.bat",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/masmx64/gvmat64.asm",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/masmx64/inffas8664.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/masmx64/inffasx64.asm",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/masmx64/readme.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/masmx86",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/contrib/masmx86/bld_ml32.bat",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/masmx86/inffas32.asm",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/masmx86/match686.asm",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/masmx86/readme.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/minizip",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/contrib/minizip/Makefile",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/minizip/Makefile.am",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/minizip/MiniZip64_Changes.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/minizip/MiniZip64_info.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/minizip/configure.ac",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/minizip/crypt.h",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/minizip/ioapi.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/minizip/ioapi.h",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/minizip/iowin32.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/minizip/iowin32.h",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/minizip/make_vms.com",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/minizip/miniunz.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/minizip/miniunzip.1",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/minizip/minizip.1",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/minizip/minizip.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/minizip/minizip.pc.in",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/minizip/mztools.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/minizip/mztools.h",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/minizip/unzip.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/minizip/unzip.h",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/minizip/zip.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/minizip/zip.h",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/pascal",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/contrib/pascal/example.pas",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/pascal/readme.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/pascal/zlibd32.mak",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/pascal/zlibpas.pas",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/puff",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/contrib/puff/Makefile",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/puff/README",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/puff/puff.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/puff/puff.h",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/puff/pufftest.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/puff/zeros.raw",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/testzlib",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/contrib/testzlib/testzlib.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/testzlib/testzlib.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/untgz",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/contrib/untgz/Makefile",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/untgz/Makefile.msc",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/untgz/untgz.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/readme.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc10",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc10/miniunz.vcxproj",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc10/miniunz.vcxproj.filters",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc10/minizip.vcxproj",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc10/minizip.vcxproj.filters",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc10/testzlib.vcxproj",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc10/testzlib.vcxproj.filters",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc10/testzlibdll.vcxproj",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc10/testzlibdll.vcxproj.filters",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc10/zlib.rc",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc10/zlibstat.vcxproj",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc10/zlibstat.vcxproj.filters",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc10/zlibvc.def",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc10/zlibvc.sln",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc10/zlibvc.vcxproj",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc10/zlibvc.vcxproj.filters",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc11",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc11/miniunz.vcxproj",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc11/minizip.vcxproj",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc11/testzlib.vcxproj",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc11/testzlibdll.vcxproj",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc11/zlib.rc",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc11/zlibstat.vcxproj",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc11/zlibvc.def",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc11/zlibvc.sln",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc11/zlibvc.vcxproj",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc9",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc9/miniunz.vcproj",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc9/minizip.vcproj",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc9/testzlib.vcproj",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc9/testzlibdll.vcproj",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc9/zlib.rc",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc9/zlibstat.vcproj",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc9/zlibvc.def",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc9/zlibvc.sln",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/contrib/vstudio/vc9/zlibvc.vcproj",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/crc32.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/crc32.h",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/deflate.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/deflate.h",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/doc",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/doc/algorithm.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/doc/rfc1950.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/doc/rfc1951.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/doc/rfc1952.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/doc/txtvsbin.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/examples",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/examples/README.examples",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/examples/enough.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/examples/fitblk.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/examples/gun.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/examples/gzappend.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/examples/gzjoin.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/examples/gzlog.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/examples/gzlog.h",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/examples/zlib_how.html",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/examples/zpipe.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/examples/zran.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/gzclose.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/gzguts.h",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/gzlib.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/gzread.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/gzwrite.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/infback.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/inffast.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/inffast.h",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/inffixed.h",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/inflate.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/inflate.h",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/inftrees.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/inftrees.h",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/make_vms.com",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/msdos",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/msdos/Makefile.bor",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/msdos/Makefile.dj2",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/msdos/Makefile.emx",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/msdos/Makefile.msc",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/msdos/Makefile.tc",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/nintendods",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/nintendods/Makefile",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/nintendods/README",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/old",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/old/Makefile.emx",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/old/Makefile.riscos",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/old/README",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/old/descrip.mms",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/old/os2",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/old/os2/Makefile.os2",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/old/os2/zlib.def",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/old/visual-basic.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/qnx",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/qnx/package.qpg",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/test",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/test/example.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/test/infcover.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/test/minigzip.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/treebuild.xml",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/trees.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/trees.h",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/uncompr.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/watcom",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/watcom/watcom_f.mak",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/watcom/watcom_l.mak",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/win32",
                "type": "Tree"
            },
            {
                "path": "vendor/zlib/win32/DLL_FAQ.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/win32/Makefile.bor",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/win32/Makefile.gcc",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/win32/Makefile.msc",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/win32/README-WIN32.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/win32/VisualC.txt",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/win32/zlib.def",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/win32/zlib1.rc",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/zconf.h.cmakein",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/zconf.h.in",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/zlib.3",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/zlib.3.pdf",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/zlib.h",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/zlib.map",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/zlib.pc.cmakein",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/zlib.pc.in",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/zlib2ansi",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/zutil.c",
                "type": "Blob"
            },
            {
                "path": "vendor/zlib/zutil.h",
                "type": "Blob"
            }
        ],
        "truncated": false,
        "commits": [
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Use llvm-config --libs instead of --libfiles."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added extra C++ exception catch to new interpreter."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Catch C++ exceptions sooner.\n\nWe attempt to catch C++ exceptions as close to where they occur as possible.\nThis means at the last executed managed code (eg method) so that as much\ncontext as possible can be given."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed rendering method name."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Align method names in backtrace.\n\nIt is a very common convention (in Rubinius, at least) to fully render a\nmethod as 'A::B::C{#, .}name', where A::B:: is an optional namespace and C is\nthe class of the receiver and # indicates an instance method, while .\nindicates a module method.\n\nAs such, this convention carries over without much question to rendering\nbacktraces. However, the context of consuming a backtrace requires different\nconventions, but ones that are not foreign.\n\nSo, for rendering backtraces, the conventions are retained but the ordering is\nchanged slightly to improve processing the information. There are now four\nbasic components to a backtrace line (for an object-oriented method): 1. the\nmethod name; 2. the instance/module indicator; 3. the fully-scoped receiver\nname; and 4. the source code location.\n\nThe first thing that needs to be located and digested is the method name, so\nthe method names are right aligned allowing both easily reading the method\nname and quick indexing for the second important piece of information, the\nreceiver name. The source location trails and may be on a new line if the\ntotal backtrace line rendering exceeds the terminal width.\n\nThis rendering better orders information in the backtrace based on the\nhierarchy of important information (method name > instance/module indicator >\nreceiver name > source location). It also balances the tensions between making\nan individual line of a backtrace readable and making the whole thing\nscannable and readable. When rendering the full method name as A::B::C#name,\nthe variability of the A::B::C component pushed many names too far to the\nright, leaving a very jagged left edge that is more difficult to scan, as well\nas burying the method name (the primary element) embedded in the middle of a\nbunch of character noise."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Improved backtrace rendering contrast.\n\nRubinius introduced colorized backtraces to improve readability.\n\nUnfortunately, color is problematic due to the perception of colors and the\ninteraction of color with terminal colors, which something which Rubinius has\nno control over.\n\nThe goal of readability in backtraces is an important one. There are two\nprimary pieces of information in each backtrace line: 1. receiver+method; and\n2. source code location, file+line number.\n\nThe current rendering approach is to bold the receiver+method and separate the\nsource line on a new line when the total backtrace line exceeds the terminal\nwidth. This provides contrast that improves scanning the backtrace on primary\ninformation, the receiver+method, and easily selecting secondary information,\nthe source location, when necessary."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Better backtrace rendering for copy-paste.\n\nRubinius renders backtraces with the receiver+method right justified and the\nsource location trailing. Previously, the source location was split when\nexceeding the available terminal width to avoid cluttering the left side where\nthe receiver+method was rendered to aid visibility of the most important\nbacktrace information.\n\nUnfortunately, splitting up the source location makes copy-pasting the path to\nedit a source file very tedious.\n\nNow, the source location is rendered as an unbroken sequence of characters but\nstarting on a new line if the total backtrace line exceeds the terminal width.\nThis preserves the readability of the receiver+method, while also preserving\nthe ability to copy-paste the source location."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed setting ThreadGroup for signal handler Thread.\n\nIn Rubinius, trapped signals are handled in a dedicated Thread.\n\nIn Ruby, the Thread where a signal is processed isn't defined, but the\nassumption is that the signal handler runs in Thread.main (as observed in Ruby\nbehavior).\n\nAlso undefined in Ruby is what ThreadGroup a Thread *created in a signal\nhandler* should be added to. Going with the assumption that the signal handler\nproc is run in Thread.main, we assume the new Thread should be added to\nThread.main.group.\n\nWe now set the signal handler Thread's group to the same group as Thread.main,\nso that threads created in a signal handler proc have a group and are added to\na group."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed Bundler, brew wars."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Don't use enum as last arg for varargs. /ht @heftig."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated README.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Revert \"Try putting README.md under .github.\"\n\nThis reverts commit 320f5045f09473125dad16091f54c15769ed2430.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Try putting README.md under .github."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updates to issues/PR templates.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated rubysl-openssl version."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added C-API rb_memhash."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated daedalus-core gem."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added rb_obj_method_arity. Fixes #3708."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Specs for rb_obj_method_arity."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "medols",
                        "email": "github@gianduia.net"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "For Rubinius build on aarch64-linux-gnu (Raspberry Pi 3). (#3705)"
                },
                "author_login": "medols",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed path to website releases data.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Moved builtin/ to class/.\n\nThe name 'builtin' is not very descriptive. Now that we are going to have\nmanaged objects that are both object-oriented and simple data, and both are\n'built in', we need more descriptive names for the directories, so the new\nnames are 'class' and 'data', which parallels the names used in the code."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Tests for check_frozen instruction."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "More interpreter tests."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "More instruction tests."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated gems."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Attempt to avoid breaking LLVM compiler flags."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed obsolete compiler define RBX_PROFILER."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Re-disable Travis OSX. STDIN is not a TTY.\n\nhttps://travis-ci.org/rubinius/rubinius/jobs/167911681#L5416"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Try re-enabling Travis OSX."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed building OSX packages."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Install bsdtar on Travis Linux."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Use bsdtar.\n\nThe bsdtar program supports '-s pattern' but GNU tar does not."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Install LLVM 3.8 on Travis Linux."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Move deploy to Travis Linux and disable OSX."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated rubysl-socket to 2.2."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Revert \"Try force linking openssl on Travis OSX.\"\n\nThis reverts commit 6a864cf60220da6c79105ca0926c6b1e44adac78."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Try force linking openssl on Travis OSX."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Attempt to use Homebrew OpenSSL on Travis OSX."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated debugger gem version."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated README to match #3702. [ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "LTheGreats",
                        "email": "johnwilger+lachlan@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Update README.md (#3702)\n\nGot rid of empty link."
                },
                "author_login": "",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Install zlib in Docker container for building Nokogiri."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated website repo name."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Properly include stdint.h for uint64_t."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Guard File.setgid? spec for superuser."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed support for private constants. Closes #3697.\n\nPrivate constants are a bad idea, and supporting them isn't necessarily a good\nidea.\n\nPrivate constants do not add any capability to Ruby. They merely restrict\nprograms that would otherwise run. For this reason, not supporting private\nconstants in Rubinius doesn't prohibit any code that would otherwise run in\nRuby, except for the fruitless class of code that soley relies on accessing a\nprivate constant to raise an exception.\n\nThe exception that is raised is a NameError, which causes confusion between a\nconstant not being defined at all, and therefore able to be defined or\nautoloaded, etc., and the constant being defined but private, and therefore\n*prohibiting* defining the constant. To distinguish between these cases would\nrequire parsing the exception text itself.\n\nDespite being labeled private and superficially not accessible, it is easy to\nactually access the constant. So no well-meaning code is actually inhibited by\nlabeling a constant private.\n\nIf code were presented that relied on private constants being private, in the\npositive sense (ie *added* capability, not merely prohibited capability), we\ncan revisit support for private constants."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Apple 10.12 deprecates syscall(2)."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Specs for reopening class/module private constant."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jesse Cooke",
                        "email": "jesse@jc00ke.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Bump libsodium to 1.0.11 (#3696)"
                },
                "author_login": "jc00ke",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Don't double quote OSX configure parameters."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Disable rubygems checking missing extensions."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Use space before & after -latomic. Fixes #3693."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Use -latomic if it exists. Related to #3693."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Clang 3.8 disallows return NULL for intptr_t function type."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Force llvm 3.8 for building Travis OSX binary."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Force use of llvm 3.8 for Homebrew package."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Chris Olstrom",
                        "email": "chris@olstrom.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Add typedef for id_t (#3691)\n\nResolves a compilation failure under musl libc."
                },
                "author_login": "colstrom",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Synchronize all access to struct dirent, via @heftig."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Replace deprecated readdir_r.\n\nCalls to readdir(3) are not guaranteed to be thread safe so we introduce a\nspinlock around calls. This synchronization will usually not be necessary, but\nwe have to ensure correctness."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated rubygems to 2.6.6."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated daedalus gem."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added reference count bits to new memory header."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Start adding interpreter tests."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added Mirror#instance_fields, #instance_variables."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Start adding instruction tests."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed stack access in new interpreter."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Cleaned up some JIT cruft."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added Interpreter::prepare."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Reordered instructions for active compiler.\n\nThe bytecode generated is now using the same ordering for the instructions as\nthe new interpreter, making it possible to internalize methods and check the\nfunctioning of the new interpreter."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed udis86 library."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated compiler version."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed ordering for generated InstructionData."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added InstructionData."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added new interpreter and more control flow work."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated compiler version."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated compiler version."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Sort opcodes for deterministic ordering."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Convert instructions to inlined functions.\n\nThe instructions themselves are snippets of code that mutate state.\n\nThe *interpreter* executes the functions and moves the instruction pointer\n(IP) to the next instruction, essentially operating as a loop (implemented by\ntail calls) over the instruction (opcode) vector.\n\nThe naive JIT *linearizes* the sequence of function calls to the instructions\nand introduces control flow directly (instead of it being an artifact of\niterating over the opcode vector)."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated Daedalus gem."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Split instructions into files.\n\nWith the expansion of the instruction set and different types of instructions\nwith expanded attributes, using a special syntax becomes much more complex.\n\nInstead of managing special code to parse this special syntax, we convert to\nstandard JSON for attributes and documentation, and explicit C++ source files\nand C #include statements for code."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Try versioned clang/clang++ again."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Try versioned llvm-config."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Try brew link llvm38 on OSX."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Try full paths for clang 3.8 on OSX."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Try to build with clang[++]-3.8 on OSX."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Initial work on new interpreter."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Duplicate instruction defs for new interpreter."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed more legacy JIT cruft."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated rubinius-debugger version."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Downgrade Bundler due to https://github.com/bundler/bundler/issues/4750."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Revert \"Singleton classes can't have subclasses.\"\n\nWhile singleton classes cannot have subclasses, modules can have singleton\nclasses and the inline cache invalidation critically depends on those\nsingleton classes being reachable from the module.\n\nThis reverts commit 20938ee86dcb7396c4cf2d16bb89ffd9fcee9a9d."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "More MemoryHeader, InflatedHeader work."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Moved oop.[ch]pp to memory/header.[ch]pp.\n\nFirst, OOP is obscure to newcomers wouldn't have any basis to know what an\nobject-oriented pointer (really a \"tagged pointer\") is. Second, with the\naddition of non-OO managed memory objects, the name is no longer accurate.\nMemoryHeader is both descriptive and accurate."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Module#define_method accepts attr_accessor methods. Fixes #3685."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Ensure MemoryHeader is a POD.\n\nAlso get rid of the union because its sole purpose (assign one field, read\nanother) is undefined behavior in C++.\n\nWe define MemoryFlags as a single machine word type instead of using a struct\nof bitfields for the reasons given in the code comment."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed 32-bit code assumption. Fixes #3682.\n\nWhen allocating an Array of size 2**29, Rubinius would allocate a Tuple big\nenough to hold 2**29 == 536870912 elements. On a 64bit arch, each of these\nelements require sizeof(intptr_t) == 8 bytes. A Tuple memory header is 4 *\nsizeof(intptr_t) == 32 bytes. So, we have 2**29*8+32 == 4294967328. It's a big\nnumber, but not so big that the 64bit arch can't easily handle it.\n\nUnfortunately, down in the managed memory code, there was an explicit uint32_t\ndata type. What happens when 4294967328 == 0x100000020 bytes get put into\n32bits? 0x100000020 & 0xffffffff == 32. Those 2**29 elements were being\ncrammed into 32 bytes. Computers may be magic, but even they can only take so\nmuch."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Define predicates for MemoryHeader."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Miguel Landaeta",
                        "email": "nomadium@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Add error constant ENOTSUP (#3684)"
                },
                "author_login": "nomadium",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Kenichi Kamiya",
                        "email": "kachick1@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Fix sized enumerators of Numeric#step with Infinity (#3683)\n\n* Add specs for sized enumerator of Numeric#step with infinity limit\r\n\r\n* Fix sized enumerator of Numeric#step with Infinity"
                },
                "author_login": "kachick",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Kenichi Kamiya",
                        "email": "kachick1@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Add a failing spec for a case then protected method called from public_send in own method (#3681)\n\n* Add specs to call public_send via own public method\r\n\r\nref: https://bugs.ruby-lang.org/issues/7499\r\n\r\n* Add a failing tag for above\r\n\r\n* Adjust style with classic lambda syntax\r\n\r\nref: https://github.com/rubinius/rubinius/pull/3681#issuecomment-234644486"
                },
                "author_login": "kachick",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added start of new managed memory header."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added Thread#name, #name=."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "commiter": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "message": "move initialization of lineno to more central location"
                },
                "author_login": "chuckremes",
                "committer_login": "chuckremes"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Avoid setting Exception#cause to itself."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated compiler version."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Renamed ConstantScope to LexicalScope.\n\nOriginally, this was called StaticScope, which was pretty accurate. It was\nrenamed ConstantScope to make it more obvious that it was intimately related\nto 'constant' lookup in Ruby.\n\nHowever, constants are odd things in Ruby: their values are neither constant\nnor is their lookup restricted to one scope.  Instead, their values may be\nreassigned and their lookup starts with the lexical scope but continues with\nthe inheritance chain.\n\nWith the additional of functions in Rubinius bound to lexical scope, it is\nreasonable to refocus this object on its actual role: to represent a lexical\nscope."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added start of DataHeader and Trie."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added Exception#cause. Closes #3680."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated deprecations for Ruby 2.2."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated deprecations."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated parser gem versions."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed GCC support."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed 32-bit platform support."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Improved HAMT Hash.\n\nThe base \"table\" has been replaced by a regular Trie. Rubinius has deprecated\nsupport for 32-bit and that support is being removed, so the branching factor\nis currently 62 (actually 60 = 6 * 10), but that will be extended to 64 when\n1. instructions are added for computing with non-mananged objects (ie not\nbeing limited to Fixnum); and 2. managed objects with non-managed fields are\nable to be processed by managed code instructions.\n\nA linear scan list is still used for hash values that collide along (6 * 10 =\n60 bits), but this could be enhanced to be a binary/red-black/etc tree\ninstead."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "commiter": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "message": "use rubysl-socket-2.1.2 gem"
                },
                "author_login": "chuckremes",
                "committer_login": "chuckremes"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Use HAMT for Hash."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Codedb ffi io (#3619)\n\n* add basic support for additional IO functions\r\n\r\n* add back dup2 function definition\r\n\r\n* add convenience methods for errno handling\r\n\r\n* add O_CLOEXEC to list for File IO\r\n\r\n* add a few more functions like ftruncate to the list\r\n\r\n* hack away and rejigger things to get IO booting using mostly FFI calls\r\n\r\n* make some fixes to pass more specs\r\n\r\n* passes most read specs\r\n\r\n* add spec for negative IO#pos when 'unget'ing at start of stream\r\n\r\n* more fixes to pass ungetc/ungetbyte/pos/read specs; all pass\r\n\r\n* fix #getc to handle encodings properly; passes chars_spec\r\n\r\n* fix read_to_separator to handle skipping properly\r\n\r\n* specs for requesting a negative-sized pointer which causes SEGV\r\n\r\n* return NULL for a MemoryPointer.new with a negative size\r\n\r\n* add basic support for additional IO functions\r\n\r\n* add back dup2 function definition\r\n\r\n* add convenience methods for errno handling\r\n\r\n* add O_CLOEXEC to list for File IO\r\n\r\n* add a few more functions like ftruncate to the list\r\n\r\n* hack away and rejigger things to get IO booting using mostly FFI calls\r\n\r\n* make some fixes to pass more specs\r\n\r\n* passes most read specs\r\n\r\n* add spec for negative IO#pos when 'unget'ing at start of stream\r\n\r\n* more fixes to pass ungetc/ungetbyte/pos/read specs; all pass\r\n\r\n* fix #getc to handle encodings properly; passes chars_spec\r\n\r\n* fix read_to_separator to handle skipping properly\r\n\r\n* specs for requesting a negative-sized pointer which causes SEGV\r\n\r\n* return NULL for a MemoryPointer.new with a negative size\r\n\r\n* raise IOError on malloc failure; force returned strings to binary\r\n\r\n* force strings to binary for handling #gets with separators and limits; remove debug prints\r\n\r\n* remove debug prints again - ps i hate git\r\n\r\n* cleanup var use to make specs happy\r\n\r\n* fix initialize specs\r\n\r\n* remove some commented out and dead code\r\n\r\n* switch from C++-based #seek to FFI seek\r\n\r\n* redefine STDIN/STDOUT/STDERR to use new IO obj\r\n\r\n* switch to using FFI-bound #write command\r\n\r\n* include sync as part of fields to move to new IO obj\r\n\r\n* mark rubinius as non-compliant for buffering writes; impl detail anyway\r\n\r\n* to swap in new IO we need it to happen early enough in the load order before STDIN/etc are used\r\n\r\n* need to redefine STDIN/etc and /etc when we swap in new IO object\r\n\r\n* begin refactoring IO internals to make support and expansion simpler hopefully\r\n\r\n* simplify by taking advantage of existing class method\r\n\r\n* add a convenience method for testing call failure\r\n\r\n* add #pipe function\r\n\r\n* continue refactoring to support pipes and reopening FDs\r\n\r\n* baby steps toward making #dup work\r\n\r\n* use #descriptor accessor instead of using ivar directly\r\n\r\n* make #ensure_ methods public; buffered read should return nil when EOF\r\n\r\n* fix error message to use proper local var\r\n\r\n* fix #new_pipe so handle encodings correctly\r\n\r\n* set encodings for 'left hand side' pipes\r\n\r\n* fix #dup specs and add a debugging method\r\n\r\n* fix #eof specs\r\n\r\n* fix #getbyte spec\r\n\r\n* fix several IO#reopen_path bugs particularly improper Errno usage\r\n\r\n* use a FFI convenience method for checking call failure\r\n\r\n* add spec to test EOF behavior with IO#reopen\r\n\r\n* fix IO#reopen to handle EOF correctly\r\n\r\n* fix some eof specs with just one to go\r\n\r\n* fix setting EOF when seeking\r\n\r\n* make any seek on a Pipe raise Errno::ESPIPE\r\n\r\n* fix buffer issues when reading with separators and limits; fix sysread\r\n\r\n* Multiple fixes...\r\n1. Fixed the #seek inheritance hierarchy mostly by no longer\r\nconflating #seek and #sysseek as the same thing.\r\n2. Rename PipeFileDescriptor to FIFOFileDescriptor since it\r\ncan also be used for special character files.\r\n3. Fix #gets so the peek ahead for multi-byte characters is\r\nproperly respected; refill the buffer if we don't have enough\r\nbytes for peek ahead.\r\n4. Fix important error in #new_open_fd which was using the wrong\r\nflag on an FD. When using fcntl on an FD, it is important to use\r\nthe FD_* flags. Was using O_CLOEXEC instead of FD_CLOEXEC and as\r\na result all child processes were hanging when their read pipe\r\nwas closed.\r\n5. Handle EPIPE in #write correctly. Also raise an error if we\r\nget an error instead of ignoring it.\r\n\r\n* provide initial but broken C++ to Ruby conversion for IO.select\r\n\r\n* Fixed FDSet to link.\r\n\r\nThis is a complex part of Rubinius and FFI where we need some primitive\r\ncode to interact with libc macros.\r\n\r\n* converted until/end into begin/end until which fixed 4 specs\r\n\r\n* add logic to load and detect posix_fadvise constants and enable feature detection\r\n\r\n* add with_feature detection to skip these specs on platforms without posix_fadvise\r\n\r\n* convert usage of posix_fadvise from C++ to Ruby code\r\n\r\n* add select function signature; may need to change when we learn more about implementation\r\n\r\n* continue fixup of IO.select; handle coercion and choosing max FD\r\n\r\n* generate and save a string defining the struct timeval as a FFI struct\r\n\r\n* add gettimeofday function for FFI access\r\n\r\n* add FDSet::to_set to return FDSET for use by select\r\n\r\n* finish fleshing out select support code; unfortunately SEGVs\r\n\r\n* fix function signature for posix function #select\r\n\r\n* fix returning pointer to descriptor_set\r\n\r\n* pull FD_SETSIZE directly from the headers\r\n\r\n* fix discovery of highest numbered FD; select still SEGVs\r\n\r\n* return pointer to fd_set as a FFI pointer so we can use it from Ruby\r\n\r\n* pass FFI Pointer to select; fixes SEGV but still does not work correctly\r\n\r\n* fix SEGV by *correctly* getting the address of the data member\r\n\r\n* fix #collect_set_fds; kind of works now\r\n\r\n* Passes all but one select spec which is related to thread sleeping\r\n\r\nFixed +timeout+ handling so that a nil timeout is respected.\r\nPrior to this we were allocating timeval structs every time and\r\nit turns out that an empty struct and a nil value are not\r\nequivalent in behavior.\r\n\r\nTook the opportunity to refactor and DRY up some code that\r\nvalidated IO.select arguments.\r\n\r\n* modify this ugly hack a little to put struct in proper namespace\r\n\r\n* add helper methods for raising EAGAIN and EAGAINWaitWritable\r\n\r\n* disable the C++ version of #readpartial\r\n\r\n* fix readpartial and read_nonblock specs; add new behavior for read_nonblock\r\n\r\n* disable the C++ code for write_nonblock\r\n\r\n* write the code to support write_nonblock and clean up some style issues\r\n\r\n* comment out all primitives that are no longer in use\r\n\r\n* stub out a call to #pos for 2 specs\r\n\r\n* when reopening a FD flush buffer and seek to other FDs location; fix typo\r\n\r\n* Support File#truncate and File#ftruncate correctly\r\n\r\nTurns out that #truncate needed to be a class method, so I moved\r\nit to a class method of FileDescriptor.\r\n\r\nAlso added support for creating a DirectoryFileDescriptor. It\r\nmerely inherits from FileDescriptor now. We will see if it needs\r\nany new behavior or if default behavior needs to be curtailed.\r\n\r\n* fix bug where kernel/common/io.rb was not set to nil after #foreach call\r\n\r\n* fix bug in spec where incorrect args were passed to test #gets with limit\r\n\r\nTricky one to find. The original spec used #gets(1) to read one\r\nchar. Unfortunately, this arg format ends up setting a separator\r\nto $/ so the logic ends up calling\r\nEachReader#read_to_separator_with_limit instead of\r\nEachReader#read_to_limit. By passing nil, as in #gets(nil, 1),\r\nthen we force the code paths to call read_to_limit.\r\n\r\n* fix handling of multi-byte chars when reading with char limits\r\n\r\nThis fixes several specs shared by gets, foreach, and readline.\r\nThe EachReader class needs a good refactoring at this point\r\nbut for now I just want to commit working code.\r\n\r\n* refactor IO::EachReader, dry it up, and improve code docs\r\n\r\n* rescue ESPIPE from seek in #reopen when reopening a Pipe FD\r\n\r\n* fix spec to properly handle the expected returns from #readlines\r\n\r\n* move stdin/out/err redefinition under Rubinius::IOUtility namespace to avoid collisions\r\n\r\n* fix indentation\r\n\r\n* remove superfluous todo comments and dead/commented-out code\r\n\r\n* fix indentation\r\n\r\n* verify that non-blocking writes DO NOT BLOCK when a system buffer is full\r\n\r\n* when a write returns EAGAIN or EINTR test to see if in non-blocking mode\r\n\r\nAlso took the opportunity to refactor fcntl F_GETFL and F_SETFL\r\n\r\n* fix misuage of F_GETFL with F_GETFD\r\n\r\n* first attempt at getting C-API updated to use Ruby obj over C++ obj\r\n\r\n* fix several CAPI specs by correctly getting descriptor\r\n\r\n* rename set_blocking method to clear_nonblock which makes more sense to me\r\n\r\n* toggle the current thread sleep state when potentially blocking on read or select\r\n\r\n* modify exception message to match MRI test expectations\r\n\r\n* handle case where user calls IO.allocate and close\r\n\r\n* allow multiple successive IO#close calls without error\r\n\r\n* second attempt at fixing io=IO.allocate; io.close\r\n\r\n* third try is the charm for IO.allocate; io.close\r\n\r\n* multiple calls of close, close_read, and close_write should no longer raise IOError\r\n\r\n* no longer raise IOError on multiple calls to close, close_read, or close_write\r\n\r\n* refactor descriptor testing to make it cleaner\r\n\r\n* remove duplicate check of ::read return value\r\n\r\n* verify #read raises IOError when read interrupted by another thread closing socket\r\n\r\n* always verify file is open after a read operation\r\n\r\n* spec limit 0 behavior for each_lines for MRI 2.3 compatibility\r\n\r\n* support raising ArgumentError given limit 0 for each_lines\r\n\r\n* begin work on supporting Socket\r\n\r\n* use rb_funcall properly; fixes SEGVs\r\n\r\n* fix typo in private method name\r\n\r\n* define method to raise EAGAINWaitWritable\r\n\r\n* raise EAGAINWaitWritable when nonblocking write would block\r\n\r\n* rescue exceptions when #find_type fails in @enclosing_module\r\n\r\nThis is really weird. The code calls #find_type in the scope\r\nof the enclosing_module, but there could be a conflict with\r\nthat method name, numbers of args it takes, its purpose, etc.\r\nSo a failure here should be rescued and allow the followup\r\ncode to call #find_type on the FFI class.\r\n\r\nThis was discovered when the ffi-io branch failed to build\r\na native extension. The mkmf.rb gem was doing some logging\r\nduring the build which caused some code in IO::Select to\r\ncall IO::Select.class_eval on code to instantiate the\r\nTimeval_t struct class. Creating a struct calls #find_type\r\nbut it was calling it from the scope of mkmf.rb which had\r\nits own (completely different!) method named #find_type\r\ndefined. It threw an ArgumentError because the arity didn't\r\nmatch, but it lead me to this logic error and fix.\r\n\r\n* only allow seeking on 'file' file descriptors and not on fifo or other\r\n\r\nDuring a call to IO.reopen a file descriptor was dup2'ed. Its\r\nftype changed from \"file\" to \"fifo\" and as we know a fifo cannot\r\nseek. So we were blowing up when trying to set the offset ivar.\r\nBy only allowing seek on \"file\" FDs, we'll avoid the bug.\r\n\r\n* remove spec for an IO implementation detail that no longer holds\r\n\r\nAs far as I can tell, there is no #buffer_empty? public method on\r\nthe IO class. We had one to test this behavior. Gone!\r\n\r\n* remove unused and unnecessary public method\r\n\r\n* remove temp spec file that was accidently committed earlier\"\r\n\r\n* emulate blocking read behavior using #read_nonblock\r\n\r\nWe had a failing spec where a thread blocked on read was\r\nsupposed to raise IOError when *another thread* closed\r\nthe IO. However, it didn't work. Turns out that the\r\nlow-level system read function blocks forever so the\r\nclosed IO/file descriptor didn't raise as expected.\r\n\r\nThe original C code got around this OS behavior by setting\r\nspecial flags and sending signals to the blocked thread\r\nto wake it up. This mechanism was only exposed to the\r\nbytecode VM and wasn't available to the Ruby runtime so\r\nI had to go this other direction. It's less than ideal\r\nbut if the long-term plan is to utilize libuv for\r\nRubinius IO then this is a good enough fix.\r\n\r\n* change IO.setup to set fd accessor; fixes socket setup\r\n\r\nI don't really like this solution very much. Ideally the\r\nSocket classes would set @fd directly in their #initialize\r\nmethods via a call to FileDescriptor.choose_type(fd). Having\r\na +fd+ accessor on the IO class was intended only for\r\ndebugging purposes.\r\n\r\nLet's go with this patch for now. If the larger refactoring\r\nof the IO class to use a private IO::FileDescriptor class\r\nis accepted then we can go back and change the Socket methods\r\nto conform better and remove this accessor.\r\n\r\n* replace calls to C++ IO obj with Ruby IO obj\r\n\r\n* remove dead and commented-out code as part of cleanup\r\n\r\n* spec out #ttyname behavior in Ruby\r\n\r\n* add #ttyname function to FFI\r\n\r\n* convert IO#ttyname from C++ to Ruby\r\n\r\n* use Regexp to handle forward slash escaping in spec\r\n\r\n* re-enable partial support for IO finalizer and autoclose\r\n\r\nThe IO finalizer is tricky since it also has to detect possible\r\nmodifications from C API calls. There will likely need to be\r\nsome rework done on the C API code itself to make this easier\r\nto manage from the Ruby side since we are trying to get as much\r\nas possible out of C/C++.\r\n\r\n* A couple fixes for finding constants.\r\n\r\n* Fixed accessing Stat in IO::FileDescriptor.\r\n\r\n* make sure proper encoding set when using #read_nonblock\r\n\r\n* first try to add finalizer support for C-extensions\r\n\r\n* improve variable name\r\n\r\n* if we fclose a FD then do not call close on it too\r\n\r\n* use Ruby-based IO functions instead of C++ object\r\n\r\n* remove unnecessary IO calls\r\n\r\n* remove test file for dead C code\r\n\r\n* remove dead C code for IO classes\r\n\r\n* remove dead code\r\n\r\n* make socket C funcs call ruby code from C; first try\r\n\r\n* Fixed defining GC stubs for IO class.\r\n\r\n* use calling frame when given else look it up\r\n\r\n* Cleanup from stw branch merge.\r\n\r\n* Revert \"use Ruby-based IO functions instead of C++ object\"\r\n\r\nThis reverts commit ca755090dec70fa54ed43fbcc1585c24ff6c5522.\r\n\r\nRe-introduced IO::open_with_cloexec to clean up this.\r\n\r\n* Removed test_io.hpp incorrectly merged.\r\n\r\n* Fixed IO::FileDescriptor#finalizer definition.\r\n\r\n* Switched fork/exec lock to SpinLock.\r\n\r\nSince a SpinLock is a simple integer on which CAS operations are performed,\r\nthere is no way to go afoul of 'ownership' during fork(). This appears to\r\nsolve a spordic issue where the child was not able to reset the fork_exec_lock_\r\ninherited from the parent process.\r\n\r\n* Properly assign rio_stream GC root.\r\n\r\n* Use built-in finalizer protocol for IO-related objects.\r\n\r\n* use files instead of pipes to test finalizers\r\n\r\n* move fd instance alloc to IO.setup\r\n\r\n* fix method signature; remove debug print\r\n\r\n* call method on self via send\r\n\r\nBefore the code was looking up 'self' by getting the current\r\ncall frame and pulling self from it. This was returning a\r\ndifferent object than expected. So now we just call #send\r\nagainst the current object; this works consistently.\r\n\r\n* cast unsigned vals back to signed to fix compiler warnings\r\n\r\n* modify order of operations via parens to satisfy compiler\r\n\r\n* hack to prevent closing rio twice\r\n\r\n* Removed .tap generating structs.\r\n\r\n* Removed double finalization bandaid.\r\n\r\nWe need to ensure this is fixed now.\r\n\r\n* Re-added Rubinius define_finalizer extension.\r\n\r\n* Fixed finalizer spec to clean up temporary.\r\n\r\n* ignore NotImplementedError for #fadvise on platforms that do not support that call\r\n\r\n* bump ruby compatibility to 2.3.0\r\n\r\n* rename spec file so ci run matches 2.3.0 ruby compat\r\n\r\n* verify that infinitely looping subprocesses can be force closed\r\n\r\n* remove special case EPIPE error handling so all write errors bubble up\r\n\r\n* clarify intent of spec\r\n\r\n* make sure we test for new transcoding options\r\n\r\n* prepare to handle passing more encoding options in IO.open/File.open\r\n\r\n* stub in an attempt at hooking up newline transcoders\r\n\r\n* stub in attempt at accessing transcoders\r\n\r\n* fix regex so it matches newline transcoders\r\n\r\n* Revert \"stub in attempt at accessing transcoders\"\r\n\r\nThis reverts commit 6455dc7590bbf9b0fb904846b115bb9cefb3ca01.\r\n\r\n* Revert \"stub in an attempt at hooking up newline transcoders\"\r\n\r\nThis reverts commit 39d255f5b72eadcce34f0deb2e83cd3c7254254c.\r\n\r\n* Revert \"make sure we test for new transcoding options\"\r\n\r\nThis reverts commit 679a247a3a932d3b22d8d20082b2026ea2b52cfa.\r\n\r\n* fix encoding_options handling to pass specs\r\n\r\n* Guard calling fclose() on NULL rio-f."
                },
                "author_login": "chuckremes",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated Gemfile.lock."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Bump Ruby version to 2.3.1."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated parser gems."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fix by @wahjava for sem_open call on FreeBSD. Closes #3677."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "GitHub",
                        "email": "noreply@github.com"
                    },
                    "message": "Merge pull request #3676 from rubinius/inline_cache\n\nInline cache rewrite"
                },
                "author_login": "brixen",
                "committer_login": "web-flow"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Reworked inline caches.\n\nUnder concurrent update, we need to preserve the coherence of the multiple\nvalues is the InlineCache object. In other words, no thread should be able to\nsee values in a single InlineCache object that represent a partial update of\nthe inline cache.\n\nTo meet this constraint, we pre-allocate the number of InlineCache slots\nspecified at process invocation for every CallSite object. Those slots point\nto individual InlineCache objects as the call site is executed and the type\nprofile changes. The pointers are swapped atomically, and if the atomic swap\nsucceeds, the previous cache is retained in a 'dead list' until the next\ngarbage collection cycle. If the update fails, the updated cache is discarded\nand the update is attempted again.\n\nNothing should retain the InlineCache pointers outside the CallSite object.\nDuring execution of the CallSite, the InlineCache pointer should be on the\nexecution stack, so swapping the pointers should not impact code that is\nalready-in-progress. At a garbage collection checkpoint, no interpreter will\nbe in-progress, so deleting the replaced InlineCache objects should be safe."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added {i,d}registers for {Compiled,Machine}Code."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Raise DeadlockError instead of abort()."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Raise exceptions instead of abort() for interpreter errors."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Assume this is not NULL. Closes #3675."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Ensure Console listener thread exits."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fix GCC issue."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Distinguish Data and typed Data."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added Fiber#dispose and auto-cleanup of Fiber.\n\nA Fiber is composed of both managed (ie object memory) resources and unmanaged\n(ie pthread) resources. When a Fiber completes normally, the unmanaged\nresources can be reclaimed simply.\n\nWhen a Fiber that has not completed normally goes out of 'scope' (ie is no\nlonger reachable from any reachable object), the garbage collector cannot\nsimply reclaim the managed resources allocated to the Fiber because the Fiber\ncomposes native resources (ie the pthread instance). In this case, the Fiber's\npthread invoke function needs to be forced to exit so that the pthread\ninstance can be reclaimed."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Process Fiber finalizer.\n\nWe do not yet dispose of unreachable but not-yet-completed Fibers."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Use non-blocking lock for managed transition & checkpointing."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Tweak ThreadNexus unlock, fork_unlock."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Retry execvp on EAGAIN."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Tweak ordering for releasing ThreadNexus lock."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Reworked locking around fork()."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added {Thread, Fiber}.count."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Don't set os_thread to creating pthread_self."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Raise FiberError if pthread resources is unavailable."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Block GC while creating Thread/Fiber structures."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed deadlock with managed phase and Fiber switching."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "GitHub",
                        "email": "noreply@github.com"
                    },
                    "message": "Merge pull request #3674 from rubinius/fibers\n\nWIP Rewrite Fibers to use pthreads"
                },
                "author_login": "brixen",
                "committer_login": "web-flow"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed race starting Fiber."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed race in Thread.fiber_list spec."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Label Threads, Fibers, & MachineThreads in VM backtrace."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed race checking fiber status."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Only process Threads for locked objects.\n\nThere is still more cruft here to clean up."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed Enumerator::Generator naming."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed passing Fiber values."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added Fiber#transfer spec, cleaned up Fiber#resume spec."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Reworked Fiber transitions."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Store all locked objects in the Thread."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Cleaned up spec tags for Thread, Fiber."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added Thread.fiber_list, Fiber.list, Fiber.main."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added specs for Thread.fiber_list, Fiber.list, Fiber.main."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Clean up after some Fiber specs."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed Thread#raise."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Clean up Fiber debris in VariableScope."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed Thread#kill."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Reference current Fiber from Thread."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed passing arguments with Fiber.yield, Fiber#resume."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "A couple Thread, Fiber spec fixes."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed interrupting Thread with active Fiber."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Simplify Fiber."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed VM tests."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed propagating exceptions from fibers to the thread."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed Thread, Fiber locals."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added new Fiber implementation.\n\nEach Fiber is composed of a native machine thread and set of synchronization\nprimitives that effectively serializes the concurrency of the associated\nThread instance and all Fiber peers (Fibers associated with the same Thread)."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Specs for Thread#thread_variable{s, _get, _set, _key?}."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "A bit of Enumerator cleanup."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed Fiber custom stack switching."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fibers are always enabled. Removed configure option."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Slightly relax logger semaphore threshold.\n\nRather than possibly deadlocking, we reset the logger semaphore if it appears\nto be in a bad state. This means it's possible that incorrect interleaving\ncould occur in the log file. We accept this tradeoff for not deadlocking a\nprocess.\n\nWe attempt to make the threshold high enough to avoid spurious failures but\nnot high enough to lock up a process too long because a Thread may write to\nthe log when the process is trying to checkpoint for eg garbage collection."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated mkmf version."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated mkmf thinks this file should exist."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated gems."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed deadlock adding finalizer."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed -Xhelp variable type for Regexp."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed const type."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added regex configuration type and converted log filters."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed compressing rotated logs."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed concurrent process access to FileLogger."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added logging for config options.\n\nThe configuration options can come from five different locations:\n\n  1. The file $HOME/.rbxconfig if $HOME is defined.\n  2. The file .rbxconfig in the current working directory.\n  3. The RBXOPT environment variable.\n  4. The command line options.\n  5. The default values.\n\nThis may cause ambiguity about what configuration options are in effect when a\nprocess runs. The -Xsystem.log.config (default: yes) option prints the\nconfiguration options that were parsed to the log file."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added config option to filter source location.\n\nThreads, Fibers, and subprocess commands, like spawn, fork, backtick and exec,\nlog the source code location that invoked them. This location can now be\nfiltered based on a configuration option.\n\nThe default is to filter the Ruby core library location. But when a utility\nlibrary is used, the location will always show the same utility library source\ncode. Adding a custom filter that excludes the library locations allows the\nclient source code location to be logged instead.\n\nThe following configuration options designate the source filters:\n\n  -Xmachine.thread.log.filter (default '^core/.*$')\n  -Xmachine.fiber.log.filter (default '^core/.*$')\n  -Xsystem.log.filter (default '^core/.*$')\n\nThe filter must match the entire source code line to exclude it. The first\nnon-matching source code line will be logged.\n\nThe filter expression uses the C++ regex facility and ECMAScript syntax."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Use spinlock_mutex for InlineCache updates."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Don't block when locking finalizer list mutex."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Preserve ThreadNexus phase_flag state.\n\nThe ThreadNexus::phase_flag is part of the thread synchronization mechanism\nand additionally used to put the system into a sort of 'singled-threaded mode'\nthat can run arbitrary code. In order to preserve this, we have to know that\nwhen we 'acquired' the lock whether the lock was already held by us. If it\nwas, we don't want to release it."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Don't block during spawn or backtick."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Initialize logger lock."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed finalizer deadlock.\n\nThe finalizer thread is now running as unmanaged phase while doing list\nmanipulations and the transition to managed phase is done by the individual\nfinalizer object depending on whether it is a managed or unmanaged finalizer."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added config option for logging process lifetime events.\n\nDuring the process lifetime, various events like spawn, fork, exec, etc may be\nlogged. The following option allows turning off those events;\n\n  -Xsystem.log.lifetime\n\nThis may be useful to filter information from the logs when running\nparticularly noisy processes that do a lot of subprocess activity. The default\nstate, however, is to log these events because they can be extremely helpful\nwhen debugging issue."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Recreate logger instance after fork().\n\nDuring a fork() event, it's possible for another thread to be writing to the\nlogger and the logger mutex to be in an unknown state in the child. So, we\nrecreate the logger post fork() in the child. This also simplifies ensuring\nthat eg the PID stamp is correct."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added config for logging Thread, Fiber events.\n\nThe follow configuration options control whether to log lifetime events (eg create, exit)\nfor Thread and Fiber, and whether to log finalizer activity.\n\n  -Xmachine.thread.log.lifetime (default true)\n  -Xmachine.thread.log.finalizer (default false)\n  -Xmachine.fiber.log.lifetime (default true)\n  -Xmachine.fiber.log.finalizer (default false)"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed waiting for failed spawn, backtick children."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed specs to properly wait for child processes."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed explicit mutex unlock straggler.\n\nThis got left in when I was trying to get the mutex to properly unlock across\nfork() calls in both parent and child process."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Revert \"Another Travis test.\"\n\nThis reverts commit a0a7287d1bee69013edfede1e9783d06e55963d2."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Revert \"Enable ccache for faster builds (#3660)\"\n\nThis reverts commit 06a4629e01a42e3712e8333a4353a87faee500fa."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Increase Enumerator Fiber stack size."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Hold finalizer lock when signaling."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Improved Fiber attributes and logging.\n\nFiber#source returns the non-core library source code line where the Fiber\nwas created. Fiber#thread_name returns the name of the Thread that created the\nFiber. Fiber#fiber_id returns a unique ID for the Fiber instance.\n\nThe Rubinius log includes entries for the Fiber create and exit events."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added Thread#source, improved Thread#inspect."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Improved logging message format.\n\nGenerally, log messages for non-exceptional events should follow the format:\n\n  object: operation: details\n\nFor example: 'process: fork: child: <PID, ...'\n\nFor exceptional events, the format should be:\n\n  <strerror result>: object: details"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Another Travis test."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Switched Data, Fiber to normal logging."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Revert \"Test if Travis failure is Fiber-related.\"\n\nThis reverts commit 9f644d75e2662624f8787fa0a3916b10a80c283d."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added debug logging for Data, Fiber finalize."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Test if Travis failure is Fiber-related."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Only reset the logger lock in the fork child."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Cleaned up passing STATE to logger.\n\nThe logging facility is intentially highly decoupled from Rubinius so that it\ncan be used through the entire process lifetime without depending on\nstructures that need to be constructed and destructed. The STATE dependency\nwas added to try to synchronize logging across fork() calls, but that wasn't a\ngood architecture choice."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Use sequentially consistent memory order for spinlock_mutex."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Don't copy dead Fiber stack to heap.\n\nEither status_ is wrong and the Fiber isn't dead, in which case we run the risk of\nlosing its stack, or we should ignore the copy_to_heap."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Improved logger locking.\n\nThe logger is a low-level mechanism that should not depend on sophisticated\nRubinius code, but still needs synchronization to produce intelligible results\nwhen any thread at any time may log some activity.\n\nWe switch to a custom spinlock mutex implemented with C++11 features\n(unfortunate that C++11 didn't think it was essential to provide such a mutex\nbut it's trivial to create).\n\nSince the process may log something at any time from any thread, running\nmanaged or unmanaged, even while fork'ing, we always reset the state of the\nlock after fork()."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Omer Katz",
                        "email": "omer.drow@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Enable ccache for faster builds (#3660)\n\n* Enable ccache for faster builds.\r\n\r\n* Print cache statistics and install with 2 jobs\r\n\r\n* Enable bundler cache as well.\r\n\r\n* Install ccache on OSX as well.\r\n\r\n* Export CC and CXX manually in order to use ccache.\r\n\r\n* Cache bundler manually since in C++ environments travis doesn't recognise the bundler directive.\r\n\r\n* Workaround ccache bug with clang\r\n\r\nSee http://petereisentraut.blogspot.co.il/2011/05/ccache-and-clang.html\r\n\r\n* export different ccache path for OSX.\r\n\r\n* Fix syntax error.\r\n\r\n* Use ruby 2.2.0.\r\n\r\n* Another fix for ccache with clang and install ruby 2.2.0 from rvm.\r\n\r\n* Print cache statistics for debugging."
                },
                "author_login": "thedrow",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed removing a finalizer."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Re-added Rubinius define_finalizer extension."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Ensure GC.start is synchronized."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Moved CallSite finalization to CompiledCode."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Merge pull request #3659 from rubinius/finalizers\n\nReworked finalizer mechanism."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "commiter": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "message": "add reminder to push after tagging new release"
                },
                "author_login": "chuckremes",
                "committer_login": "chuckremes"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Reworked running finalizers."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added ObjectSpace.define_finalizer specs."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Improved logging of subprocess creation.\n\nThe log will now reliably include the non-core method that invoked the spawn,\nbacktick, fork, or exec command. This will point to the application code or\nrubygems code, rather than the Rubinius core library. The location in the app\ncode is much more useful typically than the location in the Rubinius core\nlibrary code."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Reset logger lock on fork.\n\nWhen calling fork(), we hold all running threads to keep them in known states\nacross the call to fork().\n\nIn the child process, the only thread that persists is the thread that called\nfork(). If another thread was about to write to the logger and got suspended\nbefore unlocking the logger mutex, the mutex will be locked in the child and\nwill block any other thread that tries to lock it. The thread in the parent\nthat would have unlocked the lock won't exist in the child.\n\nAn alternative would be for the thread calling fork to hold all the relevant\nlocks before calling fork(), and then unlocking them all after fork() in the\nchild. Functionally, that wouldn't be any different and would impose\nadditional costs before the fork().\n\nAll code needs to be audited for any locks that could be held across a fork()\ncall and all those should be re-init'd in the child."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Add deprecation notice for 32-bit and GCC."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Properly wait for failed process status for #spawn, #`.\n\nIf #spawn or #` fail, the PID of the subprocess isn't passed back, so it\ncannot be properly reaped by the OS with a Process.waitpid call. So we have to\ndo that in the VM."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Replaced ThreadNexus recursive mutex with atomic flag.\n\nRecursive mutex under C++11 plays very badly with fork(), apparently. But we\nmust be able to do stuff like run garbage collection and Ruby code during\nshutdown because we process Ruby finalizers, which may run pretty much\narbitrary Ruby code.\n\nHence, we need a mechanism to hold all threads except the halting thread but\nalso allow that thread to run arbitrary managed code, one function of which is\nrunning the garbage collection code, which needs to stop the world for some\nthings, which relies on the ThreadNexus synchronization code, and on and on.\n\nSo we use an atomic variable that holds the thread's id and if the variable\nalready has a thread's id, that thread is the one who set it, and hence can\nproceed confident that no other thread is running."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed Dockerfile update script."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Convert ThreadNexus threads lock to C++11."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Convert ThreadNexus stop flag to atomic."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Eliminate extra halt lock.\n\nSince the phase_lock is recursive, and we *always* need to acquire the lock\nwhen transitioning to managed phase, the halting thread can just holt this\nlock unconditionally while halting. That thread will then be able to run\nstop-the-world garbage collection with the normal process which acquires and\nreleases the phase lock. This eliminates the second halt lock."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Slightly relax memory ordering for ThreadNexus::Phase.\n\nThis ordering is slightly relaxed from the default std::memory_order_seq_cst\nbut may not have any impact on typical x86 hardware."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Reworked ThreadNexus.\n\nWhile halting the process, all threads except for the thread processing the\nhalt request must be paused. Additionally, any threads transitioning from\nsleep or from unmanaged code must also pause.\n\nAlso, at every moment that a thread is possibly running managed code, it must\nhave the proper thread phase state, or it could modify code concurrently with\nthe garbage collector in a way that leads to corrupt objects or references\nthat are no longer valid."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Adjust stack size in Thread, Fiber specs."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated help output and cleaned up some deprecated scripts."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Improved -Xhelp rendering."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed substitution regexp for versioned gcc/g++/clang/clang++."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Allow per-Thread, per-Fiber stack sizing.\n\nThread.new, Thread.start, Thread.fork, and Fiber.new all take an optional\nkeyword argument of the form: 'stack_size: Fixnum', where Fixnum includes\nobjects that respond to #to_int. The keyword argument, if present, sets the\nsize of the Thread's or Fiber's stack size. If the argument is not present or\nis zero, the default stack size, configured with -Xmachine.thread.stack_size\nand -Xmachine.fiber.stack_size are used instead.\n\nAdded configuration for machine.thread.stack_size to set the default size of\nThread stacks. Also moved fiber.stack_size configuration under machine\nsection.\n\nAlso added configuration for machine.stack_cushion to set the size in bytes of\nthe cushion to leave at the stack end when checking for stack usage. This is\nnecessary because we check the stack usage before calling a method. The method\nmay use quite a bit of stack but we can't know this beforehand (hand-wavy\n\"can't\" here). If we are near the end but not yet at the end, we could easily\nexhaust the stack after calling the method and then segfault."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added Fiber created, destroyed metrics."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed stack depth checking with Fiber."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Start to rework the last remnants of the legacy JIT."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Renamed InternalThread to MachineThread.\n\nThis naming is consistent with the refactorings toward Machine being the main\nentity for executing managed code and properly contrasts with future\nrefactoring to make ManagedThread the counterpart for managed code execution."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added new JIT thread."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Some configuration cleanup."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Archive runtime/core every successful Travis build."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Build debug C-ext's if Rubinius is a debug build."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Use local symlinks to provide cc, c++ on PATH."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed substituting RbConfig::CONFIG for cc, c++, cpp."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added JSON output for profiler via diagnostics."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Shuffled Profiler code."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Cleanup up JSON generation in diagnostics."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added profiler report interval."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed VM.backtrace."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Try yet again to secure Gitter channel info."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed VM.backtrace API.\n\nCode in the wild is using the old version of this, so we'll support it until\nwe can effectively update old users."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed profile output to use full code description."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Short circuit earlier if code is already tracked by profiler."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added config for enabling profiler in subprocesses."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added more profiler functionality.\n\nUse -Xsystem.profiler.target=<path> to set the output path for the profiler\nreport. The path can optionally contain the text $PID where desired and the\nprocess ID will be substituted. Quoting the option may be necessary to prevent\nthe shell from expanding $PID prematurely. For example:\n\n  rbx -Xsystem.profiler.target='path/to/profiler_report-$PID.txt'\n\nThe fully qualified name is implemented yet because it requires an additional\ndata structure to properly track the components, so only the bare method name\nis displayed."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Don't block GC on profiler interval."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added profile metrics."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added simple, per-thread, random interval sampling.\n\nThis is mostly a temporary experiment that will likely be replaced with a\ncalling-context tree or similar structure and a separate profiler thread."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed VMJIT, added profile interval to checkpoint."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed remnants of rbxti."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge branch 'profiler'"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Simply track MachineCode execution."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated to Bundler 1.12.3."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into profiler"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated profiler gems versions."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed Ubuntu 12.04 from binary builds."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into profiler"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated version of coverage gems."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed syntax error in .travis.yml."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Ssssssssssize_t GCC."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Leading gcc carefully by the hand."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Cast cast cast your bits gently for GCC. Closes #3652."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into profiler"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into mcjit"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "A bit more diagnostics cleanup."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated gems_list.txt."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Merge pull request #3646 from rubinius/diagnostics\n\nWIP: Add Diagnostics mechanism"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Create some diagnostics reporting indirection."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Cleaned up old Diagnostics logging."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Merge pull request #3649 from rideliner/arity\n\nFix Proc#arity."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Nathan Currier",
                        "email": "nathan.currier@gmail.com"
                    },
                    "commiter": {
                        "name": "Nathan Currier",
                        "email": "nathan.currier@gmail.com"
                    },
                    "message": "Fix Proc#arity."
                },
                "author_login": "rideliner",
                "committer_login": "rideliner"
            },
            {
                "commit": {
                    "author": {
                        "name": "Nathan Currier",
                        "email": "nathan.currier@gmail.com"
                    },
                    "commiter": {
                        "name": "Nathan Currier",
                        "email": "nathan.currier@gmail.com"
                    },
                    "message": "Specs for Proc#arity. The current specs cover lambdas twice."
                },
                "author_login": "rideliner",
                "committer_login": "rideliner"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added diagnostics emitter."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into diagnostics"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed setting internal thread size.\n\nOn FreeBSD, setting the stack to 4096 bytes for threads like the Console\nListener was not sufficient. This resulted in a SEGV while booting Rubinius,\nwhich happens before the signal handler has been set up, so nothing is shown\nin the logs. This also causes Rubinius to abort while trying to build\nMelbourne, leaving Rubinius in a very difficult to debug configuration."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added Diagnostics thread."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed SystemDiagnostics object.\n\nInstead of a single data object that collects all system diagnostics, this is\nthe first step of using a single mechanism to emit diagnostics from a variety\nof system components, without coupling them."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added -Xsystem.diagnostics.target.\n\nThis specifies the location to send diagnostics data."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added RapidJSON.\n\nhttps://github.com/miloyip/rapidjson c02d52ad56595dc70b38daf46b5f315d3a7115fa"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added include for RapidJSON."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into mcjit"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed merge from master."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into profiler"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Cleaned up checking for interrupted thread."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Merge pull request #3644 from rubinius/zsuper-splat-and-keywords\n\nRefactor zsuper instruction to handle arguments correctly"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Add a spec for zsuper passing splat and keyword arguments together"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Refactor zsuper instruction to handle arguments correctly\n\nFixes #3643"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added header file for getrlimit()."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated rubinius-ast version."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge branch 'rideliner-block_arg_overlooked'"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge branch 'block_arg_overlooked' of https://github.com/rideliner/rubinius into rideliner-block_arg_overlooked"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge branch 'rideliner-block_nested_arg'"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge branch 'block_nested_arg' of https://github.com/rideliner/rubinius into rideliner-block_nested_arg"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Reworked checking stack overflow."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Nathan Currier",
                        "email": "nathan.currier@gmail.com"
                    },
                    "commiter": {
                        "name": "Nathan Currier",
                        "email": "nathan.currier@gmail.com"
                    },
                    "message": "Spec for not capturing a local variable in place of a block argument."
                },
                "author_login": "rideliner",
                "committer_login": "rideliner"
            },
            {
                "commit": {
                    "author": {
                        "name": "Nathan Currier",
                        "email": "nathan.currier@gmail.com"
                    },
                    "commiter": {
                        "name": "Nathan Currier",
                        "email": "nathan.currier@gmail.com"
                    },
                    "message": "Spec for a block local assigned in a nested scope before initialization."
                },
                "author_login": "rideliner",
                "committer_login": "rideliner"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed instrumenting profiler."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added missing CallSite#reset spec file."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed rbxti."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added CallSite#reset.\n\nThis will enable resetting all the CallSites in a process to a known state to\nbe able to eg using CallSite data for computing code coverage."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Cleaned up more JIT code."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into mcjit"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "A fresh start..."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Singleton classes can't have subclasses."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Re-added caching at check_serial instruction."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Revert \"Attempt to use Travis UI-set env var for Gitter.\"\n\nThis reverts commit dba105de28d7a5cd5344b11a29ffe330f6b79b2a.\n\nApparently, nope."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Attempt to use Travis UI-set env var for Gitter."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Revert \"Attempt to use secure env var for Gitter URL.\"\n\nThis reverts commit a141ba02eaeefe60bfab62c7b6e3cb4f66dd6148.\n\nThis can be set directly through the Travis interface."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Attempt to use secure env var for Gitter URL."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Merge pull request #3639 from dylanmckay/extend-release-script\n\nCompile in debug mode when in git submodule"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Dylan McKay",
                        "email": "dylan.mckay@powershop.co.nz"
                    },
                    "commiter": {
                        "name": "Dylan McKay",
                        "email": "dylan.mckay@powershop.co.nz"
                    },
                    "message": "Compile in debug mode when in git submodule\n\nWe currently compile in debug mode if there is a `.git` directory in the project\nroot.\n\nThis compiles Rubinius in debug mode even if `.git` is a file, so that\nwe compile in debug mode when rubinius is in a git submodule."
                },
                "author_login": "dylanmckay",
                "committer_login": "dylanmckay"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Always report build status in Gitter."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added C-API define for rb_big_pack. Closes #3637."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Merge pull request #3638 from rubinius/inline_cache\n\nReworked call site, inline cache mechanism."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Reworked call site, inline cache mechanism.\n\nA CallSite is an abstraction of the point of call & return for another\nprocedure. An InlineCache is an abstraction of a particular instance of an\nexecutable at a CallSite.\n\nIn a 'statically typed' (or early bound) language, the executable at the call\nsite is known 'statically', via textual analysis of the program text. In a\n'dynamically-typed' (or late bound) language, the particular executable is not\nknown until the program is executed. Consequently, in a late-bound language, a\ncall site must permit dynamic reconfiguration based on the program's\nexecution.\n\nThis dynamic reconfiguration requires prediction: when this kind of object is\nseen, we predict we will see it again. The cost of finding the executable in\nthe first place can then be reduced by caching the previous result of looking\nup the executable. When we see this kind of object, we can retrieve the\nexecutable from the cache at less cost than looking it up.\n\nIf our predictions are correct, and the mechanism of creating and retrieving\nitems from the cache is actually less than searching for the item, we can\nexecute the program more efficiently. However, predictions can be wrong. If\nthey are wrong, the cache mechanism can become pure overhead, work done that\nproduces no value. In this case, the caching mechanism will make the program\n*less* efficient rather than more efficient.\n\nThe number of cached items is typically limited because as the number grows,\nthe cost of retrieving items typically grows. Ideally, the first cached item\nwould always be the desired one. When that is not true, some (hopefully less\ncostly than lookup) search mechanism is required. Contiguous structures that\npermit linear probing and are CPU cache-efficient usually perform very well.\nIf the number of entries grows, the algorithm needs to change from on O(n)\ncomplexity to something closer to O(1), or the extra work of the caching\nmechanism will be a cost increase instead of a cost reduction.\n\nTo account for our predictions being wrong, we need to be able to update,\nreplace, or even discard previous predictions. In same cases, we may need to\ndisable the caching mechanism completely. This latter case is true when the\ntypes of objects seen at a call site vary widely.\n\nThis change also adds some new metrics for understanding how a program is\nperforming from the perspective of the call sites and inline caches. The next\nmechanism to add is diagnostics to see the operation of individual caches\ninstead of the aggregate values that the metrics provide.\n\nAnother improvement that is needed is to cache `#method_missing`,\n`#respond_to?` and `#send` call sites."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Improved cache metrics."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Coalesce condition blocks so GCC *5* can understand."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated gems_list.txt."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Remove tracing Symbols in MachineCode objects.\n\nWe need to trace Symbols for collecting unused ones, but we don't do that now\nand we can do it with the upcoming reference counting mechanism."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added locking to LinkedList operations.\n\nUntil we remove this mechanism, we need to lock operations because somewhere\naround subprocess creation wires are getting crossed, as seen in the linked\nlist assertion that randomly shows up on Travis."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Revert \"Disable OnStack used for spawn.\"\n\nThis reverts commit a932b2329cfc8cab5cd2815badc92eeb04bc9817.\n\nUntil we replace this mechanism, we're going to lock operations."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Some cleanup internalizing CompiledCode."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Disable OnStack used for spawn."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Untrusted status is a synonym of tainted."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added a few more machine metrics."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Create call site and constant cache lists."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Support push_float pseudo insn.\n\nWe should replace push_literal with specific instructions like push_string,\npush_symbol, push_float."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated specs for insn changes."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated gems."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Primitive invokers aren't managed objects."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed BytecodeVerifier for CompiledCode#literals change."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed runtime use of CompiledCode#literals."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "A proc call can use an implicit block. Fixes #3202."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed issues from merging #3182."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed using BigDecimal in rand specs."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge branch 'fengb-rand-fix'"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge branch 'rand-fix' of https://github.com/fengb/rubinius into fengb-rand-fix"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge branch 'fmfdias-add_numeric_step_kw_args'"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge branch 'add_numeric_step_kw_args' of https://github.com/fmfdias/rubinius into fmfdias-add_numeric_step_kw_args"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated Melbourne version."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed a couple things from the keywords patch merge."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge branch 'ahmadsherif-fix/zsuper-keyword-args'"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge branch 'fix/zsuper-keyword-args' of https://github.com/ahmadsherif/rubinius into ahmadsherif-fix/zsuper-keyword-args"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Merge pull request #3635 from jsyeo/jsyeo-homebrew-sha256\n\nUse sha256 for our homebrew formula"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "message": "Use sha256 for our homebrew formula"
                },
                "author_login": "jsyeo",
                "committer_login": "jsyeo"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Actually commit fixes for #3634."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Array#new_range fills unassigned slots with nil. Fixes #3634.\n\nThis method needs to be replaced with a Mirror method so it is not polluting\nthe Array namespace."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "String#dup returns copy when no modification made. Fixes #3633."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed custom call site dispatch.\n\nThis abstruse mechanism will be cleaned up with the call site and inline cache\nrewrite."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed CallCustom.\n\nCallCustom was added to provide a mechanism for binding a call site that was\nindependent of Ruby method resolution semantics.\n\nThe instruction set is being improved to, among other things, decouple method\nor function resolution, caching, and invocation. This will provide arbitrary\nsemantics for finding the code to run, caching it, and invoking it."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Moved jit_primitives.cpp to jit/ directory."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into mcjit"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Decouple GC::Profiler from Metrics a bit.\n\nUltimately, the very simplistic utility of GC::Profiler isn't useful and\nRubinius::Metrics should be used directly instead. We may remove support for\nGC::Profiler in the future.  For now, using it requires enabling Rubinius\nMetrics."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Don't start Metrics if not requested.\n\nEventually, we'll add an API to start this on demand via the Console."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed deprecated CompiledMethod and StaticScope.\n\nAlso adds deprecation for CallCustom."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "A bit more CallFrame cleanup.\n\nWe don't have a constructor for CallFrame so it's not always clear which\nfields are initialized. In this case, VM::call_frame_ is NULL when the VM\ninstance is created, so calling VM::push_call_frame sets previous to NULL when\npushing the new frame. This is fine, but brittle.\n\nUltimately, CallFrame needs to be split into separate frame types for managed\ncode, FFI, JIT, and native methods (ie C-API), and constructors should be\ndefined for every type."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Use correct name for heroku S3 path.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Add verbose logging to curl S3 uploading.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed issues with concurrent marking.\n\nAs noted in one of the comments in this commit, there is a serious issue with\npartially initialized data when we have a concurrent marking thread running.\nWhen a Tuple is created, but the fields are not initialized to nil, they may\ncontain random data.\n\nWhen a value is stored into a managed object, we run a write barrier. This bit\nof code serves two functions. First, it \"remembers\" the object being stored in\ncase the object it is being stored into is a mature object and the object\nbeing stored is a young object. When the young collector runs, those\n\"remembered\" objects are part of the roots for the young region being\ncollected. Second, if the object being stored into hasn't been traced yet, we\ntrace it, and we add the object being stored to the stack of objects to trace.\n\nIf the Tuple fields aren't initialized, we'll hit a garbage value when we try\nto trace it. If we don't run the write barrier when we assign values, we have\nthe chance of losing one of those references. An alternative to \"doubly\ninitializing\" the Tuple instance is to run two loops. One that assigns values\nand one that runs the write barrier on the entries. It should be apparent that\nwe haven't really saved anything by using this purported \"optimization\" of\ncreating the Tuple uninitialized (dirty).\n\nThis is a good lesson in optimizing. The best optimization is not running any\ncode at all, rather than making running code faster, if that is an option. It\nusually will give greater return to rework code in a way that significant code\ncan be eliminated vs \"optimized\". In this case, we should get rid of Array and\nTuple in the middle of stuff like calling methods."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Some Arguments tweaks."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Show what files were built on Heroku build.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Don't trigger docker from this repo.\n\nThe docker builds are triggered from the Ubuntu 12.04 and 14.04 builds in\nthe rubinius-build repo."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated rubygems to 2.6.2\n\nRubyGems 2.6.2 installed\n\n=== 2.6.2 / 2016-03-12\n\nBug fixes:\n\n* Fix wrong version of gem activation for bin stub. Pull request #1527 by\n  Aaron Patterson.\n* Speed up gem activation failures. Pull request #1539 by Aaron Patterson.\n* Fix platform sorting in the resolver. Pull request #1542 by Samuel E.\n  Giddins.\n* Ensure we unlock the monitor even if try_activate throws. Pull request\n  #1538 by Charles Oliver Nutter.\n\n=== 2.6.1 / 2016-02-28\n\nBug fixes:\n\n* Ensure `default_path` and `home` are set for paths. Pull request #1513\n  by Aaron Patterson.\n* Restore but deprecate support for Array values on `Gem.paths=`. Pull\n  request #1514 by Aaron Patterson.\n* Fix invalid gem file preventing gem install from working. Pull request\n  #1499 by Luis Sagastume.\n\n=== 2.6.0 / 2016-02-26\n\nMinor enhancements:\n\n* RubyGems now defaults the `gem push` to the gem's \"allowed_push_host\"\n  metadata setting.  Pull request #1486 by Josh Lane.\n* Update bundled Molinillo to 0.4.3. Pull request #1493 by Samuel E. Giddins.\n* Add version option to gem open command. Pull request #1483 by Hrvoje\n  Šimić.\n* Feature/add silent flag. Pull request #1455 by Luis Sagastume.\n* Allow specifying gem requirements via env variables. Pull request #1472\n  by Samuel E. Giddins.\n\nBug fixes:\n\n* RubyGems now stores `gem push` credentials under the host you signed-in for.\n  Pull request #1485 by Josh Lane.\n* Move `coding` location to first line. Pull request #1471 by SHIBATA\n  Hiroshi.\n* [PathSupport] Handle a regexp path separator. Pull request #1469 by\n  Samuel E. Giddins.\n* Clean up the PathSupport object. Pull request #1094 by Aaron Patterson.\n* Join with File::PATH_SEPARATOR in Gem.use_paths. Pull request #1476 by\n  Samuel E. Giddins.\n* Handle when the gem home and gem path arent set in the config file. Pull\n  request #1478 by Samuel E. Giddins.\n* Terminate TimeoutHandler. Pull request #1479 by Nobuyoshi Nakada.\n* Remove redundant cache. Pull request #1482 by Eileen M. Uchitelle.\n* Freeze `Gem::Version@segments` instance variable. Pull request #1487 by\n  Ben Dean.\n* Gem cleanup is trying to uninstall gems outside GEM_HOME and reporting\n  an error after it tries. Pull request #1353 by Luis Sagastume.\n* Avoid duplicated sources. Pull request #1489 by Luis Sagastume.\n* Better description for quiet flag. Pull request #1491 by Luis Sagastume.\n* Raise error if find_by_name returns with nil. Pull request #1494 by\n  Zoltán Hegedüs.\n* Find_files only from loaded_gems when using gemdeps. Pull request #1277\n  by Michal Papis.\n\n=== 2.5.2 / 2016-01-31\n\nBug fixes:\n\n* Fix memoization of Gem::Version#prerelease? Pull request #1125 by Matijs van\n  Zuijlen.\n* Handle trailing colons in GEM_PATH, by Damien Robert.\n* Improve the Gemfile `gemspec` method, fixing #1204 and #1033. Pull request\n  #1276 by Michael Papis.\n* Warn only once when a gemspec license is invalid. Pull request #1414 by Samuel\n  E. Giddins.\n* Check for exact constants before using them, fixing Ruby bug #11940. Pull\n  request #1438 by Nobuyoshi Nakada.\n* Fix building C extensions on Ruby 1.9.x on Windows. Pull request #1453 by Marie\n  Markwell.\n* Handle symlinks containing \"..\" correctly. Pull request #1457 by Samuel E.\n  Giddins.\n\nMinor enhancements:\n\n* Add `--no-rc` flag, which skips loading `.gemrc`. Pull request #1329 by Luis\n  Sagastume.\n* Allow basic auth to be excluded from `allowed_push_host`. By Josh Lane.\n* Add `gem list --exact`, which finds gems by string match instead of regex. Pull\n  request #1344 by Luis Sagastume.\n* Suggest alternatives when gem license is unknown. Pull request #1443 by Samuel\n  E. Giddins.\n* Print a useful error if a binstub expects a newer version of a gem than is\n  installed. Pull request #1407 by Samuel E. Giddins.\n* Allow the (supported) s3:// scheme to be used with `--source`. Pull request\n  #1416 by Dave Adams.\n* Add `--[no-]post-install-message` to `install` and `update`. Pull request #1162\n  by Josef Šimánek.\n* Add `--host` option to `yank`, providing symmetry with `pull`. Pull request\n  #1361 by Mike Virata-Stone.\n* Update bundled Molinillo to 0.4.1. Pull request #1452 by Samuel E. Giddins.\n* Allow calling `build` without '.gemspec'. Pull request #1454 by Stephen\n  Blackstone.\n* Add support for `source` option on gems in Gemfile. Pull request #1355 by\n  Michael Papis.\n* Function correctly when string literals are frozen on Ruby 2.3. Pull request\n  #1408 by Samuel E. Giddins.\n\n=== 2.5.1 / 2015-12-10\n\nBug fixes:\n\n* Ensure platform sorting only uses strings. Affected binary installs on Windows.\n  Issue #1369 reported by Ryan Atball (among others).\n  Pull request #1375 by Samuel E. Giddins.\n* Revert PR #1332. Unable to reproduce, and nil should be impossible.\n* Gem::Specification#to_fullpath now returns .rb extensions when such a file\n  exists.  Pull request #1114 by y-yagi.\n* RubyGems now handles Net::HTTPFatalError instead of crashing.  Pull\n  request #1314 by Samuel E. Giddins.\n* Updated bundled Molinillo to 0.4.0.  Pull request #1322, #1396 by Samuel E.\n  Giddins.\n* Improved performance of spec loading by reducing likelihood of loading the\n  complete specification.  Pull request #1373 by Aaron Patterson.\n* Improved caching of requirable files  Pull request #1377 by Aaron Patterson.\n* Fixed activation of gems with development dependencies.  Pull request #1388\n  by Samuel E. Giddins.\n* RubyGems now uses the same Molinillo vendoring strategy as Bundler.  Pull\n  request #1397 by Samuel E. Giddins.\n* Fixed documentation of Gem::Requirement.parse.  Pull request #1398 by\n  Juanito Fatas.\n* RubyGems no longer warns when a prerelease gem has prerelease dependencies.\n  Pull request #1399 by Samuel E. Giddins.\n* Fixed Gem::Version documentation example.  Pull request #1401 by Guilherme\n  Goettems Schneider.\n* Updated documentation links to https://.  Pull request #1404 by Suriyaa\n  Kudo.\n* Fixed double word typo.  Pull request #1411 by Jake Worth.\n\n------------------------------------------------------------------------------"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated gems_list.txt."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "commiter": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "message": "minor refactoring of @mode handling\n\nDoing this to ease the merging of the codedb-ffi-io branch\nlater on. While fixing some code in rubysl-socket it was noted\nthat it touched the @mode variable directly. To simplify\ncompatibility (forward and backward) with that gem, it makes\nsense to move this @mode handling to its own methods."
                },
                "author_login": "chuckremes",
                "committer_login": "chuckremes"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "A bit of write_barrier cleanup."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into mcjit"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed newlines from base64 digest."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Deploy Docker Hub update."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Properly guard managed objects on stack while loading code."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed setting FSEvent handle on Linux."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Standardized use of accessors.\n\nThere are two types of instance variables used in the C++ code:\n\n1. Variables that reference managed objects and which the GC needs to know\nabout to properly trace the object graph. We call these \"slots\".\n2. Variables that reference native types (eg int, double, etc) that the GC\n*cannot* trace (the GC would misunderstand numbers for memory addresses, for\nexample).\n\nPreviously, we treated these to types quite differently. We used the '// slot'\nnotation when declaring the first type so that we could automatically generate\ncode to process the objects. The second type was usually somewhat consistent\nbut also ad hoc in many places.\n\nNow we mostly use two macros (attr_accessor for the first type, and attr_field\nfor the second type) that both define the variables and define setters and\ngetters for them. There are still some places where this needs to be cleaned\nup.\n\nOne reason that we need to be very careful about the setters for the first\ntype of variable (the managed object references) is that when the concurrent\nGC is running, we need to know when an object reference is stored into an\nobject that may have already been processed by the marker. If we don't see\nthis, that object may be considered unreachable by the GC *even though it's\nbeing referenced*. This results in the equivalent to a use-after-free bug in a\nlanguage with manually managed memory.\n\nConsistently using the managed object reference accessors means that we can\nlayer other behavior on the access functions. For example, if we tag objects\nwith an identifier for the thread that created them, we can log or prevent\nmutation access from a different thread."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Revert \"Finish running finalizers before halting the machine.\"\n\nThis reverts commit 7d071f0cfe85d2fee6964b9292947470fbc8e40a."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Converted // slot annotation to attr_accessor.\n\nInstead of duplicating the slot definition with the attr_{accessor, reader,\nwriter} annotation, we redefine the macros to define the slots. This works for\nall but two cases, which are exceptional, and we define attr_field to define\nthe accessors without defining the slot."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Finish running finalizers before halting the machine.\n\nDuring the halting process, when running finalizers, since finalizers may be\nRuby objects and may run Ruby methods, we need to ensure the system is still\nfully operational.\n\nDuring the finalizer finish process, no new finalizers may be created."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added GC cycle to object header.\n\nThis is a temporary mechanism to help identify when objects are being created.\nIt will be removed when the memory regions are reworked."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added specific header bit for Large memory region."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into mcjit"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Partially mitigate allocation spills with concurrent marker.\n\nSee the commit message for edd398c79c998eb05ed595a49cd1cbbc7664e8c1."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Improved bytecode verification failure messages."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added indicator to -v for concurrent GC enabled."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added stack protection for loading CompiledCode object."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Reworked concurrent mark thread.\n\nThe primary reason to use a concurrent marking strategy is to reduce the time\nduring which the mutator threads are suspended while marking all reachable\nobjects.\n\nHowever, not running the GC synchronously when a memory threshold is reached\n(eg when the Immix region has exhausted available chunks) means that heap\ngrowth or spill over to another region (eg the Large Object Space) is\nessential.\n\nThe growth is undesirable (because right now there is no compaction and growth\nwill continue unbounded) and the spill is especially undesirable because the\nLOS collector is much less efficient than the Immix collector.\n\nSince the marker thread is essentially racing the mutator threads, under high\nallocation rates, the marker would be perpetually behind and a lot of growth\nor spill would occur.\n\nEventually, we'll implement compaction, which will mitigate heap growth. But\nthat doesn't solve all the problems. To address these issues, we adhere to the\nfollowing constraints:\n\n1. We don't defer collection. When the first memory threshold is reached, we\nperform synchronous GC and then create the concurrent marker thread.\n2. We respect memory thresholds. We revert to a synchronous collection cycle\nwhen the concurrent marker cannot keep up with the mutator. Basically, this\nmeans finishing the GC cycle whenever the threshold is hit.\n3. The concurrent marker restarts its work immediately after finishing a GC\ncycle instead of waiting for memory thresholds to be breached. The concurrent\nmarker thread then sleeps for random intervals waiting for the mutators to\nproduce more objects to scan."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Avoid leaking orphaned VM instances.\n\nWhen starting a Thread, there is a point where resources are created but an\nexception could be raised that would result in the resources not getting\nreclaimed. At the moment, this is the VM instance. This will be refactored\nsoon, but the same caution will always apply to creating Thread instances."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Add a spec for adding two invalid strings together that results in a valid one"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Set valid_encoding_ to nil if a String has invalid encoding and an invalid String is appended to it\n\nFixes #3631"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Begin support for LLVM 3.6+."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Restructured layout of JIT files."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed mark stack debugging."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Completely disable the JIT."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added backtrace metrics."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed CallFrame checks for constant arguments."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Temporarily disable JIT on Travis."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Ensure the CallFrame in NULL before Mirror::Thread#finish."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Ensure we don't use negative skip values for backtraces."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Some cleanup creating Location objects."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Better integrate logger facility.\n\nBasically, almost everything that is in util/ should not be. These major\ncomponents need to be well-integrated with the rest of Rubinius. As in the\nprevious case of Immix and the present case of the logger here, that means\nthings like taking STATE, VM, etc as parameters and interfacing with things\nlike process locks and process phases around fork/exec, etc."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Guard against NULL being added to finalization list."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Logging while forking considered extremely dangerous."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Revert \"Re-init logger lock after fork.\"\n\nThis reverts commit 17f6450b4e0377a87f01fa79b9142c8a261e485f."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Re-init logger lock after fork."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed argument arity for LLVM call."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Disable JIT inlining by default temporarily."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "More JIT fixes from removing passing CallFrame."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed shift negative value warnings on clang 3.7. Closes #3535.\n\nThis is a mess. See https://github.com/bonzini/qemu/commit/0f087e8e822a00fdf4ec39b443ebf51a631e0adc"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Initialize NativeMethodEnvironment* to NULL."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Cleaned up creating VM instances."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed setting Thread management state.\n\nBefore returning from Thread.new (or any similar methods), we ensure that\nall the state for tracking Thread instances and any related state are\ncompletely initialized. This prevents a case where the process calls fork()\nimmediately after creating a Thread and the Thread's state is only partially\ninitialized before the fork() call completes."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed updating PID for logger."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated JIT for removed CallFrame* passing."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Switched fork/exec lock to SpinLock.\n\nSince a SpinLock is a simple integer on which CAS operations are performed,\nthere is no way to go afoul of 'ownership' during fork(). This appears to\nsolve a spordic issue where the child was not able to reset the fork_exec_lock_\ninherited from the parent process."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Reworked starting and operating on Threads."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed setting String::num_bytes_ to Fixnum."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed invoking the GC."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into stw"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed unneeded GC inhibitors."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed remaining CallFrame passing."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Fix an rb_time_timespec_new spec\n\nFor time zones with daylight saving time in effect, `Time.now` has a\nDST offset, while the extension function returns a time object in\nstandard time offset."
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Disable the JIT while running specs."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Quarantine day light savings time dependent spec."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed BlockEnvironment::of_sender."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed error attempting to wake a dead Thread."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed Symbol.all_symbols spec."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Temporarily default concurrent marker to off."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed finding first backtrace frame."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed generating backtraces."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Run GC after native methods (C-ext functions)."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed obsolete -X19 cruft from MSpec."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Use signed values for backtrace frames to skip."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "More fixes for Fiber."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Some fixes for Fiber."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into stw"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed assumption of Symbol table size.\n\nThere is no guarantee that executing some Ruby code will only create one\nnew Symbol instance. Since we lazily load code with the CodeDB, we could\nbe executing code at any time in any thread, for instance."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Avoid operating on (really) dead Threads.\n\nThe issue here is that Thread instances may be retained by other objects (eg\nEnumerator) and when the Thread instance itself is finalized, the order of\nfinalization is non-deterministic (ie there is no Ruby API to impose an\nordering on finalization), so a Thread instance may have had its memory for\nVM* cleaned up, and the other object referring to it may call methods on it\nwhen that other object is being finalized.\n\nSo, we avoid operating on *really* dead Threads, where a Thread's lifetime\nlooks something like this:\n\n1. Memory for the Thread allocated, but the Thread is not running as a\nseparate thread of execution.\n2. The Thread is running.\n3. The Thread's separate thread of execution has exited, so it is put in a\n\"zombie\" state, but all the memory for the Thread (except it's execution\nstack) is retained.\n4. The Thread itself is still allocated (ie because the Thread is in a\nfinalization list so its managed memory hasn't been recycled, or it's just\nbeen finalized) but the Thread isn't reachable by any live objects.\n5. The Thread has been finalized, so it's VM* memory is deallocated, but the\nmanaged memory for the Thread itself hasn't been reclaimed.\n6. The Thread's managed memory is no longer allocated and any reference to the\nThread would be an \"access after free\" memory violation (but not necessarily\none that would trigger a memory fault in the CPU because the region of memory\nit inhabited may still be allocated to the running program)."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Used larger stack size for finalizer thread."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Reworked tracking CallFrames.\n\nCallFrame _invariants_ must be preserved under the following states:\n\n1. calling / returning from _managed methods_;\n2. calling / returning from _native methods_;\n3. calling / returning from _native functions_;\n4. calling / returning from _JIT functions_;\n5. running a Fiber;\n6. unwinding the stack due to C++ exception handling;\n7. unwinding the stack by longjmp();\n8. before any managed code runs in a Thread; and\n9. after all managed code has run in a Thread.\n\nCallFrame _invariants_ are:\n\nAssume a vector of references to CallFrame instances exists\n(VM::call_frames_), where n=VM::call_frames_index_ is the total number of\nCallFrame instances and VM::call_frame_ refers to VM::call_frames_[n-1], and\nVM::call_frame->previous refers to VM::call_frames_[n-2], etc.\n\n1. VM::call_frames_[0] is the oldest managed frame in a Thread;\n2. For all i=0...VM::call_frames_index_, VM::call_frams_[i] has 0+ live\n   references to objects.\n3. VM::call_frames_[VM::call_frames_index_-1] is the newest managed frame;\n4. For all i=0...VM::call_frames_index_, VM::call_frames_[i+1] _follows_\n   VM::call_frames_[i], also stated as lifetime(VM::call_frames_[i]) _bounds_\n   lifetime(VM::call_frames_[i+1]) where lifetime(cf) returns a tuple (start,\n   end) of times during which cf has live references, and for cf[i] \"start_i\"\n   < \"start_i+1\" and \"end_i\" > \"end_i+1\"."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Use keyword args in IO::{read,write}_nonblock instead of hash handling"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Joe Eli McIlvain",
                        "email": "joe.eli.mac@gmail.com"
                    },
                    "commiter": {
                        "name": "Joe Eli McIlvain",
                        "email": "joe.eli.mac@gmail.com"
                    },
                    "message": "Merge pull request #3625 from Red54/patch-1\n\nFix new_spec.rb typo."
                },
                "author_login": "jemc",
                "committer_login": "jemc"
            },
            {
                "commit": {
                    "author": {
                        "name": "Red54",
                        "email": "yeking@red54.com"
                    },
                    "commiter": {
                        "name": "Red54",
                        "email": "yeking@red54.com"
                    },
                    "message": "Fix new_spec.rb typo."
                },
                "author_login": "Red54",
                "committer_login": "Red54"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed allocating GCData for concurrent marker.\n\nThis GCData structure needs to be removed and STATE properly passed through\nthe garbage collection methods."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed synchronizing threads."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Re-enable concurrent mark thread."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Set ENV in Docker images to UTF-8.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Hack in new Immix allocator policy.\n\nThis hack introduces a heap growth policy into the allocator. Ultimately,\nthe policy needs to define the allocator, or the allocator should be given\nan external policy to interact with. The existing Trigger thing may have\nbeen intended to do this but doesn't provide interaction (it's one-way).\n\nThe goal right now is to stabilize heap growth so that concurrent marking\ncan be re-introduced, then the young gen can be re-added."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into stw"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated gems_list.txt."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Revert \"Quarantine Thread#value spec using Thread#kill.\"\n\nThis reverts commit b903c1f1989233f95d1d329eef53cd30a266ad91.\n\nSee cfd672a5373e2e16a97b43f01692fe28c8a9043a"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Revert \"Updated gems_list.txt.\"\n\nThis reverts commit 1eb57bdc157e965bf212588886ea73775823c81c.\n\nFor some reason, these updates appear to be causing the failure of the\nspec quarantined in b903c1f1989233f95d1d329eef53cd30a266ad91."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Quarantine Thread#value spec using Thread#kill.\n\nIt's unclear what caused this to start failing, more debugging needed.\n\nThe vm()->thread_state()->raise_reason() == cThreadKill except when\nvm_thread_state primitive is called from the Thread#__run__ ensure clause."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated gems_list.txt."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Add a spec for autoloading a constant that was already loaded by another thread\n\nAn explanation of the issue can be found in 01a7c2f9."
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Check if feature is already loaded when require returns false in Autoload#resolve\n\nThis solves the issue mentioned in 01a7c2f9."
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Trigger Docker Hub builds from Linux sub-builds.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed formatting for releases.yml."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Open core library CodeDB read-only.\n\nThe CodeDB open method needs to be extended to accept an argument for the mode\nto open the CodeDB, allowing for read, write, or read+write before being able\nto use a CodeDB for the runtime compiler cache. For now, we only need to read\nthe core library."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed variable so Heroku binary gets uploaded."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Switch back to deploy from OSX build."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Switched to deploying from linux build."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into stw"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Log the CodeDB loaded on boot."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added deploy triggers for releases.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added deploy for Heroku.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added fallback if codedb.core.path doesn't exist."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Show exception loading CodeDB instead of abort."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed displaying -Xhelp."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Only trigger rubinius-build on linux.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Use a loop instead of recursion when processing a regex group\n\nIt can blow up the stack if too many characters are inside the group."
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Trigger rubinius-build on deploy.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed setting release date when building from tarball."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Use a clearer condition in utilities::logger::append_newline\n\nCredits to @brixen, follow-up on 0b4b712.\n\n[ci skip]"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Fix a condition in utilities::logger::append_newline\n\nThe previous condition assumes enough space to append an extra newline\nfollowed by \\0. If we already have a full message buffer, appending would\noverflow and the \\0 would corrupt some adjacent variable. If this\nadjacent variable happens to be the guard from the calling function,\nit would be corrupted and fails to unlock its lock, causing other\nlogging components to stuck forever waiting for that lock."
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated Dockerfile for Ubuntu to include compiler.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Decouple linking for C-exts from clang/gcc."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Use dist version for docker deploy.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Only build binaries for a specific Ubuntu version.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Revert \"Consider an autoload resolved if #resolve didn't return nil in Autoload#call\"\n\nCodeLoader.require returning false doesn't necessarily mean the feature\ngot loaded.\n\nThis reverts commit 01a7c2f9b91a6edf5637c6dbf0d79f4e59b560b3.\n\n[ci skip]"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Consider an autoload resolved if #resolve didn't return nil in Autoload#call\n\nThis fixes cases of autoload \"errors\" mentioned by @robin850 in\nhttps://github.com/rubinius/rubinius/issues/2934#issuecomment-76391260\nand https://gist.github.com/robin850/3eeaed2538f50a9887c2\n\nThis is an explanation of the issue:\nWe already have A::B been autoloaded by the main thread. When c.rb (see\nany of the previous links) is being autoloaded in another thread, class\nA::B is being opened using Rubinius.open_class_under (through\nRubinius.open_class).\nSince module A has an Autoload entry for B in its constant_table,\nopen_class_under tries to call #call on this Autload object, which returns nil\nbecause #resolve returns false (CodeLoader.require returns false\nif a feature is already been loaded).\nWith nil returned, open_class_under decided to create a new Class object\nfor B, which means the autoload entry it already had for :C is lost,\nresulting in constant A::B::C not being found."
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into stw"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Joe Eli McIlvain",
                        "email": "joe.eli.mac@gmail.com"
                    },
                    "commiter": {
                        "name": "Joe Eli McIlvain",
                        "email": "joe.eli.mac@gmail.com"
                    },
                    "message": "Fix configure script to enable C++11 regardless of LLVM version.\n\nThe CodeDB work added C++11 usage into the VM source itself,\nbut C++11 support was only enabled for LLVM >= 3.5,\nfailing for users with lower supported LLVM versions.\n\nResolves #3622."
                },
                "author_login": "jemc",
                "committer_login": "jemc"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Omit [ skip ci ] from GitHub release notes.\n\nOdd formatting necessary to avoid getting stripped for release notes.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into stw"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Update rubinius-melbourne to 3.3\n\nCloses #3600"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Updated rubysl-pathname to 2.3"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Expanded the issue template"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into stw"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Reworked triggering mature region collection."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Ignore all yielding threads on halt."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "commiter": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "message": "Merge pull request #3621 from rubinius/add-issue-template\n\nAdd issue template"
                },
                "author_login": "chuckremes",
                "committer_login": "chuckremes"
            },
            {
                "commit": {
                    "author": {
                        "name": "jc00ke",
                        "email": "jesse@jc00ke.com"
                    },
                    "commiter": {
                        "name": "jc00ke",
                        "email": "jesse@jc00ke.com"
                    },
                    "message": "Make repro section more prominent & detailed"
                },
                "author_login": "jc00ke",
                "committer_login": "jc00ke"
            },
            {
                "commit": {
                    "author": {
                        "name": "jc00ke",
                        "email": "jesse@jc00ke.com"
                    },
                    "commiter": {
                        "name": "jc00ke",
                        "email": "jesse@jc00ke.com"
                    },
                    "message": "Add issue template\n\nSeen at https://github.com/dear-github/dear-github/issues/125\n[skip ci]"
                },
                "author_login": "jc00ke",
                "committer_login": "jc00ke"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Consider valid encoding if a String passes ascii_only_p()\n\nRelated to #3531"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into stw"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Add specs for Mirror::String#byte_index when passed index greater than string's length"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Optimize String::byte_index for ASCII-only strings when passed an index\n\nRelated to #3531"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed debugging."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed legacy reference."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added malloc, calloc, realloc metrics for C-API."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into stw"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Use ascii_only_p() instead of ascii_only_\n\nascii_only_ does not usually have a correct value, so we ascii_only_p()\nto make sure it does.\n\nRelated to #3531"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Updated list of Gems to install\n\nIn particular this includes rubysl-stringio 2.1.0"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into stw"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "ObjectSpace._id2ref raises for invalid ID values\n\nFixes #3504"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Fixed NameError#receiver for BasicObject instances"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Add a failing JIT spec for zsuper keyword arguments support"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Add keyword arguments support for zsuper\n\nFixes #3363"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Added String#-@ and String#+@\n\nFixes #3608"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Added NameError#receiver\n\nMRI seems to handle this within C and doesn't define any way of setting\nthe receiver from Ruby. As a result of this we'll just use a keyword\nargument.\n\nFixes #3607"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Add specs for rb_time_timespec_new"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Add rb_time_timespec_new to the C API"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into stw"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Add specs for rb_define_class_id_under"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Add rb_define_class_id_under to the C API\n\nCloses #3613"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Add a spec for rb_define_class_under when given a mismatched superclass"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed Heap remnant of young semi-space."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added collection logging option."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "More ObjectMemory, Memory rename cleanup."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed triggering full collection."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benjamin Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Benjamin Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "message": "Merge pull request #3617 from rubinius/clean_up_define_method\n\nClean up define method"
                },
                "author_login": "tak1n",
                "committer_login": "tak1n"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed namespaced references to Address."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Moved vm/ to machine/.\n\nThe abbreviation 'vm', usually meaning 'virtual machine', is badly overloaded\nand even inconsistent now in the code base (eg with class VM, etc). So, renaming\nthe vm/ directory to machine/ and consistently using Rubinius [Mm]achine for\nboth the high-level concept of the thing that encompasses the managed runtime\n(ie bytecode execution, memory management, system interface, JIT infrastructure and\nnative code generation) and the code that implements it."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Renamed ObjectMemory to Memory.\n\nThe Memory class will consolidate all aspects of managed memory in the\nRubinius machine, not just 'Object' memory. There is a counterpart of\nMemory, as SystemMemory, to manage requesting memory from the underlying\nsystem (most likely the OS)."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "message": "Implement Proc#for_define_method when @ruby_method is nil like in the old impl to ensure the same behavior"
                },
                "author_login": "tak1n",
                "committer_login": "tak1n"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed FSEvent finalizer call."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Moved memory+gc classes to 'namespace memory'."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Moved Immix region code into vm/memory."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Moved vm/gc to vm/memory."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Disable concurrent marker temporarily."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "message": "BlockEnvironment::AsMethod#scope should return the scope of block_env"
                },
                "author_login": "tak1n",
                "committer_login": "tak1n"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "message": "don't use single letter variable names [ci skip]"
                },
                "author_login": "tak1n",
                "committer_login": "tak1n"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "message": "add example which specs behavior of Proc#for_define_method when procs @ruby_method is set"
                },
                "author_login": "tak1n",
                "committer_login": "tak1n"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "message": "Proc#for_define_method get the scope through the newly created BlockEnvironment::AsMethod"
                },
                "author_login": "tak1n",
                "committer_login": "tak1n"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "message": "use Method,UnboundMethod #for_define_method in Proc#for_define_method"
                },
                "author_login": "tak1n",
                "committer_login": "tak1n"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "message": "implement Executable#scope, retrieving proper code part is responsibility of Method,UnboundMethod #for_define_method, add 3rd arg callabale_proc to Method,UnboundMethod #for_define_method"
                },
                "author_login": "tak1n",
                "committer_login": "tak1n"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "message": "cleanup Method#for_define_method and UnboundMethod#for_define_method, delegate responsibility further to executables"
                },
                "author_login": "tak1n",
                "committer_login": "tak1n"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "message": "raise TypeError if meth does not respond to :for_define_method"
                },
                "author_login": "tak1n",
                "committer_login": "tak1n"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "message": "implement UnboundMethod#for_define_method"
                },
                "author_login": "tak1n",
                "committer_login": "tak1n"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "message": "implement Method#for_define_method, add second argument klass to for_define_method which is needed by Method and UnboundMethod"
                },
                "author_login": "tak1n",
                "committer_login": "tak1n"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "message": "implement Proc#for_define_method"
                },
                "author_login": "tak1n",
                "committer_login": "tak1n"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "message": "Fix Module#define_method\n\nWhen defining a method through a proc which gets created out of a method\nwhich is defined in a C-ext, `meth.ruby_method.executable` is a instance of\nRubinius::NativeCode and not Rubinius::CompiledCode which does not\nrespond to #scope.\n\nThis is used for example in pg gem:\nhttps://github.com/ged/ruby-pg/blob/bb4693e811f9348f202835e701e6509d15685b0a/lib/pg/connection.rb#L187"
                },
                "author_login": "tak1n",
                "committer_login": "tak1n"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed CodeDB to use new allocation API."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into stw"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Added local variable methods to Binding\n\nThis adds the following methods:\n\n* Binding#local_variable_set\n* Binding#local_variable_get\n* Binding#local_variable_defined?\n\nFixes #2992\nCloses #3372"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Added ARGF.read_nonblock\n\nFixes #3594"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Added specs for ARGF.read_nonblock"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "ARGF.read should use ASCII 8BIT, not US_ASCII"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Moved ARGF.read encoding specs to shared spec file"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed installing."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Install libedit-dev on Travis."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed configure command."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Update packages on Trusty first."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Try moving to Trusty and clang, llvm 3.5 on Travis."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed paths and cleaned up var warnings."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed rubinius-compiler gem version."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed JIT loading CompiledCode from method_id."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed setting @exception on frozen Thread."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed aliased core methods having same hash."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Moved CodeDB to core/."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed Module#define_method."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed filtering core library frames from backtrace."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Some kernel -> core remnants cleanup."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed changing method visibility."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed order of overwriting ffi_function_missing."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Renamed kernel/ to core/."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fix a couple failing specs."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated Melbourne to 3.1."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed unneeded require for build_config."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Reorganized kernel to improve loading order.\n\nThese are the desired phases for booting Rubinius:\n\n1. boot the VM itself with the ability to load and execute bytecode;\n2. create the bootstrap methods and functions to be able to define\n   class/module and methods;\n3. load the kernel code, only defining class/module and methods;\n4. run all 'init' / setup code for the kernel, defining initial runtime data\n   structures and constant values;\n5. create the Loader instance and parse command line options;\n6. run user code."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed building flattened kernel for CodeDB."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge branch 'kernel' into codedb"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed kernel.rake to simplify merging codedb."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into codedb"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Cleaned up load_order.txt and building kernel."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Load kernel from a single file."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "More kernel build cleanup."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into kernel"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fix building kernel."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into stw"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Clarified what is covered by what license\n\nFixes #3590"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Added explicit license file for zlib"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Added winpthreads license"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Added udis86 license file"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Added RubyGems license files"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Wrapped/cleaned up README.md"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated paths for rubinius-code gems."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated rubinius-code gems."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Merge pull request #3593 from asppsa/master\n\nFix Enumerable#sort_by when #map does not return an array"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Alastair Pharo",
                        "email": "asppsa@gmail.com"
                    },
                    "commiter": {
                        "name": "Alastair Pharo",
                        "email": "asppsa@gmail.com"
                    },
                    "message": "Fix for Enumerable#sort_by when #map does not return an array"
                },
                "author_login": "asppsa",
                "committer_login": "asppsa"
            },
            {
                "commit": {
                    "author": {
                        "name": "Alastair Pharo",
                        "email": "asppsa@gmail.com"
                    },
                    "commiter": {
                        "name": "Alastair Pharo",
                        "email": "asppsa@gmail.com"
                    },
                    "message": "Spec Enumerable#sort_by when #map does not return an array\n\nThe basic example for this is a lazy enumerable.  In this case, #map\nreturns another lazy enumerable, and this breaks #sort_by"
                },
                "author_login": "asppsa",
                "committer_login": "asppsa"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Use the new path of rubinius-ast gem in kernel.rake"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Use rubinius-ast-2.4."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "message": "Merge pull request #3591 from jsyeo/jsyeo-count-yield-multi\n\nFix count when enumerable yields multiple values"
                },
                "author_login": "jsyeo",
                "committer_login": "jsyeo"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "message": "[ci skip] Use describe, rephrase spec description"
                },
                "author_login": "jsyeo",
                "committer_login": "jsyeo"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "message": "Fix count when enumerable yields multiple values"
                },
                "author_login": "jsyeo",
                "committer_login": "jsyeo"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "message": "Merge pull request #3584 from jsyeo/jsyeo-slice-failing-specs\n\nFix issue in slice_(after|before) when iterator method yields more than one value"
                },
                "author_login": "jsyeo",
                "committer_login": "jsyeo"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "message": "Remove spec as slice_when does not have issues with iterators yielding > 2 values"
                },
                "author_login": "jsyeo",
                "committer_login": "jsyeo"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "message": "Fix issue in slice_(after|before) when iterator method yields more than one value"
                },
                "author_login": "jsyeo",
                "committer_login": "jsyeo"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "message": "Reword spec description"
                },
                "author_login": "jsyeo",
                "committer_login": "jsyeo"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into kernel"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Finished merging kernel/ into a single directory.\n\nKernel does not yet boot. Some dependencies still need to be resolved."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Add a spec covering Array#product returning self when given a block"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Fix Array#product behavior when given a block\n\nFixes #3587"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Start merging kernel/ into a single directory."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Re-enable write barrier for concurrent marker."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Add another failing specs for zsuper with keyword arguments"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "message": "bump RUBY_VERSION to 2.2.2, rack 2.0.0.alpha requires ruby >= 2.2.2"
                },
                "author_login": "tak1n",
                "committer_login": "tak1n"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into codedb"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Properly check for write errors in metrics FileEmitter."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Introduce SleepPhase.\n\nThread semantics are ad hoc in Ruby so we make a best effort to mimic them\nwhere possible. The behavior of process exit when one or more threads are\nsuspended in a sleep state is not well-defined. We assume that no sleeping\nthread should block the process from exiting. We introduce a specific \"sleep\nphase\" as one state a thread may be in. We then ignore sleeping threads when\nexecuting a process exit.\n\nUnfortunately, this is more complex than it appears on its face. While\nexecuting a process exit, we are essentially racing any sleeping threads that\nmay wake up and attempt to access resources that are being destroyed (something\nlike one of those scenes from Inception with the buildings crumbling around the\nparticipants). We cannot waking thread proceed once process exit has started,\nso we permanently lock a mutex that every waking thread must acquire before\nprogressing.\n\nUltimately, these lock resources will need to be in the program's data segment,\nso they are static memory, not dynamically allocated, as they are now."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed BakerGC."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into stw"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Run write barrier in missing cases."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Joe Eli McIlvain",
                        "email": "joe.eli.mac@gmail.com"
                    },
                    "commiter": {
                        "name": "Joe Eli McIlvain",
                        "email": "joe.eli.mac@gmail.com"
                    },
                    "message": "Fix Kernel#rand when given a Float exclusive range."
                },
                "author_login": "jemc",
                "committer_login": "jemc"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Added failing specs for zsuper with rest kwargs"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Updated list of rubysl Gems to install"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Updated installed Rake version"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "message": "Add failing specs for slice_* when iterator method is changed"
                },
                "author_login": "jsyeo",
                "committer_login": "jsyeo"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Add specs for IO#{read,write}_nonblock accepting exception option"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Allow IO#{read,write}_nonblock to take an exception: false option"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Add specs for ARGF.readpartial"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Implement ARGF.readpartial"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Add a spec covering clearing output buffer of ARGF.read"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Clear buffer passed to ARGF.read before appending to it"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Update tags/branches before untagging"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Fetch existing tags before adding a new one"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benjamin Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Benjamin Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "message": "Merge pull request #3583 from rubinius/implement_string_new_encoding\n\nImplement String.new encoding optional argument"
                },
                "author_login": "tak1n",
                "committer_login": "tak1n"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "message": "Implement String.new encoding optional argument"
                },
                "author_login": "tak1n",
                "committer_login": "tak1n"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benjamin Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Benjamin Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "message": "Merge pull request #3581 from rubinius/add_name_error_receiver_specs\n\nadd failing NameError#receiver spec"
                },
                "author_login": "tak1n",
                "committer_login": "tak1n"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benjamin Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Benjamin Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "message": "Merge pull request #3582 from rubinius/add_string_new_encoding_specs\n\nadd failing spec for String.new with optional encoding argument"
                },
                "author_login": "tak1n",
                "committer_login": "tak1n"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "message": "add failing spec for String.new with optional encoding argument"
                },
                "author_login": "tak1n",
                "committer_login": "tak1n"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "message": "add failing NameError#receiver spec"
                },
                "author_login": "tak1n",
                "committer_login": "tak1n"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "message": "Merge pull request #3580 from jsyeo/jsyeo-slice_before\n\nRemove initial state from slice_before and chunk"
                },
                "author_login": "jsyeo",
                "committer_login": "jsyeo"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "message": "Use a better error message"
                },
                "author_login": "jsyeo",
                "committer_login": "jsyeo"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "message": "Remove initial state from chunk"
                },
                "author_login": "jsyeo",
                "committer_login": "jsyeo"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "message": "Remove initial state from slice_before"
                },
                "author_login": "jsyeo",
                "committer_login": "jsyeo"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Merge pull request #3579 from jsyeo/jsyeo-chunk_while\n\nAdd chunk_while"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "message": "block.call->yield"
                },
                "author_login": "jsyeo",
                "committer_login": "jsyeo"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into stw"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Reworked triggering GC."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "message": "Change error message"
                },
                "author_login": "jsyeo",
                "committer_login": "jsyeo"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "message": "Remove chunk_while tags"
                },
                "author_login": "jsyeo",
                "committer_login": "jsyeo"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "message": "Implement chunk_while"
                },
                "author_login": "jsyeo",
                "committer_login": "jsyeo"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "message": "Add specs for chunk_while"
                },
                "author_login": "jsyeo",
                "committer_login": "jsyeo"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added metrics on system bytes allocated & freed."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Let pending young collection interrupt concurrent marker."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Set thread phase to waiting before locking."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Reworked ThreadNexus."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Only build Ubuntu 12.04 Docker image for now.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed processing mark stack with possible exit condition."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Start STW timer before trying to lock."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into stw"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Add specs for Hash comparison operators"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Implement Hash#{>, >=, <, <=}"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into stw"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed race when iterating thread list."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed some 64bit assumptions in specs. Closes #3560."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Add specs for Hash#fetch_values"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Implement Hash#fetch_values"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Fix a typo in Enumerator::Lazy specs"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Merge pull request #3577 from ahmadsherif/feature/implement-enumerator-lazy-grep-v\n\nImplement Enumerator::Lazy#grep_v"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Merge pull request #3578 from ahmadsherif/feature/implement-file-mkfifo\n\nImplement File.mkfifo"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Moved Dockerfiles to rubinius/docker repository.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated location of Dockerfiles.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Add specs for File.mkfifo"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Implement File.mkfifo"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Updated Dockerfile for 14.04 to 3.9.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Updated Dockerfile for 15.10 to 3.9.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed C++ exception being raised in rb_dbl2big."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Nikola Nenkov",
                        "email": "ndnenkov@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Make #dig raise ArgumentError when invoked with no arguments"
                },
                "author_login": "ndnenkov",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Nikola Nenkov",
                        "email": "ndnenkov@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Add specs for #dig with no arguments"
                },
                "author_login": "ndnenkov",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Add specs for Enumerator::Lazy#grep_v"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Implement Enumerator::Lazy#grep_v"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Eliminate some duplication from Enumerator::Lazy#grep"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Add specs for Enumerable#grep_v"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Implement Enumerable#grep_v"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Eliminate some duplication from Enumerable#grep"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Update Comparable#== specs to reflect it does not rescues exceptions anymore"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Make Comparable#== no longer rescues exceptions"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Try to not use RVM on Travis."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Add a spec for Kernel#loop returning StopIteration#result"
                },
                "author_login": "ahmadsherif",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Make Kernel#loop returns StopIteration#result when stopped by the exception"
                },
                "author_login": "ahmadsherif",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Cleaned up styling of Array#==\n\nVariables such as \"md\" and \"od\" are super confusing."
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Updated Dockerfile for 14.04 to 3.8.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Updated Dockerfile for 15.10 to 3.8.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Use Type.object_equal in Binding.self_context\n\nNormally I'd oppose these kind of changes in favour of fixing Gems doing\nthis. However, since this is literally the _only_ thing preventing\nGitLab from booting at the moment this change ensures I don't get\nblocked for days while waiting for a response from the Teaspoon\nmaintainers.\n\nThis fixes #3570"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Bumped rubysl-socket to 2.1.1"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Removed Socketable/io_accept primitive\n\nThis is no longer in use by rubysl-socket and serves no further purpose."
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Add specs for Hash#to_proc"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Implement Hash#to_proc"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Add a spec for setting thread's group in rb_thread_create"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Set thread's group in rb_thread_create\n\nFixes #3545"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Updated Dockerfile for 14.04 to 3.7.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Updated Dockerfile for 15.10 to 3.7.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Merge pull request #3565 from ahmadsherif/fix/rb-rescue-when-yields-to-a-block-with-break\n\nMake rb_rescue returns the break value when passed function yields to a block with a break"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Merge pull request #3566 from ahmadsherif/feature/implement-bsearch-index\n\nImplement Array#bsearch_index"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Add specs for Array#bsearch_index"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Implement Array#bsearch_index"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Add a spec covering rb_rescue returning the break value when the passed function yields to a block with a break"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Make rb_rescue returns the break value when passed function yields to a block with a break\n\nFixes #3546"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Merge pull request #3564 from Locke23rus/feature-numeric-positive-and-negative\n\nImplemented Numeric#positive? and Numeric#negative?"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Kirill Nikitin",
                        "email": "locke23rus@gmail.com"
                    },
                    "commiter": {
                        "name": "Kirill Nikitin",
                        "email": "locke23rus@gmail.com"
                    },
                    "message": "Added 2.3 specs for #positive? and #negative?\n\nAdded specs for #positive? and #negative? for classes Bignum, Fixnum, Float,\nNumeric and Rational classes"
                },
                "author_login": "Locke23rus",
                "committer_login": "Locke23rus"
            },
            {
                "commit": {
                    "author": {
                        "name": "Kirill Nikitin",
                        "email": "locke23rus@gmail.com"
                    },
                    "commiter": {
                        "name": "Kirill Nikitin",
                        "email": "locke23rus@gmail.com"
                    },
                    "message": "Implement Numeric#positive? & Numeric#negative?"
                },
                "author_login": "Locke23rus",
                "committer_login": "Locke23rus"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Updated Dockerfile for 14.04 to 3.6.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Updated Dockerfile for 15.10 to 3.6.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "commiter": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "message": "implement 2.3 behavior to no longer raise IOError on multiple #close"
                },
                "author_login": "chuckremes",
                "committer_login": "chuckremes"
            },
            {
                "commit": {
                    "author": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "commiter": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "message": "spec 2.3 behavior where multiple calls to #close no longer raise IOError"
                },
                "author_login": "chuckremes",
                "committer_login": "chuckremes"
            },
            {
                "commit": {
                    "author": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "commiter": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "message": "multiple calls of close, close_read, and close_write should no longer raise IOError"
                },
                "author_login": "chuckremes",
                "committer_login": "chuckremes"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Updated Dockerfile for 14.04 to 3.5.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Updated Dockerfile for 15.10 to 3.5.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Merge pull request #3562 from ahmadsherif/feature/dig-method\n\nImplement #dig method"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Add specs for #dig implmenetation for Hash, Array and Struct classes"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Implement #dig for Hash, Array and Struct classes"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Andre Richter",
                        "email": "andre.o.richter@gmail.com"
                    },
                    "commiter": {
                        "name": "Andre Richter",
                        "email": "andre.o.richter@gmail.com"
                    },
                    "message": "puts: Make it more compatible to MRI\n\n- puts calls #to_ary on non-String objects, without checking its existance beforehand.\n  This behavior is copied for cases where the receiver has a #method_missing in place that catches this call\n\n- If puts calls #to_s, and #to_s does not return a string (e.g. some bogus override of #to_s), it outputs generic object infos (Class name and address)"
                },
                "author_login": "andre-richter",
                "committer_login": "andre-richter"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Updated Dockerfile for 14.04 to 3.4.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Updated Dockerfile for 15.10 to 3.4.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Updated Dockerfile for 14.04 to 3.4.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Updated Dockerfile for 15.10 to 3.4.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "commiter": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "message": "Merge branch 'master' of https://github.com/rubinius/rubinius"
                },
                "author_login": "chuckremes",
                "committer_login": "chuckremes"
            },
            {
                "commit": {
                    "author": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "commiter": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "message": "add 2.2 behavior to #each handling of limit 0"
                },
                "author_login": "chuckremes",
                "committer_login": "chuckremes"
            },
            {
                "commit": {
                    "author": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "commiter": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "message": "spec 2.2 behavior where limit 0 raises ArgumentError"
                },
                "author_login": "chuckremes",
                "committer_login": "chuckremes"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge remote-tracking branch 'origin' into codedb"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Merge pull request #3558 from andre-richter/fix_puts\n\nputs: Check if argument responds to :to_ary, instead of checking its type being Array"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Andre Richter",
                        "email": "andre.o.richter@gmail.com"
                    },
                    "commiter": {
                        "name": "Andre Richter",
                        "email": "andre.o.richter@gmail.com"
                    },
                    "message": "puts: Check if argument responds to :to_ary, instead of checking its type being Array"
                },
                "author_login": "andre-richter",
                "committer_login": "andre-richter"
            },
            {
                "commit": {
                    "author": {
                        "name": "Kenichi Kamiya",
                        "email": "kachick1@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Fix yield parameter of Enumerable#first"
                },
                "author_login": "kachick",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Kenichi Kamiya",
                        "email": "kachick1@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Add spec for Enumerable#first with multiple yield parameters"
                },
                "author_login": "kachick",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added CoC to READMEs.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Generalize test for nil."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Updated Dockerfile for 14.04 to 3.3.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Updated Dockerfile for 15.10 to 3.3.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Bumped rubysl-socket version to 2.1.0"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Use nil_p() instead of '== cNil'."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Merge pull request #3552 from andre-richter/master\n\nIf on OS X, check for homebrew-supplied openssl libraries"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Andre Richter",
                        "email": "andre.o.richter@gmail.com"
                    },
                    "commiter": {
                        "name": "Andre Richter",
                        "email": "andre.o.richter@gmail.com"
                    },
                    "message": "Set platform instance variables earlier and use them instead of RUBY_PLATFORM where feasible."
                },
                "author_login": "andre-richter",
                "committer_login": "andre-richter"
            },
            {
                "commit": {
                    "author": {
                        "name": "Andre Richter",
                        "email": "andre.o.richter@gmail.com"
                    },
                    "commiter": {
                        "name": "Andre Richter",
                        "email": "andre.o.richter@gmail.com"
                    },
                    "message": "If on OS X, check for homebrew-supplied openssl libraries"
                },
                "author_login": "andre-richter",
                "committer_login": "andre-richter"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Bump Psych to 2.0.17"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Updated Dockerfile for 14.04 to 3.2.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Updated Dockerfile for 15.10 to 3.2.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added --deprecated command line option."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Switched to rbx-2.2.mspec."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "A few improvements for untag.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added untag to scripts/tag.sh.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "commiter": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "message": "update ruby compat version from 2.1.0 to 2.2.0 [ci skip]"
                },
                "author_login": "chuckremes",
                "committer_login": "chuckremes"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added deploy for Dockerfile updates.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Version 3.1."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Version 3.1."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed deploying website and homebrew releases.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "commiter": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "message": "Merge pull request #3518 from rubinius/2.2\n\nWIP: 2.2 compat"
                },
                "author_login": "chuckremes",
                "committer_login": "chuckremes"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Merge pull request #3548 from rubinius/relicense\n\nBreak up old/new license & clarify what we use"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Break up old/new license & clarify what we use"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Add BSD text to license.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Imported https://github.com/rubinius/rubinius-docker/pull/1.\n\nAdded whitespace to break up the steps and added gems/bin to PATH."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Revert \"Simplify, just one Dockerfile for now.\"\n\nThis reverts commit de7a8a1007d29700f4a1af8a0dac52de41f33f2c.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Simplify, just one Dockerfile for now.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Clarify copyright entity for license.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Try adding Dockerfiles for ubuntu 14.04, 15.10.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added MPL-2.0.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fix legacy Rake code for packaging."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Match all version tags for deployment."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Deprecate non-clang/clang++ compilers."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Satisfy gcc 4.8.4."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Defer to Immix marker at checkpoints."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed VM tests."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Merge branch 'master' into stw"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Use _NSGetEnviron on OSX. Fixes #3446."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated rubysl-openssl to 2.8."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Try using a default openssl on Travis."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Guard JIT specs for JIT being enabled."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Enable building with various OpenSSL versions on OSX."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Array#sample checks all indexes when spinning. Fixes #3506."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed updating website versions.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated rubysl-openssl to 2.7."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed creating GitHub release."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed updating website on deploy."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Disable Git colours when syncing mspec"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Add a spec covering calling #instance_eval with a proc from a method"
                },
                "author_login": "ahmadsherif",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Allow #instance_eval to evaluate procs originated from methods\n\nFixes #3539"
                },
                "author_login": "ahmadsherif",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "dafoxia",
                        "email": "dafoxia@users.noreply.github.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Compile fails on arm because of unknown opcode.\n\n\"stmeqia\" is an mistyped and unknown opcode.\r\nReplaced with \"stmiaeq\".\r\nCompiling on ARM now possible.\r\nMaybe an update do a newer version of libffi is also possible."
                },
                "author_login": "dafoxia",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Moved autorelease methods to FFI::Pointer\n\nThis allows code to alter the autorelease behaviour of regular\nRubinius::FFI::Pointer instances. As an example, rubysl-socket returns a\nbunch of ifaddr pointers which are freed using freeifaddrs(). By default\nthese pointers have auto-releasing enabled which results in Rubinius\nattempting to finalize/free already free'd pointers which in turn\nsegfaults Rubinius."
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Updated MSpec source to \u001b[33m4d5."
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed list of files to upload for deploy."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added commit log to release text."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Added ifa_broadaddr/ifa_dstaddr to ifaddrs struct"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Ignore missing file when updating gems_list.txt."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated openssl gem to 2.6."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added io/nonblock to bootstrap gems."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Use iterative algo to parse Regexp."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated openssl gem version."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added RARRAY_AREF."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added specs for RARRAY_AREF.\n\nThis macro does no bounds checking on MRI. Initially added it to support\nupdated code for openssl from MRI. Considered changing the use of it in\nopenssl C-ext but other extensions will surely use it as well FOR SPEED.\n\n¯\\_(ツ)_/¯"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brian@rubinius.com"
                    },
                    "message": "Merge pull request #3541 from rubinius/wait-readable-writable\n\nUpdate raising of WaitReadable/WaitWritable exceptions"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Added EINPROGRESS Wait classes\n\nThese will be used by rubysl-socket for connecting a socket in a\nnon-blocking manner."
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Use correct exceptions in IO#(read/write)_nonblock\n\nIO#read_nonblock should raise IO::EAGAINWaitReadable (or\nIO::EWOULDBLOCKWaitReadable) while\nIO#write_nonblock should raise IO::EAGAINWaitWritable (or\nIO::EWOULDBLOCKWaitWritable)."
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Added spec for IO#write_nonblock raising\n\nThis tests for IO#write_nonblock raising IO::EAGAINWaitWritable when an\noperation would block (instead of just raising Errno::EAGAIN)."
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Test IO#read_nonblock raising EAGAINWaitReadable\n\nIO#read_nonblock is supposed to raise IO::EAGAINWaitReadable instead of\na regular Errno::EAGAIN error."
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Update Homebrew recipe when deploying.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated gems_list.txt."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Rewrote gems:update_list in Bash."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Update website when deploying."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Create SHA1 digests of deploy files."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added GitHub release for deploy."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added Travis secure env var for GitHub.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Use LLVM prebuilt to deploy on Linux.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed digit regex for GNU egrep.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Only create sha512 digests."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed .travis.yml deploy command."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added tag.sh, fixed some other script issues.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed some deploy scripts."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated gems."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed function name."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Package Travis binary for every run."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "First steps to packaging with Bash."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated rubygems to 2.5.1.\n\nRubyGems 2.5.1 installed\n\n=== 2.5.1 / 2015-12-10\n\nBug fixes:\n\n* Ensure platform sorting only uses strings. Affected binary installs on Windows.\n  Issue #1369 reported by Ryan Atball (among others).\n  Pull request #1375 by Samuel E. Giddins.\n* Revert PR #1332. Unable to reproduce, and nil should be impossible.\n* Gem::Specification#to_fullpath now returns .rb extensions when such a file\n  exists.  Pull request #1114 by y-yagi.\n* RubyGems now handles Net::HTTPFatalError instead of crashing.  Pull\n  request #1314 by Samuel E. Giddins.\n* Updated bundled Molinillo to 0.4.0.  Pull request #1322, #1396 by Samuel E.\n  Giddins.\n* Improved performance of spec loading by reducing likelihood of loading he\n  complete specification.  Pull request #1373 by Aaron Patterson.\n* Improved caching of requirable files  Pull request #1377 by Aaron Patterson.\n* Fixed activation of gems with development dependencies.  Pull request #1388\n  by Samuel E. Giddins.\n* RubyGems now uses the same Molinillo vendoring strategy as Bundler.  Pull\n  request #1397 by Samuel E. Giddins.\n* Fixed documentation of Gem::Requirement.parse.  Pull request #1398 by\n  Juanito Fatas.\n* RubyGems no longer warns when a prerelease gem has prerelease dependencies.\n  Pull request #1399 by Samuel E. Giddins.\n* Fixed Gem::Version documentation example.  Pull request #1401 by Guilherme\n  Goettems Schneider.\n* Updated documentation links to https://.  Pull request #1404 by Suriyaa\n  Kudo.\n* Fixed double word typo.  Pull request #1411 by Jake Worth.\n\n=== 2.5.0 / 2015-11-03\n\nMajor enhancements:\n\n* Added the Gem::Licenses class which provides a set of standard license\n  identifiers as set by spdx.org. This is now used by the\n  Gem::Specification#license attribute to try to standardize (though not\n  enforce) licenses set by gem authors.\n\n  Pull request #1249 by Kyle Mitchell.\n\nMinor enhancements:\n\n* Use Molinillo as the resolver library.  This is the same resolver as used by\n  Bundler.  Pull request #1189 by Samuel E. Giddins.\n* Add `--skip=gem_name` to Pristine command.  Pull request #1018 by windwiny.\n* The parsed gem dependencies file is now available via Gem.gemdeps following\n  Gem.use_gemdeps.  Pull request #1224 by Hsing-Hui Hsu, issue #1213 by\n  Michal Papis.\n* Moved description attribute to recommended for Gem::Specification.\n  Pull request #1046 by Michal Papis\n* Moved `Gem::Indexer#abbreviate` and `#sanitize` to `Gem::Specification`.\n  Pull request #1145 by Arthur Nogueira Neves\n* Cache Gem::Version segments for `#bump` and `#release`.\n  Pull request #1131 by Matijs van Zuijlen\n* Fix edge case in `levenshtein_distance` for comparing longer strings.\n  Pull request #1173 by Richard Schneeman\n* Remove duplication from List#to_a, improving from O(n^2) to O(n) time.\n  Pull request #1200 by Marc Siegel.\n* Gem::Specification.add_specs is deprecated and will be removed from version\n  3.0 with no replacement.  To add specs, install the gem, then reset the\n  cache.\n* Gem::Specification.add_spec is deprecated and will be removed from version\n  3.0 with no replacement.  To add specs, install the gem, then reset the\n  cache.\n* Gem::Specification.remove_spec is deprecated and will be removed from version\n  3.0 with no replacement.  To remove specs, uninstall the gem, then reset the\n  cache by calling Gem::Specification.reset.\n* Call Array#compact before calling Array#uniq for minor speed improvement in\n  the Gem::Specification#files method.\n  Pull request #1253 by Marat Amerov.\n* Use stringio instead of custom String classes.\n  Pull request #1250 by Petr Skocik.\n* Use URI#host instead of URI#hostname to retain backwards compatibility with\n  Ruby 1.9.2 and earlier in util library.\n  Pull request #1288 by Joe Rafaniello.\n* Documentation update for gem sources.\n  Pull request #1324 by Ilya Vassilevsky.\n* Documentation update for required_ruby_version.\n  Pull request #1321 by Matt Patterson.\n* Documentation update for gem update.\n  Pull request #1306 by Tim Blair.\n* Emit a warning on SRV resolve failure.\n  Pull request #1023 by Ivan Kuchin.\n* Allow duplicate dependencies between runtime and development.\n  Pull request #1032 by Murray Steele.\n* The gem env command now shows the user installation directory.\n  Pull request #1343 by Luis Sagastume.\n* The Gem::Platform#=== method now treats a nil cpu arch the same as 'universal'.\n  Pull request #1356 by Daniel Berger.\n* Improved memory performance in Gem::Specification.traverse.  Pull request\n  #1188 by Aaron Patterson.\n* RubyGems packages now support symlinks.  Pull request #1209 by Samuel E.\n  Giddins.\n* RubyGems no longer outputs mkmf.log if it does not exist.  Pull request\n  #1222 by Andrew Hooker.\n* Added Bitrig platform.  Pull request #1233 by John C. Vernaleo.\n* Improved error message for first-time RubyGems developers.  Pull request\n  #1241 by André Arko\n* Improved performance of Gem::Specification#load with cached specs.  Pull\n  request #1297 by Samuel E. Giddins.\n* Gem::RemoteFetcher allows users to set HTTP headers.  Pull request #1363 by\n  Agis Anastasopoulos.\n\nBug fixes:\n\n* Fixed Rake homepage url in example for Gem::Specification#homepage.\n  Pull request #1171 by Arthur Nogueira Neves\n* Don't crash if partially uninstalled gem can't be found.\n  Pull request #1283 by Cezary Baginski.\n* Test warning cleanup.\n  Pull request #1298 by Samuel E. Giddins.\n* Documentation fix for GemDependencyAPI.\n  Pull request #1308 by Michael Papis.\n* Fetcher now ignores ENOLCK errors in single threaded environments. This\n  handles an issue with gem installation on NFS as best we can. Addresses\n  issue #1176 by Ryan Moore.\n  Pull request #1327 by Daniel Berger.\n* Fix some path quoting issues in the test suite.\n  Pull request #1328 by Gavin Miller.\n* Fix NoMethodError in running ruby processes when gems are uninstalled.\n  Pull request #1332 by Peter Drake.\n* Fixed a potential NoMethodError for gem cleanup.\n  Pull request #1333 by Peter Drake.\n* Fixed gem help bug.\n  Issue #1352 reported by bogem, pull request #1357 by Luis Sagastume.\n* Remove temporary directories after tests finish.  Pull request #1181 by\n  Nobuyoshi Nokada.\n* Update links in RubyGems documentation.  Pull request #1185 by Darío Hereñú.\n* Prerelease gem executables can now be run.  Pull request #1186 by Samuel E.\n  Giddins.\n* Updated RubyGems travis-ci ruby versions.  Pull request #1187 by Samuel E.\n  Giddins.\n* Fixed release date of RubyGems 2.4.6.  Pull request #1190 by Frieder\n  Bluemle.\n* Fixed bugs in gem activation.  Pull request #1202 by Miklós Fazekas.\n* Fixed documentation for `gem list`.  Pull request #1228 by Godfrey Chan.\n* Fixed #1200 history entry.  Pull request #1234 by Marc Siegel.\n* Fixed synchronization issue when resetting the Gem::Specification gem list.\n  Pull request #1239 by Samuel E. Giddins.\n* Fixed running tests in parallel.  Pull request #1257 by SHIBATA Hiroshi.\n* Fixed running tests with `--program-prefix` or `--program-suffix` for ruby.\n  Pull request #1258 by Shane Gibbs.\n* Fixed Gem::Specification#to_yaml.  Pull request #1262 by Hiroaki Izu.\n* Fixed taintedness of Gem::Specification#raw_require_paths.  Pull request\n  #1268 by Sam Ruby.\n* Fixed sorting of platforms when installing gems.  Pull request #1271 by\n  nonsequitur.\n* Use `--no-document` over deprecated documentation options when installing\n  dependencies on travis.  Pull request #1272 by takiy33.\n* Improved support for IPv6 addresses in URIs.  Pull request #1275 by Joe\n  Rafaniello.\n* Spec validation no longer crashes if a file does not exist.  Pull request\n  #1278 by Samuel E. Giddins.\n* Gems can now be installed within `rescue`.  Pull request #1282 by Samuel E.\n  Giddins.\n* Increased Diffie-Hellman key size for tests for modern OpenSSL.  Pull\n  request #1290 by Vít Ondruch.\n* RubyGems handles invalid config files better.  Pull request #1367 by Agis\n  Anastasopoulos.\n\n------------------------------------------------------------------------------\n\nRubyGems installed the following executables:\n  /source/rubinius/rubinius/bin/gem\n\nRubyGems system software updated"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fix building openssl on El Capitan.\n\nThis change introduces some duplication that will be removed when rewriting\nin Bash. Yes, it could be done now; No, it isn't important enough to do it."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Moved release, package tar to Bash."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Try even simpler Travis matrix."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fix location of LLVM include files."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Pull LLVM setup into a script."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Try using an LLVM prebuilt to avoid sudo."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Upload multiple aliases per release because RVM/Travis.\n\nRVM appears to correctly map eg rbx-2 to rubinius-2.6.tar.bz2 unless it's running\non Travis. See https://github.com/travis-ci/travis-ci/issues/5294"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Set correct mime type when uploading to S3.\n\n[ci skip]"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Use OS X instance to create tarball.\n\nThe tar utility appears to be choking on the Linux Travis instance:\n\n  https://s3.amazonaws.com/archive.travis-ci.org/jobs/96797405/log.txt"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed path for binary deploys."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Use bash for deploy scripts."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Kenichi Kamiya",
                        "email": "kachick1@gmail.com"
                    },
                    "commiter": {
                        "name": "Kenichi Kamiya",
                        "email": "kachick1@gmail.com"
                    },
                    "message": "Fix a typo s/refering/referring/"
                },
                "author_login": "kachick",
                "committer_login": "kachick"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Added definition for Socket::SOMAXCONN"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed variable name."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added binary uploads."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Upload the tarball and digests."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added sha512 for release tarballs."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Simplified release task."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added check for building the release tarball."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Try a simpler exclude matrix."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Drop --no-patch option to git log for old git versions."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Try to limit Travis CI matrix."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Try a complex Travis CI matrix.\n\nThis passes 'travis lint' but I don't know what that actually means."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Added hostent structure\n\nThis is required by gethostbyname() which in turn will be used by\nrubysl-socket."
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added initial S3 upload for release tarball deploy."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Ignore patch when getting release date from last commit.\n\nIf the patch has non-US-ASCII characters, the Regexp matching the date blows up.\nRather than mucking with ridiculous Regexp encodings, we ignore the unneeded patch."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed Dir.pwd spec with unicode characters."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Updated RubyGems to 2.5.0."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added secure keys for Travis CI."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Pulled check outside of loop."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "message": "Wrap lines to < 80 chars"
                },
                "author_login": "jsyeo",
                "committer_login": "jsyeo"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "message": "Remove :each"
                },
                "author_login": "jsyeo",
                "committer_login": "jsyeo"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "message": "Add tags for unicode_normalize"
                },
                "author_login": "jsyeo",
                "committer_login": "jsyeo"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "message": "Add a note about where I took the unicode examples"
                },
                "author_login": "jsyeo",
                "committer_login": "jsyeo"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "message": "Add specs for unicode_normalized?"
                },
                "author_login": "jsyeo",
                "committer_login": "jsyeo"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "message": "Add specs for exceptions"
                },
                "author_login": "jsyeo",
                "committer_login": "jsyeo"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "message": "Add spec for unicode_normalize!"
                },
                "author_login": "jsyeo",
                "committer_login": "jsyeo"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "message": "Add specs for unicode_normalize"
                },
                "author_login": "jsyeo",
                "committer_login": "jsyeo"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Add a spec for the latest change in Module#prepend_features"
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Reset globally cached klass methods in Module#prepend_features\n\nConsider this example:\n\n    class Parent\n      def bar\n      end\n    end\n\n    class Child < Parent\n      def bar\n        super\n      end\n\n      def foo\n      end\n    end\n\n    Child.new.foo\n    Child.new.bar\n    # foo and bar are cached in the global cache\n\n    prepended_module = Module.new do\n      def foo\n      end\n    end\n    Child.prepend(prepended_module)\n    # foo is cleared from the global cache, but bar is not\n    # Child hierarchy is now Child < IncludedModule(prepended_module) < IncludedModule(Child) < Parent\n\n    Child.new.bar\n    # When bar is looked up here, being still cached globally, Child#bar is the\n    # result of the lookup (normally, it should be IncludedModule(Child)#bar).\n    # Now when Child#bar is looking for its super, it goes to the first included\n    # module, then the second included module, which has the same method table\n    # as Child, returning Child#bar, causing non-ending recursive calls."
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Added iovec and msghdr structures\n\nThese will be required by the upcoming release of rubysl-socket."
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Include zlib linker flag if not building with the vendored one\n\nApparently building with LLVM enabled includes this flag, probably\r\nbecause of using `--system-libs`, so building without LLVM fails because\r\nit can't link against zlib."
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "commiter": {
                        "name": "Ahmad Sherif",
                        "email": "me@ahmadsherif.com"
                    },
                    "message": "Bump Travis Ruby version to 2.2.0\n\nOS X builds started to fail after the release of RubyGems 2.5.0, so this\nshould fix it."
                },
                "author_login": "ahmadsherif",
                "committer_login": "ahmadsherif"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Updated list of Socket constants to generate\n\nThe new list is based on the constants available as of MRI 2.2.3."
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Andre Richter",
                        "email": "andre.o.richter@gmail.com"
                    },
                    "commiter": {
                        "name": "Andre Richter",
                        "email": "andre.o.richter@gmail.com"
                    },
                    "message": "File#utime: Don't check for usec resolution on Darwin"
                },
                "author_login": "andre-richter",
                "committer_login": "andre-richter"
            },
            {
                "commit": {
                    "author": {
                        "name": "Andre Richter",
                        "email": "andre.o.richter@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Implement microsecond resolution for File#utime"
                },
                "author_login": "andre-richter",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Andre Richter",
                        "email": "andre.o.richter@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Spec: Check microsecond resolution for File#utime"
                },
                "author_login": "andre-richter",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Andre Richter",
                        "email": "andre.o.richter@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Add nanosecond support for Stat::[amc]time"
                },
                "author_login": "andre-richter",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Andre Richter",
                        "email": "andre.o.richter@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Check if struct stat has nanosecond resolution.\n\nCheck for st_atim, st_mtim, st_ctim, etc. in struct stat (sys/stat.h)"
                },
                "author_login": "andre-richter",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "message": "Merge branch '2.2' into fix-process-spawn\n\n* 2.2:\n  allow nil,true,false to be modified when frozen"
                },
                "author_login": "tak1n",
                "committer_login": "tak1n"
            },
            {
                "commit": {
                    "author": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "commiter": {
                        "name": "Chuck Remes",
                        "email": "git@chuckremes.com"
                    },
                    "message": "allow nil,true,false to be modified when frozen"
                },
                "author_login": "chuckremes",
                "committer_login": "chuckremes"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "message": "change => to is"
                },
                "author_login": "tak1n",
                "committer_login": "tak1n"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "message": "remove obsolete assignment"
                },
                "author_login": "tak1n",
                "committer_login": "tak1n"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "message": "add spec for Process.spawn redirecting STDERR to child STDOUT"
                },
                "author_login": "tak1n",
                "committer_login": "tak1n"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "message": "Remove converting to negative fd\n\nConvert a fd to -(fd + 1) if its a Fixnum seems wrong.\nNegative fds's are mostly invalid."
                },
                "author_login": "tak1n",
                "committer_login": "tak1n"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "message": "Merge branch 'master' into 2.2\n\n* master:\n  Fixes to assist building Rubinius under Alpine Linux (with musl).\n  Changed \"of the issue\" to \"if the issue\"\n  Contributing notes on version managers/releases\n  Expand $PID in Metrics filename.\n  Clean up log output of serial_debug/ic_debug\n  Specify `superclass` in respect to `prepend`\n  Fix correction to documentation for OnStack class.\n  Fixed typ in the OnStack class\n  Log class names for invalid ivars_ references\n  Add a C-API \"rb_hash_clear\"\n  Fix Range#bsearch for matching end value in find-minimum mode\n  Fix String#split with 0 limit. Fixes #3474\n  Add a String#split spec with 0 limit"
                },
                "author_login": "tak1n",
                "committer_login": "tak1n"
            },
            {
                "commit": {
                    "author": {
                        "name": "Nathan Sullivan",
                        "email": "nathan@nightsys.net"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Fixes to assist building Rubinius under Alpine Linux (with musl).\n\nNot 100% building yet, but these cover some outstanding issues"
                },
                "author_login": "CpuID",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Changed \"of the issue\" to \"if the issue\""
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Contributing notes on version managers/releases"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Immix sets collect flag."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Threads are pinned (mature). Run write barrier."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed VM tests for collect flag in allocator."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Re-introduce checkpoint on block execution."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added counters for checkpoints and stops."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Add timer to new stop-the-world mechanism."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Improve triggering GC."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Expand $PID in Metrics filename."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Expand $PID in Metrics filename."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Set thread to unmanaged when making syscall."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Reworked when GC is invoked."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Rework thread checkpointing and add deadlock logging."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Properly guard JIT specs."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Properly dup CompiledCode so call sites aren't shared."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed guarding references when calling methods from the VM."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Switch to unmanaged in FSEvent on Linux."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixes to build on Trusty."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added missing vm/thread_phase.hpp."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Added missing vm/alloc.hpp to git."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Delay tracking VM objects until Thread is running.\n\nIn the case of `Thread.new`, the OS thread will never run because a\nThreadError exception is raised when no block is passed. If we track the VM\nobject that would ultimately contain the reference to the OS thread, we either\nneed a way to remove the VM object when eg `Thread.new` raises an exception or\nwe will leak these objects. Instead of tracking and then untracking the VM\nobject, we create the object untracked and track it if the OS thread starts\nexecuting."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "BasicObject::BasicObject::BasicObject::BasicObject::BasicObject"
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Improved logging of Thread creation, fork, exec, spawn, backtick."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed some class creation."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed triggering GC."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed VM tests."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Reworked allocation.\n\nThese changes introduce a couple things:\n\n1. All allocation paths are GC-safe.\n\nWhat that means is that when requesting a new object be created, the request\nwill be fulfilled *unless* the system (or process limits prevent it) *without*\nGC running. In other words, there are two possible results of allocating an\nobject: 1) a new object, or 2) an exception because no more memory is\navailable to the process.\n\nIn either case, from the point the object is requested until that request\nreturns (or the return is bypassed by the exception unwind), the GC will not\nrun.\n\nThere is a trade-off here between running the GC at the instant that some\nthreshold is breached (eg the eden space is exhausted) and loosening some\nrequirements that must be maintained for a generational, moving garbage\ncollector (ie every object reference must be known to the GC at the time the\nGC runs). Since we run GC on method entry and loop back branches, there is no\nreasonable scenario in which deferring GC until allocation has completed will\nresult in unwanted object graph thresholds being breached pathologically (eg\nan execution path where allocation can grow unbounded).\n\n2. All objects are allocated from the various heaps *uninitialized* and a\nprotocol is established to call an initialization routine on the objects.\n\nThe initialization routine is `T::initialize(State* state, T* obj)`, where T is\nthe type of object being allocated. The method is a static method of the class\nof the object. This breaks with the protocol that Ruby uses where `new` is a\nmodule method and `initialize` is an instance method. The primary reason for\nchoosing a static (ie C++ class) is to avoid an instance method operating on\nan incompletely initialized object.\n\nOne purpose of this initialization protocol is to eliminate or reduce the\ndouble initialization that we were doing (ie setting all fields to nil and\nthen initializing them to other default values). The main initialization\nmethod shown above may be an empty body, in which case the compiler will elide\nit anyway and there's no overhead to the protocol. In that case, another\ninitialization method should be called on the newly created object. Since the\nallocation method is templated and if the initialization method is visible (ie\nin the header file), the compiler should be able to elide remaining double\ninitialization in most contexts."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Removed GCToken.\n\nThis was a well-intentioned idea but not practical or useful.\n\nThe idea was to have the compiler help check where in call paths a\ngarbage-collection cycle could run. Unfortnately, adding this in as an\nafter-thought resulted in all the places where GCTokens are created from thin\nair deep in some call path. It didn't change the fact that GC could happen\npretty much anywhere.\n\nIn a managed runtime, either GC can happen everywhere or it should only happen\nat a very small number of extremely well-defined points.  The middle ground of\n\"it can happen at all these places\" is an invitation for a low budget horror\nmovie, dismembered objects strewn throughout the code.\n\nAlong with the rework of the stop-the-world mechanism, the removal of GCToken\nand restricting the invocation of a GC cycle to a single well-defined method\ncall in a few well-defined locations, and finally, making all allocation paths\nGC-safe (ie GC will NOT run when allocating an object), Rubinius will have much\nbetter defined GC behavior.\n\nThe GC safe allocation path is important for cases like the string_dup\ninstruction, where a young GC cycle could run when allocating the dup and the\noriginal String (eg a literal String in a method) is in the young generation\nand moved. Since the original String is on the C stack and not in a GC root\nobject, the dup fails when copying the contents of the original String. It's\nbetter to make allocation GC-safe than to accept the performance cost of the GC\nroot in these sorts of cases. Also, that case is only one well-defined instance\nof the issue. There are more complicated ones."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed stop-the-world mechanism."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Use GC-safe allocation path in string_dup insn."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "commiter": {
                        "name": "Brian Shirai",
                        "email": "brixen@gmail.com"
                    },
                    "message": "Fixed setting large object metrics."
                },
                "author_login": "brixen",
                "committer_login": "brixen"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Clean up log output of serial_debug/ic_debug\n\nOutput is now sent to STDERR (to make it easier to redirect) and the\nactual debug messages have been trimmed a bit."
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Ben Lovell",
                        "email": "benjamin.lovell@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Specify `superclass` in respect to `prepend`\n\nThis was unspecified/recently merged to ruby/rubyspec. Rubinius does\nthe Right Thing :tm:"
                },
                "author_login": "benlovell",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Joe Eli McIlvain",
                        "email": "joe.eli.mac@gmail.com"
                    },
                    "commiter": {
                        "name": "Joe Eli McIlvain",
                        "email": "joe.eli.mac@gmail.com"
                    },
                    "message": "Fix correction to documentation for OnStack class."
                },
                "author_login": "jemc",
                "committer_login": "jemc"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Fixed typ in the OnStack class"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Log class names for invalid ivars_ references\n\nThis makes it a bit easier to see what kind of objects we're dealing\nwith when this occurs."
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Kenichi Kamiya",
                        "email": "kachick1@gmail.com"
                    },
                    "commiter": {
                        "name": "Kenichi Kamiya",
                        "email": "kachick1@gmail.com"
                    },
                    "message": "Add a C-API \"rb_hash_clear\""
                },
                "author_login": "kachick",
                "committer_login": "kachick"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jesse Cooke",
                        "email": "jesse@jc00ke.com"
                    },
                    "commiter": {
                        "name": "Jesse Cooke",
                        "email": "jesse@jc00ke.com"
                    },
                    "message": "Merge pull request #3476 from kachick/range-bsearch\n\nFix Range#bsearch for matching end value in find-minimum mode"
                },
                "author_login": "jc00ke",
                "committer_login": "jc00ke"
            },
            {
                "commit": {
                    "author": {
                        "name": "Kenichi Kamiya",
                        "email": "kachick1@gmail.com"
                    },
                    "commiter": {
                        "name": "Kenichi Kamiya",
                        "email": "kachick1@gmail.com"
                    },
                    "message": "Fix Range#bsearch for matching end value in find-minimum mode\n\nFixes #3458"
                },
                "author_login": "kachick",
                "committer_login": "kachick"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jesse Cooke",
                        "email": "jesse@jc00ke.com"
                    },
                    "commiter": {
                        "name": "Jesse Cooke",
                        "email": "jesse@jc00ke.com"
                    },
                    "message": "Merge pull request #3475 from kachick/string-split\n\nString#split should trim tail empty strings when the limit is zero"
                },
                "author_login": "jc00ke",
                "committer_login": "jc00ke"
            },
            {
                "commit": {
                    "author": {
                        "name": "Kenichi Kamiya",
                        "email": "kachick1@gmail.com"
                    },
                    "commiter": {
                        "name": "Kenichi Kamiya",
                        "email": "kachick1@gmail.com"
                    },
                    "message": "Fix String#split with 0 limit. Fixes #3474"
                },
                "author_login": "kachick",
                "committer_login": "kachick"
            },
            {
                "commit": {
                    "author": {
                        "name": "Kenichi Kamiya",
                        "email": "kachick1@gmail.com"
                    },
                    "commiter": {
                        "name": "Kenichi Kamiya",
                        "email": "kachick1@gmail.com"
                    },
                    "message": "Add a String#split spec with 0 limit"
                },
                "author_login": "kachick",
                "committer_login": "kachick"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Mark nil/true/false as frozen\n\nInteresting enough MRI still lets you define methods on these objects\neven when they're frozen. For example, this works just fine:\n\n    def nil.foo\n    end\n\n    nil.foo"
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Robin Dupret",
                        "email": "robin.dupret@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Add some other cases for #super_method specs\n\nBased on commit ruby/ruby@b4981594."
                },
                "author_login": "robin850",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Robin Dupret",
                        "email": "robin.dupret@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Implement {Method,UnboundMethod}#super_method\n\nThe implementation relies on Module#direct_superclass to run through the\nwhole ancestry chain as #superclass would not include the modules.\n\nThe method is about 2 times slower than the MRI implementation though.\nBenchmark: http://git.io/vmhpf."
                },
                "author_login": "robin850",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Nathan Currier",
                        "email": "nathan.currier@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Fix true/false frozen specs to operate on the proper values"
                },
                "author_login": "rideliner",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Rui Serra",
                        "email": "ruipserra@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Fix Stat::stat_birthtime.\n\nThis commit fixes a build error due to a signature mismatch of the Time::at\nmethod and the way it was being used in Stat::stat_birthtime."
                },
                "author_login": "ruipserra",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Kenichi Kamiya",
                        "email": "kachick1@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Standardize a block variable name in Enumerable"
                },
                "author_login": "kachick",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Kenichi Kamiya",
                        "email": "kachick1@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Adjust Enumerable#{min,max,min_by,max_by} with nil"
                },
                "author_login": "kachick",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Kenichi Kamiya",
                        "email": "kachick1@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Add Enumerable#{min,max,min_by,max_by} specs with nil"
                },
                "author_login": "kachick",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Kenichi Kamiya",
                        "email": "kachick1@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Implement Enumerable#max_by with optional arguments"
                },
                "author_login": "kachick",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Kenichi Kamiya",
                        "email": "kachick1@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Implement Enumerable#min_by with optional arguments"
                },
                "author_login": "kachick",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Kenichi Kamiya",
                        "email": "kachick1@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Implement Enumerable#max with optional arguments"
                },
                "author_login": "kachick",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Kenichi Kamiya",
                        "email": "kachick1@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Implement Enumerable#min with optional arguments"
                },
                "author_login": "kachick",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "added failing spec for lambda with optional parameter"
                },
                "author_login": "tak1n",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "remove comments"
                },
                "author_login": "tak1n",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Remove tags"
                },
                "author_login": "jsyeo",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Add Float#next_float and Float#prev_float"
                },
                "author_login": "jsyeo",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Rui Serra",
                        "email": "ruipserra@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Update regexp/character_classes_spec.rb since U+180E is no longer considered a whitespace character"
                },
                "author_login": "ruipserra",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Rui Serra",
                        "email": "ruipserra@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Update hash_spec.rb for duplicate key precedence"
                },
                "author_login": "ruipserra",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Rui Serra",
                        "email": "ruipserra@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Add block and lambda specs for MRI bug #9593"
                },
                "author_login": "ruipserra",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Rui Serra",
                        "email": "ruipserra@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Add spec for MRI bug #9593"
                },
                "author_login": "ruipserra",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Rui Serra",
                        "email": "ruipserra@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Update hash spec to include quoted symbol key syntax\n\nIn order not to break the whole hash_spec.rb, the new syntax is eval'd."
                },
                "author_login": "ruipserra",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Rui Serra",
                        "email": "ruipserra@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Add frozen nil/true/false specs"
                },
                "author_login": "ruipserra",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "check for struct member st_birthtimespec of struct stat instead of posix function birthtime"
                },
                "author_login": "tak1n",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "grouped together *time methods, added documentation"
                },
                "author_login": "tak1n",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "fix whitespace"
                },
                "author_login": "tak1n",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "remove accidental commited nil#frozen spec"
                },
                "author_login": "tak1n",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Only darwin supports birthtime\n\nAfter some research only darwin seems to support birthtime via\nst_birhttimespec in the stat struct.\n\nSee https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man2/stat.2.html\nand https://github.com/ruby/ruby/blob/fc7711ff17cde31aec0e2c1d29faca264b49da6b/file.c#L829 for reference."
                },
                "author_login": "tak1n",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": " implement Method#curry, add comments to failing example, remove working examples from tags file"
                },
                "author_login": "tak1n",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "adapt specs for specifics platform checks, delete failing tags"
                },
                "author_login": "tak1n",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Implement Stat#birthtime primitive"
                },
                "author_login": "tak1n",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Implement File#birthtime, File.birthtime and File::Stat#birthtime"
                },
                "author_login": "tak1n",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "check for birthtime() function"
                },
                "author_login": "tak1n",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Port over jruby's Enumerable#slice_when"
                },
                "author_login": "tak1n",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Implment Dir#fileno with a Rubinius primitive"
                },
                "author_login": "tak1n",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "add failing tags for Dir#fileno"
                },
                "author_login": "tak1n",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Port specs for UnboundMethod and Method\n\nPorted specs for UnboundMethod#super_method and Method#super_method.\nLike Float#next_float Float#prev_float they were introduced in rubyspec\nby @jemc but didn't made it into rubinius itself.\n\nSee rubyspec/rubyspec#298 for reference."
                },
                "author_login": "tak1n",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Port Float#next_float & Float#prev_float\n\nSomehow rubyspec/rubyspec#297 didn't made it into rubinius.\nPorted over @jemc pr into rubinius."
                },
                "author_login": "tak1n",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "remove failing tags for already implemented Enumerable#slice_after"
                },
                "author_login": "tak1n",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "remove ruby 2.2 spec guard"
                },
                "author_login": "tak1n",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "remove ruby_version_is guard for Kernel#itself specs"
                },
                "author_login": "tak1n",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Fix UncaughtThrowError\n\nUncaughtThrowError should subclass ArgumentError instead of\nStandardError.\n\nSee https://github.com/ruby/ruby/blob/v2_2_0/NEWS#L72."
                },
                "author_login": "tak1n",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "adapted throw specs to use UncaughtThrowError for non catched throw"
                },
                "author_login": "tak1n",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "created UncaughtThrowError which is raised by throw when not catched"
                },
                "author_login": "tak1n",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Benny Klotz",
                        "email": "benny.klotz92@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "changed throw_spec to fit 2.2 behaviour"
                },
                "author_login": "tak1n",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Re-added max_by/min_by tags.\n\nThese were lost by accident while resolving merge conflicts between the master\nbranch and the 2.2 branch."
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Joe Eli McIlvain",
                        "email": "joe.eli.mac@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Remove Binding#self and #self=\nIn Ruby 2.2+, we have #receiver, so it makes sense to use consistent names\nhere and and get rid of #self and #self= in favor of #receiver and #receiver="
                },
                "author_login": "jemc",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Rui Serra",
                        "email": "ruipserra@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Implement Binding#local_variables and Binding#receiver"
                },
                "author_login": "ruipserra",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Implement Enumerable#slice_after"
                },
                "author_login": "jsyeo",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Revert \"Implement Binding#local_variables and Binding#receiver\"\n\nThis reverts commit 25a735afaa86228fb152c99a0eef738759c4a93b.\n\nSee my notes at https://github.com/rubinius/rubinius/pull/3352."
                },
                "author_login": "YorickPeterse",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Rui Serra",
                        "email": "ruipserra@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Implement Binding#local_variables and Binding#receiver"
                },
                "author_login": "ruipserra",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Add File.birthtime and File#birthtime specs"
                },
                "author_login": "jsyeo",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Add a single space between after and :each"
                },
                "author_login": "jsyeo",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Add File::Stat#birthtime specs"
                },
                "author_login": "jsyeo",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Argument error -> ArgumentError in tags"
                },
                "author_login": "jsyeo",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Update Enumerable#slice_when tag after rewording of spec description."
                },
                "author_login": "jsyeo",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Add specs for Enumerable#slice_when"
                },
                "author_login": "jsyeo",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Argument error -> ArgumentError"
                },
                "author_login": "jsyeo",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Add specs for Enumerable#max_by optional arg"
                },
                "author_login": "jsyeo",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Rui Serra",
                        "email": "ruipserra@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Add specs for Binding#receiver"
                },
                "author_login": "ruipserra",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Add spec for Enumerable#max optional arg"
                },
                "author_login": "jsyeo",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Fix typo in Enumerable#max's spec. s/minimum/maximum"
                },
                "author_login": "jsyeo",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "We are already in the Enumerable#max block, there's no need to repeat it."
                },
                "author_login": "jsyeo",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Remove unused @a instance variable"
                },
                "author_login": "jsyeo",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Use context for readability"
                },
                "author_login": "jsyeo",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Add specs for Enumberable#min_by optional args"
                },
                "author_login": "jsyeo",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Fix typo in Enumerable#min_by's descriptions: Minimum, not maximum"
                },
                "author_login": "jsyeo",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Specify some edge cases for Enumerable#min optional arg"
                },
                "author_login": "jsyeo",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Remove unused instance variable @a"
                },
                "author_login": "jsyeo",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Add specs for Enumerable#min with optional arg. 🐒"
                },
                "author_login": "jsyeo",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Add tags for Enumerable#slice_after specs"
                },
                "author_login": "jsyeo",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Jason Yeo",
                        "email": "jasonyeo88@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Add spec for Enumerable#slice_after"
                },
                "author_login": "jsyeo",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Rui Serra",
                        "email": "ruipserra@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Add failing specs for Binding#local_variables"
                },
                "author_login": "ruipserra",
                "committer_login": "YorickPeterse"
            },
            {
                "commit": {
                    "author": {
                        "name": "Rui Serra",
                        "email": "ruipserra@gmail.com"
                    },
                    "commiter": {
                        "name": "Yorick Peterse",
                        "email": "yorickpeterse@gmail.com"
                    },
                    "message": "Add Method#curry specs"
                },
                "author_login": "ruipserra",
                "committer_login": "YorickPeterse"
            }
        ],
        "comments": [
            {
                "body": "Glad I'm not the only one. See this? http://lukewarmtapioca.com/2008/3/26/trailing-whitespace-in-textmate\n",
                "path": "",
                "user": {
                    "name": "sprsquish",
                    "email": ""
                }
            },
            {
                "body": "Hm. I think that line 329 should have been removed too, pointers returned by RSTRING_PTR should not be freed.\n",
                "path": "",
                "user": {
                    "name": "cezarsa",
                    "email": ""
                }
            },
            {
                "body": "What's up with Fixnum traversing? I don't know of any Ruby implementation which does that, and I don't see a use for it either.\n",
                "path": "kernel/common/objectspace.rb",
                "user": {
                    "name": "mernen",
                    "email": ""
                }
            },
            {
                "body": "Wait a moment, you are right. ObjectSpace.each_object(Fixnum) does return 0 in MRI... I'll change that.\n",
                "path": "",
                "user": {
                    "name": "rkh",
                    "email": ""
                }
            },
            {
                "body": "FWIW, I kept that line because it produces the same error message as MRI — which in turn probably does so because without it the default message would ask for a String, while symbols are preferred.\n",
                "path": "",
                "user": {
                    "name": "mernen",
                    "email": ""
                }
            },
            {
                "body": "wouldn't this be for 'alter codes syndrome[?].\n",
                "path": "",
                "user": {
                    "name": "blullock",
                    "email": ""
                }
            },
            {
                "body": "http://github.com/evanphx/rubinius/commit/38100a04fa71a8cc41147e866710a5186b1155c3#L3R243\n\nDoes not compile on FreeBSD.\nNeed to manualy add:\n# include <sys/types.h>\n# include <sys/time.h>\n# include <sys/resource.h>\n\nhttp://github.com/evanphx/rubinius/commit/38100a04fa71a8cc41147e866710a5186b1155c3#L3R243\n",
                "path": "",
                "user": {
                    "name": "Antti",
                    "email": ""
                }
            },
            {
                "body": "Cool, more stuff like that would be awesome.\n",
                "path": "",
                "user": {
                    "name": "rkh",
                    "email": ""
                }
            },
            {
                "body": "FYI, this didn't fix my \"mmap: Invalid argument\" issue when running rake.\n",
                "path": "",
                "user": {
                    "name": "mikong",
                    "email": ""
                }
            },
            {
                "body": "It seams that GCC 4.2.1 has this too.\n\n<pre>\nvm/instruments/profiler.hpp:26: error: redefinition of 'struct std::tr1::hash<long long unsigned int>'                                                       \n/usr/include/c++/4.2/tr1/functional_hash.h:72: error: previous definition of 'struct std::tr1::hash<long long unsigned int>'  \n</pre>\n\nGCC Version:\n\n<pre>\ngcc (GCC) 4.2.1 20070719  [FreeBSD]\n</pre>\n",
                "path": "",
                "user": {
                    "name": "Antti",
                    "email": ""
                }
            },
            {
                "body": "Congrats! This is a big milestone!\n",
                "path": "spec/full.mspec",
                "user": {
                    "name": "tmornini",
                    "email": ""
                }
            },
            {
                "body": "Wow, very cool! :)\n",
                "path": "",
                "user": {
                    "name": "arthurschreiber",
                    "email": ""
                }
            },
            {
                "body": "Looking forward for that golden release\n",
                "path": "",
                "user": {
                    "name": "speedmax",
                    "email": ""
                }
            },
            {
                "body": "This also fixes build on FreeBSD (CURRENT in my case).\n",
                "path": "",
                "user": {
                    "name": "Antti",
                    "email": ""
                }
            },
            {
                "body": "Nice!\n",
                "path": "",
                "user": {
                    "name": "ryanlowe",
                    "email": ""
                }
            },
            {
                "body": "Good job.\n",
                "path": "",
                "user": {
                    "name": "corbanbrook",
                    "email": ""
                }
            },
            {
                "body": "Wow, nice, I think this change shaved about 5 seconds (41 -vs- 46 seconds) on the CI run!\n",
                "path": "",
                "user": {
                    "name": "tmornini",
                    "email": ""
                }
            },
            {
                "body": "Where does \"undefined\" come from?\n",
                "path": "",
                "user": {
                    "name": "rkh",
                    "email": ""
                }
            },
            {
                "body": "`undefined` is a transform handled by the compiler. It is strictly internal and only accessible in kernel/ code.\n",
                "path": "",
                "user": {
                    "name": "rue",
                    "email": ""
                }
            },
            {
                "body": "Misspelled.\n",
                "path": "kernel/common/numeric.rb",
                "user": {
                    "name": "johanlunds",
                    "email": ""
                }
            },
            {
                "body": "Committed in the wrong file.\nspec/ruby is a mirror of Rubyspec.\nSince this is not a Ruby spec (nothing should forbid these hashes to be the same in another implementation), it should go in /spec/core (i.e rubinius' \"private\" spec)\n",
                "path": "",
                "user": {
                    "name": "marcandre",
                    "email": ""
                }
            },
            {
                "body": "I've a question on this.\n\nShall the CAPI match Ruby 1.8 or 1.9? as Rubinius is targetting 1.8.7, I think is should mimic 1.8 behavior and definition. Or I'm incorrect?\n",
                "path": "",
                "user": {
                    "name": "luislavena",
                    "email": ""
                }
            },
            {
                "body": "It's for 1.8, but we can have some 1.9 changes as well when they clean up the CAPI. In this case, we don't want to expose RRegexp, so it's easier to provide the macros that 1.9 provides.\n\nThis provides a solid middle ground for extensions to use.\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "Thank you Evan for the clarification.\n",
                "path": "",
                "user": {
                    "name": "luislavena",
                    "email": ""
                }
            },
            {
                "body": "Hey, I thought rbx was supposed to the the inlining for us! ;-)\n",
                "path": "",
                "user": {
                    "name": "marcandre",
                    "email": ""
                }
            },
            {
                "body": "I think that was a hoax. You know, like rails would scale and such.\nAlso, I really like the commit message.\n",
                "path": "",
                "user": {
                    "name": "rkh",
                    "email": ""
                }
            },
            {
                "body": "it's too complex to be inlined (exceptions: http://github.com/evanphx/rubinius/blob/master/vm/llvm/inline_policy.hpp#L37)\n",
                "path": "",
                "user": {
                    "name": "libc",
                    "email": ""
                }
            },
            {
                "body": "Not just exceptions, but blocks promoted to Procs is used in Thread#detect_outermost_recursion. Post 1.0, I'll be happy to revert this when the JIT can handle exception and block inlining properly.\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "This means that ar implementation will be gone?\n",
                "path": "",
                "user": {
                    "name": "luislavena",
                    "email": ""
                }
            },
            {
                "body": "It's been removed since we don't use it right now, yes.\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "Thank you. Hope this return or the Ruby Archive replacement :-)\n",
                "path": "",
                "user": {
                    "name": "luislavena",
                    "email": ""
                }
            },
            {
                "body": "Yes, thats where I'd like things to go.\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "What about !!value ?\n@critical = !!value\n",
                "path": "",
                "user": {
                    "name": "Antti",
                    "email": ""
                }
            },
            {
                "body": "Fixed, sorry by that\n",
                "path": "",
                "user": {
                    "name": "goyox86",
                    "email": ""
                }
            },
            {
                "body": "sweetness!\n",
                "path": "",
                "user": {
                    "name": "ezmobius",
                    "email": ""
                }
            },
            {
                "body": "i think i get it. Really ingenious realization & implementation. \n",
                "path": "",
                "user": {
                    "name": "tobi",
                    "email": ""
                }
            },
            {
                "body": "Could anyone explain the difference?\n",
                "path": "",
                "user": {
                    "name": "judofyr",
                    "email": ""
                }
            },
            {
                "body": "To quote Evan from IRC:\n\nevan:   if any of you want to really dig into the GIL tradeoffs, check out http://bugs.python.org/issue7946\nevan:   and specificly http://bugs.python.org/file17504/bfs.patch\n\nThis change is based on that.\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "No, the change is NOT based on the bfs.patch. It's based on the code in Python 3.2 currently. Check out the urls in vm/global_lock.cpp for details.\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "Evan, I think you committed the Makefile by mistake, as extconf is supposed to generate one, right?\n",
                "path": "",
                "user": {
                    "name": "luislavena",
                    "email": ""
                }
            },
            {
                "body": "Oops. yes damnit. fixing!\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "FWIW, I think the behaviour in rubinius is better. I wonder why MRI silently swallows this error? Are there other inconsistencies like this when modifying frozen objects?\n",
                "path": "",
                "user": {
                    "name": "dkubb",
                    "email": ""
                }
            },
            {
                "body": "MRI is ad hoc about raising these errors. Read through rubyspec and you will find references to ruby-core emails and redmine tickets to try to make it consistent. Apparently, even as of 1.9.2p0, it is still not consistent. At some point, I will review rubyspec and file new bug tickets for MRI. Or someone could do that for me. :)\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "\"Linxu\" and \"Mircosoft Windows\"? Snazzy!\n\n;)\n",
                "path": "",
                "user": {
                    "name": "chanks",
                    "email": ""
                }
            },
            {
                "body": "we're trying to avoid litigation here. :P\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "hrhr nice =D\n",
                "path": "",
                "user": {
                    "name": "bakkdoor",
                    "email": ""
                }
            },
            {
                "body": "```\nunless use_yield = replacement == undefined\n```\n",
                "path": "kernel/common/string.rb",
                "user": {
                    "name": "boof",
                    "email": ""
                }
            },
            {
                "body": "Is this a Rubinius-specific improvement to RubyGems? Can't we get something of this back into RubyGems proper?\n",
                "path": "",
                "user": {
                    "name": "headius",
                    "email": ""
                }
            },
            {
                "body": "Hmm, I tried this patch on JRuby and it didn't seem to have an appreciable difference for require 'rubygems'. Should it have, or was I testing it incorrectly?\n",
                "path": "",
                "user": {
                    "name": "headius",
                    "email": ""
                }
            },
            {
                "body": "Actually, scratch that...it was about 0.1 to 0.15 _slower_ with this patch.\n",
                "path": "",
                "user": {
                    "name": "headius",
                    "email": ""
                }
            },
            {
                "body": "Unsure why jruby would be slower, you'll have to profile the difference. The code removes using Dir[] and a lot of other stuff that would hit the filesystem, making it a bit faster.\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "Does it affect the current shell, after the build ?\n\nIf yes, maybe it'd be a good thing to restore it after the build not give back the same environment to the user.\n",
                "path": "",
                "user": {
                    "name": "jlecour",
                    "email": ""
                }
            },
            {
                "body": "No, it will not effect the shell after the build. It is only seen by shells launched underneath rake.\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "cool, that's great.\n",
                "path": "",
                "user": {
                    "name": "jlecour",
                    "email": ""
                }
            },
            {
                "body": "Looks like $0 isn't set at the point that the debugger is loaded.  \n\n```\n $ rbx -Xdebug tmp/fact.rb\n An exception occurred running the debugger\n  Coercion error: nil.to_str => String failed (TypeError)\n\n Backtrace:\n        Type.coerce_to at kernel/common/type.rb:22\n Kernel(Class)#StringValue at kernel/common/kernel.rb:112\n       File.expand_path at kernel/common/file.rb:360\n  Trepan#initialize at lib/trepanning.rb:70\n      Trepan.global at lib/trepanning.rb:131\n           Trepan.start at lib/trepanning.rb:136\n { } in main.__script__ at /home/rocky-rvm/.rbxrc:5\n Rubinius::Loader#debugger at kernel/loader.rb:432\n  Rubinius::Loader#main at kernel/loader.rb:583\n  Rubinius::Loader.main at kernel/loader.rb:625\n      Object#__script__ at kernel/loader.rb:636\n```\n\nI am not sure why $0 is not set, since the ordering of functions in main of kernel/loader.rb is:\n\n```\n      options   # Sets $0 ? \n      load_paths\n      debugger\n```\n\nAny suggestions how one might get at $0 inside debugger?\n",
                "path": "",
                "user": {
                    "name": "rocky",
                    "email": ""
                }
            },
            {
                "body": " A possible solution that I'm currently using in rocky/rbx-trepanning@de520fc0cd97e910e70e ( https://github.com/rocky/rbx-trepanning/blob/master/app/util.rb ):\n\n```\ndef get_dollar_0\n  if defined?($0)\n    $0\n  else\n    locs = Rubinius::VM.backtrace(0, true).select do |loc| \n      loc.method.name == :main\n    end\n    locs.each do |loc|\n      receiver = loc.instance_variable_get('@receiver')\n      if receiver\n        script = receiver.instance_variable_get('@script')\n        return script if script\n      end\n    end\n    return nil\n  end\nend\n```\n",
                "path": "",
                "user": {
                    "name": "rocky",
                    "email": ""
                }
            },
            {
                "body": "Hi,\n\nThese comments are a terrible way to track issues. Please file tickets.\n\nThe reason $0 is not set is that #debugger is called before #script in kernel/loader.rb. We could move things around so that the debugger was called just before 1. eval, 2. script, 3. irb, etc so you can step in right before the main action would occur.\n\nAnyway, please file a ticket and include some use case information.\n\nThanks,\nBrian\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "_two_ different kinds ...\n",
                "path": "doc/doc/en/ruby/global-variables.markdown",
                "user": {
                    "name": "johanlunds",
                    "email": ""
                }
            },
            {
                "body": "fixed\n",
                "path": "doc/doc/en/ruby/global-variables.markdown",
                "user": {
                    "name": "rkh",
                    "email": ""
                }
            },
            {
                "body": "There's actually three kinds: global globals ($:, $\"), scope globals ($_, $~), and thread globals ($SAFE, $!).\n",
                "path": "",
                "user": {
                    "name": "headius",
                    "email": ""
                }
            },
            {
                "body": "Ah yes. Very true. I'll fix that up.\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "Oh wow. Great work, thanks\n",
                "path": "",
                "user": {
                    "name": "yaroslav",
                    "email": ""
                }
            },
            {
                "body": "@yaroslav, can you help us, also? :)\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "@brixen sure, do you happen to have a public todo list on that kind of thing?..\n",
                "path": "",
                "user": {
                    "name": "yaroslav",
                    "email": ""
                }
            },
            {
                "body": "there's no todo list. just go through the docs and translate them. if you build rbx and run 'rbx docs' there are some how-tos.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "Actually it is very beginning. Yaroslav, ты всегда можешь пнуть меня по аське если найдешь косяки ;)\n",
                "path": "",
                "user": {
                    "name": "kronos",
                    "email": ""
                }
            },
            {
                "body": "Косяк в том что \"Список Терминов\" должен называться \"Список терминов\". В русском названия не capitalizятся :) Переведу сейчас мелочевку какую-нибудь и выложу\n",
                "path": "",
                "user": {
                    "name": "yaroslav",
                    "email": ""
                }
            },
            {
                "body": "Шли патчем, я аплайню сразу\n",
                "path": "",
                "user": {
                    "name": "kronos",
                    "email": ""
                }
            },
            {
                "body": "https://gist.github.com/32a6f06b4c7e119c314c ?\n",
                "path": "",
                "user": {
                    "name": "yaroslav",
                    "email": ""
                }
            },
            {
                "body": "wait, I don't speak Russian! :)\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "I had issues with sh -c and parameters passing to configure in the past.\n\nA workaround is invoke configure directly with sh:\n\n`sh %[sh #{expand(\"./configure\")} #{llvm_config_flags}]`\n\nAvoiding the double quotes completely.\n\nJust saying :-)\n",
                "path": "rakelib/vm.rake",
                "user": {
                    "name": "luislavena",
                    "email": ""
                }
            },
            {
                "body": "Hello Brian,\n\nInteresting notes you put here, and interesting changes that expose a problem of Ruby on premature return even when child process hasn't completed yet.\n\nCan you help me create a minimal example that can reproduce? That will help me fix the root of the issue in Ruby itself.\n\nThank you.\n",
                "path": "",
                "user": {
                    "name": "luislavena",
                    "email": ""
                }
            },
            {
                "body": "What was the issue?\n",
                "path": "rakelib/vm.rake",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "The repro is not exact. Initially, we had\n\n  system(\" to untar llvm source\")\n  FileUtils.mv src, dest\n\nThe FileUtils.mv would fail with an access violation on the source directory (the directory being created in by the untar). But I could mv the directory fine. Adding sleep 0, I've never had the problem occur. My assumption is that Windows is handling the processes fine when in cmd.exe but there may be some race between Windows and MRI. Whose fault that is, I don't know.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "Providing `CFLAFS` and `optflags` for Ruby, removing the need to escape quotes made the commands more simple to read.\n\nBut we still have some recipes at RubyInstaller doing this `sh -c` and still works :-D\n",
                "path": "rakelib/vm.rake",
                "user": {
                    "name": "luislavena",
                    "email": ""
                }
            },
            {
                "body": "This is wrong. Update: ignore, already fixed.\n",
                "path": "configure",
                "user": {
                    "name": "johanlunds",
                    "email": ""
                }
            },
            {
                "body": "After this commit, I get:\n\n```\nIn file included from vm/vm.hpp:25:0,\n                 from vm/agent.cpp:20:\nc:/mingw-w32/lib/gcc/../../i686-w64-mingw32/include/setjmp.h:148:95: error: macro \"setjmp\" passed 2 arguments, but takes just 1\n```\n",
                "path": "",
                "user": {
                    "name": "ghazel",
                    "email": ""
                }
            },
            {
                "body": "Hey Brian, sure about this code? I don't see any ìfdef` around LoadLibrary, and instead you added on windows_compat dlsym, dlopen and others.\n\nJust checking :-)\n",
                "path": "vm/builtin/ffi_pointer.cpp",
                "user": {
                    "name": "luislavena",
                    "email": ""
                }
            },
            {
                "body": "Nevermind, fixed by Evan at c44194c2c115b7c99032\n",
                "path": "vm/builtin/ffi_pointer.cpp",
                "user": {
                    "name": "luislavena",
                    "email": ""
                }
            },
            {
                "body": "This is the one used by the Agent? I can provide a more complete set of detail if you want...\n",
                "path": "",
                "user": {
                    "name": "luislavena",
                    "email": ""
                }
            },
            {
                "body": "That would be great. Feel free to submit a patch if you have time, but don't sweat it too much either. I'm just filling in stuff as I need to to get Rubinius to run. I know there is info available from Windows functions for all the fields in struct utsname.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "I don't understand the line. May be \"tainted |= o.tainted?\" ?\n",
                "path": "kernel/common/array.rb",
                "user": {
                    "name": "kronos",
                    "email": ""
                }
            },
            {
                "body": "Oops, good point.\n",
                "path": "kernel/common/array.rb",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "Shouldn't the method be named \"convert_to_strings\".\n\nIt doesn't appear to convert them to names, after all. :-)\n",
                "path": "",
                "user": {
                    "name": "tmornini",
                    "email": ""
                }
            },
            {
                "body": "No, it shouldn't. They are Strings on 1.8 and Symbols on 1.9. So, it's converting it (or not) to names, not strings. :)\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "Ah, I see. Thanks!\n",
                "path": "",
                "user": {
                    "name": "tmornini",
                    "email": ""
                }
            },
            {
                "body": "Hopefully it will be completely gone one day... :)\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "The 'default' benches in bench_access don't look right to me. Since you keep looking up the same :nonexistent key on the same hash, it creates it once and then it _does_ exist. It's probably better to use +i+ as the lookup key that doesn't exist and just dup the array each time before entering the while loop so you are starting with a fresh hash.\n\nIn bench_insert, I'm not sure what you are trying to accomplish with the second benchmark. I don't understand why you are calling Hash.new _inside_ the while loop. Perhaps you want to move that outside of the loop?\n",
                "path": "",
                "user": {
                    "name": "chuckremes",
                    "email": ""
                }
            },
            {
                "body": "You're correct specifically about the default proc hash. Default value hashes don't create an entry on lookup, though.\n\nActually, the default proc hash probably just shouldn't actually do anything to the hash itself, it should be an empty proc.\n\nThe goal of the second hash is to test the performance of inserting an item to an empty hash. Since the performance of a container may change with the number of items in it (not so true of Hash), testing the insertion of a large number of items is something to do separately (as is done below).\n",
                "path": "",
                "user": {
                    "name": "stormbrew",
                    "email": ""
                }
            },
            {
                "body": "Goal of the second test, rather. Hash on the brain.\n",
                "path": "",
                "user": {
                    "name": "stormbrew",
                    "email": ""
                }
            },
            {
                "body": "Am I reading this correctly that the \"sort up\" is going to repeatedly sort the same array?  Ie first pass it sorts, after that it just keeps sorting an ascending array?  I'm also not quite sure what the examples that dup the array, sort, and then reverse are testing?  Is just sorting the exact same length array as useful as testing a variety of array sizes?  Finally, while a benchmark to see how fast string sorting has value, for a benchmark it seems like just comparing integers might be a better test since it's a constant cost per comparison?  Testing the comparison speed of strings seems like a different benchmark?\n",
                "path": "",
                "user": {
                    "name": "dgtized",
                    "email": ""
                }
            },
            {
                "body": "Never mind on the non-destructive sort, wasn't reading correctly I guess.  My question still stands about comparing strings versus fixnums and multi length array examples.  I'm also still not quite certain what sort and reverse is for?  Is there thoughts of optimizing sort / reverse pairs at some point?\n",
                "path": "",
                "user": {
                    "name": "dgtized",
                    "email": ""
                }
            },
            {
                "body": "sort and reverse is the same as the sort down with block operation. So I thought it might be interesting to see the difference.\n\nI'm not sure about the string vs fixnum issue. \n\nAnyway, thanks for actually looking at my stuff.\n",
                "path": "",
                "user": {
                    "name": "burningTyger",
                    "email": ""
                }
            },
            {
                "body": "I would agree with dgtized on the string -vs- integer issue in that it would seem that integer comparison would be \"closer to the metal\" than string comparison and might, therefore, stress the sort algorithm more cleanly.\n\nCould be entire wrong though! :-)\n",
                "path": "",
                "user": {
                    "name": "tmornini",
                    "email": ""
                }
            },
            {
                "body": "Part of the problem with benchmarks like this is that all implementations may special-case certain types of elements like Fixnums or Symbols. If you're testing just the sort algorithm, you would go with the least-overhead elements. But that doesn't help you determine the cost of a sort of higher-overhead elements like Strings or user-defined types that have 100% custom logic. In both of those cases you still want the sort to optimize well.\n\nSo you need to test various types of elements.\n",
                "path": "",
                "user": {
                    "name": "headius",
                    "email": ""
                }
            },
            {
                "body": "Headius' point is right on the money. This bench could be modified to use the $large_array that is defined in the shared_array.rb file. It has complex entries including Fixnums, Symbols, Strings and Arrays. Using that array for the sort operation would certainly stress the #sort algo a bit more since any micro-optimization for a specific type (e.g. Fixnum) would fall through to the general case. The arrays in the shared_array.rb file were created for just this situation so it makes sense to use them.\n\nFollow the technique used by the other benchmarks (#dup it first to resolve scoping issues and avoid the overhead associated with global vars) and then use it as a replacement for array/array2 in this code.\n",
                "path": "",
                "user": {
                    "name": "chuckremes",
                    "email": ""
                }
            },
            {
                "body": "not that I tried that in the first place... but sorting symbols throws an exception so I left it, not thinking much about it.\n\nSince you mention it again I tried a second time and figured sorting symbols is a 1.9.2 feature so either we change large_array into something without symbols or I just add fixnums to my benches.\n",
                "path": "",
                "user": {
                    "name": "burningTyger",
                    "email": ""
                }
            },
            {
                "body": "Feel free to add a symbol-free \"large\" array to that shared file for the purposes of benchmarking the sort. You might want to swap in some BigNums for the Symbols.\n",
                "path": "",
                "user": {
                    "name": "chuckremes",
                    "email": ""
                }
            },
            {
                "body": "Incidentally, perhaps these benchmarks, like RubySpec, would be good to have in a separate project/repo. I've got a number I'd contribute, and it would be nice to have a common benchmarking suite that tests specific things, rather than ones like RBS that throw a random set of microbenchmarks at the wall.\n",
                "path": "",
                "user": {
                    "name": "headius",
                    "email": ""
                }
            },
            {
                "body": "My understanding is that Evan intends to spin this off to its own repo soon. It doesn't hurt to poke him about it though just in case it fell off of his to-do list.\n",
                "path": "",
                "user": {
                    "name": "chuckremes",
                    "email": ""
                }
            },
            {
                "body": "In the end, the answer is: benchmark everything, but do it with as much granularity as possible. I don't like the sort+reverse benches (and said so in the original pull request, iirc). They don't actually tell me anything. They might be useful to an implementation to optimize a particular form of sort, or to an application to decide which to use, but in benching implementation behaviour I don't think it's very useful. Reverse and sort should be benchmarked separately. And sort should be benchmarked with both simple and complex values. And comparison operators of both simple and complex values should be benchmarked, too.\n\nApplying meaning to the results of those benchmarks is up to the reader.\n",
                "path": "",
                "user": {
                    "name": "stormbrew",
                    "email": ""
                }
            },
            {
                "body": "This commit is wrong. You've reintroduced a yaml crash bug I fixed.\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "Oh sorry, I'm wrong. I see what you did. I had to go back and review my change. You clamp the size at 6 so we don't overrun the buffer.\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "thanks for updating that one!\n",
                "path": "",
                "user": {
                    "name": "burningTyger",
                    "email": ""
                }
            },
            {
                "body": "The description of the exception is not always accurate. Could you also add explicit {} around the body of the if statement? We prefer to always use explicit {}. \n",
                "path": "vm/builtin/bytearray.cpp",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "This is the wrong place to put this change. Since you only want this raised when create() is called as a primitive, you must add another method to act as the primitive which checks bytes and raises the argument error, then calls the internal create().\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "There is already a primitive that is called ByteArray\\* ByteArray::allocate(STATE, Fixnum\\* bytes) that can do this\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "The caller of ByteArray::create should make sure that bytes is never negative and handle the error there. The reason is that ByteArray::create is a very lowlevel API that must be available when the VM is booting.\n\nIf Regexp.allocate.options crashes because ByteArray::create is called with negative bytes, then #options needs to be fixed.\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "No segfaults from ruby code can be tolerated, so they're all bugs that need to fixed.\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "I've went through these and a bunch more and added fixes in commit 9c7947ccd66068f52ae5c4edc55080ad5005b6eb. If you have more, please fix them too if you can :). I've followed the style of explicitly raising the exception from the primitive directly, even if that means it's written out more often than theoretically necessary. \n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "what are the benchmark comparisons?\n",
                "path": "",
                "user": {
                    "name": "burningTyger",
                    "email": ""
                }
            },
            {
                "body": "What? You don't believe me?\n\nI have the results saved on another computer. I'll post them as a comment here later today.\n",
                "path": "",
                "user": {
                    "name": "chuckremes",
                    "email": ""
                }
            },
            {
                "body": "no, I do, I'd just love to see a comparison between old and new. Just post if you have it at hand.\n",
                "path": "",
                "user": {
                    "name": "burningTyger",
                    "email": ""
                }
            },
            {
                "body": "https://gist.github.com/898676\n\nShows a comparison of RBX vs JRuby both before and after this patch. After applying the patch, RBX is on par or faster than JRuby which is a nice change!\n",
                "path": "",
                "user": {
                    "name": "chuckremes",
                    "email": ""
                }
            },
            {
                "body": "nice, thanks a lot for sharing.\n",
                "path": "",
                "user": {
                    "name": "burningTyger",
                    "email": ""
                }
            },
            {
                "body": "I should mention that running the benchmarks that way, JRuby will never JIT the benchmark blocks (we don't JIT standalone blocks right now). So your numbers are basically JRuby running JRuby's interpreter. JRuby's numbers when it actually compiles the code are 2-3x faster than the numbers you have there. Running with JRuby -X+C should show closer to real results.\n\nhttps://gist.github.com/898866\n\nThis is Java 6; Java 7 seems to be another 10-15% faster, but I don't have results handy.\n\nI also fixed the <=, ==, and >= benchmarks since at least the == numbers were only really testing how fast each impl could compare object identity, which is rarely going to be useful for Time comparisons. Your numbers still reflect the old version, I think.\n",
                "path": "",
                "user": {
                    "name": "headius",
                    "email": ""
                }
            },
            {
                "body": "Wow, those JRuby numbers are wicked fast. When can we expect JRuby to JIT standalone blocks? I still use JRuby for all of my prod needs so any improvements there are going to help me immediately.\n",
                "path": "",
                "user": {
                    "name": "chuckremes",
                    "email": ""
                }
            },
            {
                "body": "As soon as I get around to it? :)\n\nIt's not really hard, it's just a bit of fiddling required for only a few cases like benchmarks and define_method (which is already pretty slow regardless of JIT). But I'm going to look into it a bit today (as well as the slower-than average == numbers on the Time benchmarks).\n",
                "path": "",
                "user": {
                    "name": "headius",
                    "email": ""
                }
            },
            {
                "body": "Oh, it's worth pointing out that blocks within methods will JIT in JRuby when the method surrounding them JITs...so there's actually very few cases where JITing standalone blocks helps a lot (since the vast majority of blocks are contained in methods that get called enough to JIT).\n",
                "path": "",
                "user": {
                    "name": "headius",
                    "email": ""
                }
            },
            {
                "body": "Is the issue then that these are blocks at script level, and therefore the script is only executed once?\n\nOn Apr 1, 2011, at 2:30 PM, headius wrote:\n\n> Oh, it's worth pointing out that blocks within methods will JIT in JRuby when the method surrounding them JITs...so there's actually very few cases where JITing standalone blocks helps a lot (since the vast majority of blocks are contained in methods that get called enough to JIT).\n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/evanphx/rubinius/commit/2f8b16bf2f911fa84ad23a0ea508040334fda02c#commitcomment-326199\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "No, JRuby never JITs standalone blocks, regardless of how many times they're called. JRuby's JIT only fires at a method-body level (for no reason other than I haven't ever made it fire at block-level). So basically, a block that's not within a method that JITs will always run interpreted.\n\nAny numbers run with the benchmark runner this way will show the same results...mostly interpreted performance. I'll get around to fixing it one of these days...it just hasn't come up often in real apps.\n",
                "path": "",
                "user": {
                    "name": "headius",
                    "email": ""
                }
            },
            {
                "body": "The pattern of overriding #respond_to? and #method_missing in this is example is both stupid and unnecessary, despite that it is used in some supposedly exemplary Ruby code. Regardless, I've changed this back.\n",
                "path": "kernel/common/type.rb",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "This probably also needs to use #respond_to? in case someone stupidly changes #respond_to?\n",
                "path": "kernel/common/type.rb",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "This should use Type.object_kind_of instead of Class.=== also.\n",
                "path": "kernel/delta/rubinius.rb",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "Yep, already changed it.\n",
                "path": "kernel/common/type.rb",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "I'll fix this.\n",
                "path": "kernel/delta/rubinius.rb",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "Excellent! I imagine this will fix a lot of apps acting as simple clients.\n",
                "path": "",
                "user": {
                    "name": "rakaur",
                    "email": ""
                }
            },
            {
                "body": "Hey guys, I kinda could help translating/editing/writing some stuff in :ru docs. Is that ok? \n",
                "path": "",
                "user": {
                    "name": "argent-smith",
                    "email": ""
                }
            },
            {
                "body": "Sure, we'd love some help. There's some info here http://rubini.us/doc/en/how-to/translate-documentation/, let us know if you have questions.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "I was actually going to add a Gemfile for this reason, just didn't get around to it yet.\n\nI'm fine having these files in the repo. Let's merge the Rakefile tasks here into rakelib/doc.rake and bump the Gemfile up to the root.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "I've first invented this Rakefile in the other project to generate Russian sites: Jekyll would do the bad things without utf-8 LANG. I'll try to use just UTF-8 instead of ru_RU.UTF-8. I still have these files on my devel branch.\n",
                "path": "",
                "user": {
                    "name": "argent-smith",
                    "email": ""
                }
            },
            {
                "body": "Hmmm... I've found that that ugly encoding error appears on Ruby 1.9 only. I'll continue to study it.\n",
                "path": "",
                "user": {
                    "name": "argent-smith",
                    "email": ""
                }
            },
            {
                "body": "I think we should leave a piece of this section according to 151d8132c73b2ccf040a2b8e4dd521097fab5844, not just throw away the whole section. See my e43933a2da26ed00f6eb4ea09f08d8e933b9913f.\n",
                "path": "web/doc/ru/contributing.markdown",
                "user": {
                    "name": "argent-smith",
                    "email": ""
                }
            },
            {
                "body": "Yes, I thought about that too in the first place but in the end it's kinda redundant since you will check the style guide anyway if you wish to contribute and it is also in the very same section of the docs. So I kicked everything. \n\nBut you're right I shouldn't have fiddled with your translations in the first place, sorry for that.\n",
                "path": "",
                "user": {
                    "name": "burningTyger",
                    "email": ""
                }
            },
            {
                "body": "Ok. Then we have to correct English version as well.\n",
                "path": "",
                "user": {
                    "name": "argent-smith",
                    "email": ""
                }
            },
            {
                "body": "BTW if you want the things to be Ok in `doc/ru` just commit what's needed to `doc/en` and I'll do the rest ;-) since I mostly translate, not author ;-)\n",
                "path": "",
                "user": {
                    "name": "argent-smith",
                    "email": ""
                }
            },
            {
                "body": "I think you made a mistake though I'm certain you'll correct me if I'm wrong. I assume you deleted these because you thought the array was being mutated while iterating. It's not.\n\nNote that in the \"array delete_at, random\" and \"array delete, random\" that the array being modified is _not_ the same as the one that is iterating. The random_elements array is iterating while its output is used for deleting from the scratch_array.\n\nThe \"array delete, front to back\" is clearly wrong though. I don' t know what I was thinking.\n",
                "path": "",
                "user": {
                    "name": "chuckremes",
                    "email": ""
                }
            },
            {
                "body": "Oh geez. Totally correct. My mistake. I'll correct that.\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "Wrt \"array delete, front to back\", is there a conceptual difference betwenn iterating over the array's size and iterating over the array itself? The size is only retrieved once and therefore the code seems to be consistent.\n",
                "path": "",
                "user": {
                    "name": "lgierth",
                    "email": ""
                }
            },
            {
                "body": " lgierth, normally I would agree with you but to go front to back the test should be calling \"scratch_array.delete(0)\" each time instead of using \"index.\" That's the error.\n\nSo as it stands, the current version is bass-ackwards and doesn't work as expected.  Feel free to submit a patch that restores the test to its rightful place _and_ in working order! (That's a good way to get a commit bit if you don't have one yet.)\n",
                "path": "",
                "user": {
                    "name": "chuckremes",
                    "email": ""
                }
            },
            {
                "body": "Ah, I understand it now, it should delete by value instead of index. I'll make a pull request.\n",
                "path": "",
                "user": {
                    "name": "lgierth",
                    "email": ""
                }
            },
            {
                "body": "Is there a reason to use scratch_array.delete(0) rather than scratch_array.shift?\n\nIt seems that either shift should be used to \"bookend\" the back to front bench, or back to front should be changed to use scratch_array.delete(-1)\n\nSymmetry is a beautiful thing! :-)\n",
                "path": "",
                "user": {
                    "name": "tmornini",
                    "email": ""
                }
            },
            {
                "body": "tmornini, the purpose of this benchmark is to test out _all_ of the array removal methods so it makes complete sense for it to use scratch_array.delete(0) and _another_ benchmark to use scratch_array.shift. It's the only way to know which one is faster. \n\nBTW, #shift is wicked fast across all runtimes so this benchmark helped me pick that method for use in my production apps.\n",
                "path": "",
                "user": {
                    "name": "chuckremes",
                    "email": ""
                }
            },
            {
                "body": "Thanks for clarifying. :-)\n",
                "path": "",
                "user": {
                    "name": "tmornini",
                    "email": ""
                }
            },
            {
                "body": "The fixed `array delete, front to back` and `back to front` benchmarks have been merged as evanphx/rubinius@8ebcb96\n",
                "path": "",
                "user": {
                    "name": "lgierth",
                    "email": ""
                }
            },
            {
                "body": "NICE!\n",
                "path": "",
                "user": {
                    "name": "tmornini",
                    "email": ""
                }
            },
            {
                "body": "This is just for C ext methods directly bound to Ruby, right? I assume intermediate C calls are still hidden. Also, I assume this change doesn't add overhead since your'e already creating NativeFrame for C ext-based methods, right?\n",
                "path": "",
                "user": {
                    "name": "headius",
                    "email": ""
                }
            },
            {
                "body": "Yep, just for C-API bound methods. I've considered doing it for intermediate C calls, it's just highly platform dependent.\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "And one last question: was this basically just missing? I know MRI shows _something_ in the stack for C ext calls, doesn't it?\n\nI believe we do show something in JRuby for C ext calls, but I'm not in a position to confirm it right now. I think they push a backtrace like interpreted Ruby calls do.\n",
                "path": "",
                "user": {
                    "name": "headius",
                    "email": ""
                }
            },
            {
                "body": "MRI has the concept of the last method called which it uses to show some info about the C method that was called, yes. This is similar but I think less confusing and lossy.\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "is this file here on purpose?\n",
                "path": "lib/20",
                "user": {
                    "name": "burningTyger",
                    "email": ""
                }
            },
            {
                "body": "Yes.\n",
                "path": "lib/20",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "Hier würde ich ganz vom englischen abweichen: junge Generation, mittlere Generation und alte Generation. Krippe klingt komisch. Nursery ist ja keine Krippe wie beim Krippenspiel sondern eher eine Kinderkrippe oder Kindergarten und als Metapher im Deutschen eher ungeeignet.\n",
                "path": "web/_site/doc/de/garbage-collector/index.html",
                "user": {
                    "name": "burningTyger",
                    "email": ""
                }
            },
            {
                "body": "Neugeborenenwanne?\n",
                "path": "web/_site/doc/de/garbage-collector/large-objects/index.html",
                "user": {
                    "name": "burningTyger",
                    "email": ""
                }
            },
            {
                "body": "150: Bytezahl\n152: Objekten\n",
                "path": "web/_site/doc/de/garbage-collector/large-objects/index.html",
                "user": {
                    "name": "burningTyger",
                    "email": ""
                }
            },
            {
                "body": "vie?\n",
                "path": "web/_site/doc/de/garbage-collector/mature-generation/index.html",
                "user": {
                    "name": "burningTyger",
                    "email": ""
                }
            },
            {
                "body": "Ja, ich muss zugeben, dass das Übersetzen der einzelnen Generationen doch recht schwierig war und ich auch nicht unbedingt zufrieden damit bin. Ich hab mich dann aber erstmal für eine möglichst direkte Übersetzung entschieden, es ging mir eher um den eigentlichen Inhalt. Kannst du gerne ändern, wenn du möchtest, hab ich keine Problem mit und jung, mittel, alt vermittelt ja auch die jeweiligen Zeitpunkte. ;)\n",
                "path": "web/_site/doc/de/garbage-collector/index.html",
                "user": {
                    "name": "malu",
                    "email": ""
                }
            },
            {
                "body": "Objekte\n",
                "path": "web/_site/doc/de/garbage-collector/mature-generation/index.html",
                "user": {
                    "name": "burningTyger",
                    "email": ""
                }
            },
            {
                "body": "immer noch, wird\n",
                "path": "web/_site/doc/de/garbage-collector/nursery/index.html",
                "user": {
                    "name": "burningTyger",
                    "email": ""
                }
            },
            {
                "body": "birthing tank. Da ist mir echt nichts eingefallen. Vorschlag? :)\n",
                "path": "web/_site/doc/de/garbage-collector/large-objects/index.html",
                "user": {
                    "name": "malu",
                    "email": ""
                }
            },
            {
                "body": "Objekte\n",
                "path": "web/_site/doc/de/garbage-collector/young-generation/index.html",
                "user": {
                    "name": "burningTyger",
                    "email": ""
                }
            },
            {
                "body": "Bitte nächstes Mal ein bisschen gründlicher vorher durchlesen, da waren zu viele Fehler drin.\n",
                "path": "",
                "user": {
                    "name": "burningTyger",
                    "email": ""
                }
            },
            {
                "body": "ich werd mal was überlegen. Habe dummerweise ins html kommentiert. So ein Mist. Sollen wir die Übersetzung zusammen machen auf Pirate Pad?\nhttp://piratepad.net/gc-trans-rby\n",
                "path": "web/_site/doc/de/garbage-collector/large-objects/index.html",
                "user": {
                    "name": "burningTyger",
                    "email": ""
                }
            },
            {
                "body": "Ja, das war nichts. Korrigierst du?\n",
                "path": "",
                "user": {
                    "name": "malu",
                    "email": ""
                }
            },
            {
                "body": "Nicht so hart. Ich erinnere mich an nicht so hoch qualitative Übersetzungen im Sinatra README. :D\n",
                "path": "",
                "user": {
                    "name": "rkh",
                    "email": ""
                }
            },
            {
                "body": "hey, es ist spät. Sinatra hab ich um 1 uhr morgens gemacht :)\n",
                "path": "",
                "user": {
                    "name": "burningTyger",
                    "email": ""
                }
            },
            {
                "body": "Na, es stimmt ja schon, was @burningTyger sagt. Man sollte sich bei der Übersetzung vielleicht auch etwas mehr absprechen, damit nicht überall unterschiedliche Übersetzungen von Kernbegriffen auftauchen.\n",
                "path": "",
                "user": {
                    "name": "malu",
                    "email": ""
                }
            },
            {
                "body": "War ja kein Vorwurf. Man sollte Leute nur nicht verschrecken. ;)\n",
                "path": "",
                "user": {
                    "name": "rkh",
                    "email": ""
                }
            },
            {
                "body": "ich weiß. @malu hat auch recht, man muss sich bei solchen Sachen besser absprechen. Sonst kommt irgendwas bei raus. Bestimmte Sachen übersetze ich auch nur ungerne, weil man sowieso nur alles falsch machen kann :D Dann muss man ein bisschen kreativ werden und vom Original abweichen. Ich lege auf der PiratePad Seite: http://piratepad.net/gc-trans-rby alles ab, dann kann man direkt vor Ort alles bearbeiten und zum Schluss kann @malu dann nochmal ein commit machen. Ansonsten war es gute Arbeit von @malu. \n",
                "path": "",
                "user": {
                    "name": "burningTyger",
                    "email": ""
                }
            },
            {
                "body": "Meine Verbindung ist aktuell höchst instabil, weshalb die Teilnahme am PiratePad nicht gerade einfach von der Hand geht. Nur zur Info.\n",
                "path": "",
                "user": {
                    "name": "malu",
                    "email": ""
                }
            },
            {
                "body": "kein Problem. Ich mache Feierabend. Ich hab ein paar Sachen geändert, kannst im pp-Chat Deine Meinung dazu abgeben. Ansonsten gehts auch hier.\n",
                "path": "",
                "user": {
                    "name": "burningTyger",
                    "email": ""
                }
            },
            {
                "body": "ok, ich habe den Entwurf jetzt mal zu Ende geschrieben. Sammlungen klingt unpassend, aber Collection klingt auch nicht besser. Vorschläge werden weiterhin angenommen, am besten direkt reinschreiben: http://piratepad.net/gc-trans-rby \n",
                "path": "",
                "user": {
                    "name": "burningTyger",
                    "email": ""
                }
            },
            {
                "body": "Any reason not to implement it as `Rubinius::VariableScope.current.method`? Maybe I'm missing something but that seems simpler, is more _Ruby in Ruby_ ™, and I can't imagine performance being an issue.\n",
                "path": "",
                "user": {
                    "name": "malu",
                    "email": ""
                }
            },
            {
                "body": "There is a performance upside to not using it via VariableScope.current, namely that VariableScope.current forces a method to heap allocate it's data even if it doesn't need to.\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "You can use `ssize_t`. You should always use `size_t` or `ssize_t` types when dealing with lengths/sizes of memory. They are not the same thing as `unsigned int` or `int` on 64bit systems:\n\n```\n#include <sys/types.h>\n#include <stdio.h>\n\nint main()\n{\n    printf(\"unsigned int: %u\\nint: %u\\nsize_t: %u\\nssize_t: %u\\n\",sizeof(unsigned int),sizeof(int),sizeof(size_t),sizeof(ssize_t));\n    return 0;\n}\n\nunsigned int: 4\nint: 4\nsize_t: 8\nssize_t: 8\n```\n",
                "path": "",
                "user": {
                    "name": "postmodern",
                    "email": ""
                }
            },
            {
                "body": "Nah, this isn't sizes in memory, imho.\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "The likelihood of a splat being >= (2**32) is probably close to zero, but it's still important to pay attention to signedness and type-conversions in C/C++.\n\nInteger wrapping/overflows/underflows can lead to some nasty [security vulnerabilities](https://www.securecoding.cert.org/confluence/display/seccode/INT30-C.+Ensure+that+unsigned+integer+operations+do+not+wrap).\n",
                "path": "",
                "user": {
                    "name": "postmodern",
                    "email": ""
                }
            },
            {
                "body": "Yep. We do ok, but could do better.\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "Shouldn't `git co` be replaced by `git checkout` instead of `git clone` ?\n",
                "path": "",
                "user": {
                    "name": "chickenkiller",
                    "email": ""
                }
            },
            {
                "body": "haha, yes of course. And I wondered who'd use git co for clone when I use it for checkout. @raluxgaza can you fix this again?\n",
                "path": "",
                "user": {
                    "name": "burningTyger",
                    "email": ""
                }
            },
            {
                "body": "Yup you guys are right. I'll make the change. Thanks for the heads up.\n",
                "path": "",
                "user": {
                    "name": "raluxgaza",
                    "email": ""
                }
            },
            {
                "body": "Erg, sorry, I should have caught that. I'll make the change and push the update.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "Aright then.\n",
                "path": "",
                "user": {
                    "name": "raluxgaza",
                    "email": ""
                }
            },
            {
                "body": "Perf of HAMT versus 1.8 hash seems a bit of a mixed bag, yeah? I guess it's probably also doing insertion ordering, though, so that's a solid gain. Any idea what memory-efficiency of HAMT versus 1.8 or 1.9 hash looks like?\n",
                "path": "",
                "user": {
                    "name": "headius",
                    "email": ""
                }
            },
            {
                "body": "FWIW, a quick eyeballing of process size for inserting 1M new hash instances of one key/value into an array shows the size is about the same for 1.8 hash and HAMT. That's definitely nice. I don't know how to get a proper dump of actual memory used, though.\n",
                "path": "",
                "user": {
                    "name": "headius",
                    "email": ""
                }
            },
            {
                "body": "@dbussink Great, this awesome! Hopefully we will have Rails working at 100% under Rubinius soon :)\n\n@spastorino This fix two of the broken ActiveSupport tests that we found during #rbxday!!!\n",
                "path": "",
                "user": {
                    "name": "guilleiguaran",
                    "email": ""
                }
            },
            {
                "body": "I'm not sure I agree with this commit. The existing code was not written that way because we don't know that you can hash an entire file. The file is potentially quite large and the chunked reading is potentially easier on memory.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "hmm, good point, wanna revert?\n",
                "path": "",
                "user": {
                    "name": "nazgob",
                    "email": ""
                }
            },
            {
                "body": "Yes, please revert.\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "I looked into it some more. The prebuilt here is about 6mb. To digest it as a whole file appeared to use about 3x that in memory. But that's still far below what gcc needs to compile, so I think it's ok.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "How about a compromise?\n\nWhole file is too big, but 1k at a time seems very small. :-)\n",
                "path": "",
                "user": {
                    "name": "tmornini",
                    "email": ""
                }
            },
            {
                "body": "What's the reason for changing it in the first place? It wasn't slow and it made sure to handle files of any size.\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "I apologize for the bikeshed. :)\n\nNo, it was not slow. Its just that I thought Digest#file (in standard Ruby) already did the chunking when I saw the code in configure. I looked into it more just now when I got home, and it does, albeit in 16K chunks, not 1K. No worries on revert. Again, sorry for the time sink. I was just trying to get more familiar (again) with Rubinius and noticed this...\n",
                "path": "",
                "user": {
                    "name": "rnicholson",
                    "email": ""
                }
            },
            {
                "body": "Link of reference: http://rubydoc.info/stdlib/digest/1.8.7/Digest/Instance:file\n",
                "path": "",
                "user": {
                    "name": "luislavena",
                    "email": ""
                }
            },
            {
                "body": "Ok, Didn't realize Digest.file did chunking. Go ahead and leave it.\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "I've been meaning to ask this for a while: Why doesn't #collect use #inject([]) if block_given? I can see the implementation of #collect is simple, so I was just curious. Would there be any perf improvements to be had by not using #inject([]) or might there be some that LLVM could make?\n",
                "path": "",
                "user": {
                    "name": "jc00ke",
                    "email": ""
                }
            },
            {
                "body": "Because the Enumerable methods must only use #each.\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "Ah, yes. Simple... thanks for the clarification.\n",
                "path": "",
                "user": {
                    "name": "jc00ke",
                    "email": ""
                }
            },
            {
                "body": "I knew it!\n",
                "path": "",
                "user": {
                    "name": "steveklabnik",
                    "email": ""
                }
            },
            {
                "body": "That's ok, it needed a spec, so it didn't fail when you removed it, which is our bad. :)\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "Jeez, wish I wasn't so tired last night & would have just written that... ;-) Easy fix!\n",
                "path": "",
                "user": {
                    "name": "jc00ke",
                    "email": ""
                }
            },
            {
                "body": "Please add this version back in. Requiring that a char\\* is always converted to a std::string will slow down the whole VM due to the number of times state->symbol() is used.\n",
                "path": "vm/vm.hpp",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "<3 :+1:\n",
                "path": "",
                "user": {
                    "name": "parndt",
                    "email": ""
                }
            },
            {
                "body": "self is unnecessary here since it's implied, so you could've done\n\n``` ruby\nuntrust if other.untrusted?\n```\n",
                "path": "kernel/common/array19.rb",
                "user": {
                    "name": "locks",
                    "email": ""
                }
            },
            {
                "body": "yeah, I know that. I just don't have an opinion about which way is better.\n",
                "path": "kernel/common/array19.rb",
                "user": {
                    "name": "carlosgaldino",
                    "email": ""
                }
            },
            {
                "body": "Leaving self off is the official style. I just missed it when reading over the diff.\n",
                "path": "kernel/common/array19.rb",
                "user": {
                    "name": "steveklabnik",
                    "email": ""
                }
            },
            {
                "body": "ok. that's good to know. next time I'll leave it off.\n",
                "path": "kernel/common/array19.rb",
                "user": {
                    "name": "carlosgaldino",
                    "email": ""
                }
            },
            {
                "body": "I think `unless` is more readable here.\n",
                "path": "kernel/common/array19.rb",
                "user": {
                    "name": "carlosgaldino",
                    "email": ""
                }
            },
            {
                "body": "Obviously the commit message should read \"Array#repeated_permutation\" instead. My bad!\n",
                "path": "",
                "user": {
                    "name": "subwindow",
                    "email": ""
                }
            },
            {
                "body": "Awesome!\n\nsexp_key should be sexp_name to be consistent with existing code.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "Any reason you changed the wording? Matching MRI's working isn't an explicit goal and personally I found the message before clearer than this one.\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "@dbussink\n\nI thought it was good to match MRI's messages until I saw Brian commenting on #1264. But for me MRI's message is clear enough to express what happened.\n\nAnyway, it's up to you guys which have more experience than me on this project.\n",
                "path": "",
                "user": {
                    "name": "carlosgaldino",
                    "email": ""
                }
            },
            {
                "body": "I also found the previous one clearer. But neither is that great. i'd prefer a full sentence, like, \"You cannot get the size of a closed File.\"\n",
                "path": "",
                "user": {
                    "name": "steveklabnik",
                    "email": ""
                }
            },
            {
                "body": "See pull request #1262 for why I changed it.\n",
                "path": "",
                "user": {
                    "name": "jish",
                    "email": ""
                }
            },
            {
                "body": "@dbussink I wrote this in pure Ruby since fixnum.cpp doesn't have a div function that takes a Float. Is that the right approach or would it have been better to create a new div function in fixnum.cpp that took a Float?\n",
                "path": "",
                "user": {
                    "name": "semmons99",
                    "email": ""
                }
            },
            {
                "body": "I did read it so I guess that happens\n",
                "path": "",
                "user": {
                    "name": "obrok",
                    "email": ""
                }
            },
            {
                "body": "ok, thanks for reading. I'll make sure next time it's more ambitious. I was thinking of a quote but couldn't decide which one.\n",
                "path": "",
                "user": {
                    "name": "burningTyger",
                    "email": ""
                }
            },
            {
                "body": "The one about the tree in the forest seems proper\n",
                "path": "",
                "user": {
                    "name": "obrok",
                    "email": ""
                }
            },
            {
                "body": "Hey, when you did these changes to even and odd, where you aware of how rubinius reacts to AND-operations as opposed to MOD-operations compared with Matz ruby? Because you seem to have chosen the most optimal solution for this Ruby implementation. In Matz Ruby they do it a bit differently, but that also happens to be the most optimal way for them.\n\nIn case you have no idea what I'm talking about, check out\nhttps://gist.github.com/1297201\nhttps://gist.github.com/29e95a9efbd3d42326af\n",
                "path": "kernel/common/integer.rb",
                "user": {
                    "name": "davorb",
                    "email": ""
                }
            },
            {
                "body": "I was aware of how mod compares to and in Rubinius when I made this change, yes.\n\nI find it quite odd that 'and' is slower than 'mod' in 1.9.3, almost seems like there might have been a regression inside MRI.\n",
                "path": "kernel/common/integer.rb",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "So, MRI returns `self` for the NaN/±Infinity cases. Should this detail be tested by RubySpec?\n",
                "path": "kernel/common/float19.rb",
                "user": {
                    "name": "jfirebaugh",
                    "email": ""
                }
            },
            {
                "body": ":+1: Nice! \n",
                "path": "",
                "user": {
                    "name": "mrb",
                    "email": ""
                }
            },
            {
                "body": "@brixen thanks for fixing that. Brain fart on my end...\n",
                "path": "",
                "user": {
                    "name": "jc00ke",
                    "email": ""
                }
            },
            {
                "body": "I like your style ;-)\n",
                "path": "",
                "user": {
                    "name": "jc00ke",
                    "email": ""
                }
            },
            {
                "body": "hahaha thank you, thanks to your code I finished File::Stat also: ceded84431ce83\n",
                "path": "",
                "user": {
                    "name": "guilleiguaran",
                    "email": ""
                }
            },
            {
                "body": "I saw that, nice! 4 for 1!\n",
                "path": "",
                "user": {
                    "name": "jc00ke",
                    "email": ""
                }
            },
            {
                "body": "Because of the `strlen()` calls I had to add `#include <string.h>` to the includes for this commit to compile on Ubuntu 11.10 with GCC 4.6.1.\n",
                "path": "lib/ext/melbourne/quark.hpp",
                "user": {
                    "name": "jtdowney",
                    "email": ""
                }
            },
            {
                "body": "The same change is required for this to compile on archlinux.\n",
                "path": "lib/ext/melbourne/quark.hpp",
                "user": {
                    "name": "chuckremes",
                    "email": ""
                }
            },
            {
                "body": "`check_forzen` should read `check_frozen`, right?\n",
                "path": "",
                "user": {
                    "name": "splattael",
                    "email": ""
                }
            },
            {
                "body": "You're right! @krekoten, could you please fix this?\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Oops :) Sure, I'll fix this.\n",
                "path": "",
                "user": {
                    "name": "krekoten",
                    "email": ""
                }
            },
            {
                "body": "Why are you going over both these? Are you sure it's needed since according to the specs the behavior changed in 1.9. Also, there's a way nicer way to get the metaclass for an object.\n",
                "path": "kernel/common/module19.rb",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "This return is very problematic. It will not increase the global serial if you exit here first. \n",
                "path": "kernel/common/module19.rb",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "I'd like you to review this with @evan and @brixen to check what the right approach is here.\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "There is no way this is correct. Please stop by #rubinius shortly or we'll be reverting this.\n",
                "path": "kernel/common/module19.rb",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "Sweet!\n",
                "path": "",
                "user": {
                    "name": "tmornini",
                    "email": ""
                }
            },
            {
                "body": "Wouldn't it be better to use tap or temporarly store the result of dup?\n\nCloning twice sounds like a costly thing.\n",
                "path": "kernel/common/array.rb",
                "user": {
                    "name": "meh",
                    "email": ""
                }
            },
            {
                "body": "If you look at the implementation of for example Array#compact, that shows probably a better implementation that makes it more clear how it works\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "yeah. I didn't realize that. my bad.\n\n`#tap` isn't necessary in this case. just a simple call to `#delete_if` solves the problem.\n\nchanged on bd4dc15\n",
                "path": "",
                "user": {
                    "name": "carlosgaldino",
                    "email": ""
                }
            },
            {
                "body": "cool!\n",
                "path": "",
                "user": {
                    "name": "jc00ke",
                    "email": ""
                }
            },
            {
                "body": "+1\n",
                "path": "",
                "user": {
                    "name": "MarkMenard",
                    "email": ""
                }
            },
            {
                "body": "This is awesome :+1:\n",
                "path": "",
                "user": {
                    "name": "mrb",
                    "email": ""
                }
            },
            {
                "body": "I will point out the \"atomic\" gem, for which this was added; you should use that API, not the internal Rubinius API, since the former will work across impls.\n",
                "path": "",
                "user": {
                    "name": "headius",
                    "email": ""
                }
            },
            {
                "body": "w00t!\n",
                "path": "",
                "user": {
                    "name": "tarcieri",
                    "email": ""
                }
            },
            {
                "body": "What they probably did in MRI was remove the Fixnum check completely so it falls through to the next case where it tries type coercing. Maybe we should also just remove the special case altogether?\n",
                "path": "kernel/common/type19.rb",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Please be aware that this actually halves performance for Bignum#to_s that results in a String with less than 1024 characters. This case is the most common one, so I think we should look for a way to improve the performance for really big Bignums without degrading it too much for smaller ones. \n\nI added a benchmark so we can see the numbers properly.\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Yeah, that possibility occurred to me after committing. I'll implement this strategy: start with a buffer of size 1024 and mp_toradix_nb. If that turns out to be too small, use mp_radix_size + mp_toradix_n.\n",
                "path": "",
                "user": {
                    "name": "jfirebaugh",
                    "email": ""
                }
            },
            {
                "body": "Actually played with some other changes that allows for very fast max size computation which might not always be completely correct but gives a pretty good upper bound for the size without having to completely compute it. Also have some ideas for changes to libtommath to make building a string faster in general. Probably can show that early upcoming week\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Cool! It would be good to get on par with MRI.\n\nI pushed my change but of course feel free to overwrite when you're finished.\n",
                "path": "",
                "user": {
                    "name": "jfirebaugh",
                    "email": ""
                }
            },
            {
                "body": "Adding rational19.rb isn't necessary, because kernel/common/rational.rb is loaded only in 1.9 mode. The 1.8 version is in lib/18.\n",
                "path": "",
                "user": {
                    "name": "jfirebaugh",
                    "email": ""
                }
            },
            {
                "body": "@jfirebaugh Thanks. I've missed it. I'll move it to rational.rb\n",
                "path": "",
                "user": {
                    "name": "lest",
                    "email": ""
                }
            },
            {
                "body": "Did you see the build has been broken on Travis?\n\nhttp://travis-ci.org/#!/rubinius/rubinius/builds/384826\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "I was wondering, do the specs then also fail on MRI due to this bug in GCC? Or does MRI work around this issue?\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "The specs pass on MRI compiled against non-glibc standard C library (e.g. on darwin). They fail on MRI compiled against glibc.\n\nBut I'm starting to think these aren't great specs for a number of reasons:\n- glibc is buggy\n- MRI is buggy: http://redmine.ruby-lang.org/issues/5713\n- Some implementations (JRuby) do not follow MRI, and actually try to calculate 2 *\\* bignum\n\nWhat these add up to is that effectively Ruby has no consistent behavior for Bignum exponents. :(\n",
                "path": "",
                "user": {
                    "name": "jfirebaugh",
                    "email": ""
                }
            },
            {
                "body": "@jfirebaugh That's all the more reason to _add_ some specs, right? If the behavior is poorly defined, the specs can set the standard.\n\nI think one of ruby-core's complaints about rubyspec is that (in the past) it tried too hard to conform to \"what it is\" instead of \"what it should be.\"\n",
                "path": "",
                "user": {
                    "name": "chuckremes",
                    "email": ""
                }
            },
            {
                "body": "Probably not a good policy to check in commented out lines\n",
                "path": "kernel/common/float19.rb",
                "user": {
                    "name": "nevir",
                    "email": ""
                }
            },
            {
                "body": "Agreed, which is why I removed them in 30c0c564d3 ;-)\n",
                "path": "kernel/common/float19.rb",
                "user": {
                    "name": "jc00ke",
                    "email": ""
                }
            },
            {
                "body": "That's what I get for not checking full histories!\n",
                "path": "kernel/common/float19.rb",
                "user": {
                    "name": "nevir",
                    "email": ""
                }
            },
            {
                "body": "Awesome, thanks!\n",
                "path": "",
                "user": {
                    "name": "raggi",
                    "email": ""
                }
            },
            {
                "body": "`it \"allocates...\" do`\nNo `should` :wink:\n",
                "path": "spec/ruby/optional/capi/object_spec.rb",
                "user": {
                    "name": "jc00ke",
                    "email": ""
                }
            },
            {
                "body": "`it \"duplicates...\" do`\n",
                "path": "spec/ruby/optional/capi/object_spec.rb",
                "user": {
                    "name": "jc00ke",
                    "email": ""
                }
            },
            {
                "body": "This mutates the hash during the `each_item` iteration, which seems like it might be a bad idea.\n",
                "path": "kernel/common/hash18.rb",
                "user": {
                    "name": "jfirebaugh",
                    "email": ""
                }
            },
            {
                "body": "Not just a bad idea, completely not allowed. Please revert this.\n",
                "path": "kernel/common/hash18.rb",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "Updated in 533e63c for both 1.8 and 1.9 modes. Thanks.\n",
                "path": "",
                "user": {
                    "name": "hosiawak",
                    "email": ""
                }
            },
            {
                "body": "Pardon my ignorance: is spenting proper English? Wouldn't it be `Time spent waiting` instead?\n\nAgain, sorry my ignorance (not native english speaker)\n",
                "path": "vm/shared_state.cpp",
                "user": {
                    "name": "luislavena",
                    "email": ""
                }
            },
            {
                "body": "Despite being a native english speaker, my typos are not.\n\nYes, you're correct. Please fix!\n",
                "path": "vm/shared_state.cpp",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "The latter is ok. The verb is \"to spend -> spending\"\n\nSincerely, Pavel.\n",
                "path": "vm/shared_state.cpp",
                "user": {
                    "name": "argent-smith",
                    "email": ""
                }
            },
            {
                "body": "The atan2 ones seem like bugs that should be investigated.\n",
                "path": "",
                "user": {
                    "name": "jfirebaugh",
                    "email": ""
                }
            },
            {
                "body": "MRI has the same behavior, so if they are bugs, they are platform bugs. Looks to me that they don't make a difference between positive and negative zero. I've verified the specs pass on both MRI and Rubinius with this change.\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "It would be better to add a `Rubinius.convert_to_name` method in rubinius18/19.rb and unify the definition of `#to_yaml_properties` using symbols. Look at the existing `Rubinius.convert_to_names` method and you'll see what I mean.\n",
                "path": "",
                "user": {
                    "name": "jfirebaugh",
                    "email": ""
                }
            },
            {
                "body": "I agree. Expect a pull request to that effect soon. However I'm slightly confused as to why `Rubinius.convert_to_names` is defined three times: once in `kernel/bootstrap/rubinius.rb`, once in `rubinius18.rb` and once again in `rubinius19.rb`. I thought if the implementations of the same method differed under the two Ruby versions, the method wouldn't be defined at all in the version-agnostic file?\n",
                "path": "",
                "user": {
                    "name": "leocassarani",
                    "email": ""
                }
            },
            {
                "body": "Yeah, I'm not sure why the rubinius.rb version exists. It was added after the 1.8 and 1.9 versions already existed, in 0549a6bff8a3dc3c71d4e51a6672f272fb041909 by @evanphx with the message \"Cleanup Kernel, part deux\". Specs pass without it. Unless Evan chimes in, I'd say you can remove it.\n",
                "path": "",
                "user": {
                    "name": "jfirebaugh",
                    "email": ""
                }
            },
            {
                "body": "Did you see that this breaks the build on Travis? \n\nhttp://travis-ci.org/#!/rubinius/rubinius/builds/696768\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "BTW, I also see these failures here locally\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "what about a solution tied to Time? After all it's not Range's fault that #succ exists in Time and is still not valid in Range. You know what I mean? After all #succ is about to be deprecated any time in MRI.\n",
                "path": "",
                "user": {
                    "name": "burningTyger",
                    "email": ""
                }
            },
            {
                "body": "Can you please add a spec in mspec/spec for the helper?\n",
                "path": "",
                "user": {
                    "name": "jfirebaugh",
                    "email": ""
                }
            },
            {
                "body": "Was this change intentional?\n",
                "path": "mspec/bin/mspec-ci",
                "user": {
                    "name": "jfirebaugh",
                    "email": ""
                }
            },
            {
                "body": "Should this be changed to `#each` from `#map` if the return values are never used?\n",
                "path": "kernel/common/struct.rb",
                "user": {
                    "name": "dkubb",
                    "email": ""
                }
            },
            {
                "body": "Agree, I will merge a pull request that does that ;)\n",
                "path": "kernel/common/struct.rb",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Here it is: https://github.com/rubinius/rubinius/pull/1639\n\nBTW. @dbussink JRuby vs Rubinius \"battle\" at wroclove.rb was awesome! :)\n",
                "path": "kernel/common/struct.rb",
                "user": {
                    "name": "szimek",
                    "email": ""
                }
            },
            {
                "body": "This is obviously better than the code I wrote. It wasn't apparent to me that try_convert is the preferred way to handle this kind of condition. Is there a little guide somewhere about Rubinius::Type?\n",
                "path": "",
                "user": {
                    "name": "subwindow",
                    "email": ""
                }
            },
            {
                "body": "Just curious: why not merge this? https://github.com/rubinius/rubinius/pull/1604/files\n",
                "path": "",
                "user": {
                    "name": "michalbugno",
                    "email": ""
                }
            },
            {
                "body": "@subwindow: If the answer is no, and you have insight on this, how about starting one? :-)\n",
                "path": "",
                "user": {
                    "name": "tmornini",
                    "email": ""
                }
            },
            {
                "body": "Yeah, this should probably have a section in the Rubinius documentation. Most core methods coerce their arguments rather than just checking types explicitly via kind_of? or similar. RubySpec tends to be spotty in specifying coercion, so it's always a good idea when implementing a method to check what kind of coercion MRI performs and add specs if they are missing. Coercion is usually done via the \"implicit\" conversion methods to_ary/to_str/to_hash etc, rather than the explicit to_a/to_s/to_h.\n",
                "path": "",
                "user": {
                    "name": "jfirebaugh",
                    "email": ""
                }
            },
            {
                "body": "@michalbungo no special reasons. Actually I didn't see that pull request. It's my bad :( I found this issue while working with my code so I fixed it.\n",
                "path": "",
                "user": {
                    "name": "krekoten",
                    "email": ""
                }
            },
            {
                "body": "Does the current `String#dup` implementation differ somehow from `Object#dup`? Removing it from `kernel/bootstrap/string.rb` doesn't seem to do any harm and specs pass.\n",
                "path": "",
                "user": {
                    "name": "michalbugno",
                    "email": ""
                }
            },
            {
                "body": "One thing is that we need to make sure we setup the duplicate as shared. There could be situations where people would be using initialize_copy for a String subclass where they wouldn't setup the @shared instance variable properly that would cause a string not to be shared when it should.\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Ah, great find!\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Thanks! :)\n",
                "path": "",
                "user": {
                    "name": "ryoqun",
                    "email": ""
                }
            },
            {
                "body": "I tried tracking this down back when I tagged the failing spec but never got anywhere. C++ is Greek to me. Nice work! Glad to see this finally resolved.\n",
                "path": "",
                "user": {
                    "name": "jc00ke",
                    "email": ""
                }
            },
            {
                "body": "Awesome find! Keep finding these ;)\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Oh, btw, might be interesting to do a write up on how you found this case? Would be interesting for other people I think.\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "just wow :heart:\n",
                "path": "",
                "user": {
                    "name": "guilleiguaran",
                    "email": ""
                }
            },
            {
                "body": "@ryoqun :metal: so impressed! LOVE IT! :heart:\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "How do I put this commit in my favourites? :P\n",
                "path": "",
                "user": {
                    "name": "meh",
                    "email": ""
                }
            },
            {
                "body": ":+1: for this commit and for a blog post with the story to tracking this down\n",
                "path": "",
                "user": {
                    "name": "abyx",
                    "email": ""
                }
            },
            {
                "body": "benchmarking using benchmark/parallelism.rb:\n\nBefore:\n\n```\n~/code/rubinius[master] % bin/rbx benchmark/parallelism.rb \nWork units: 8\nParallel count: 4\nIdeal time: 2s\nTotal time: 6.526113s\nConcurrency score: 24\nAssessment: Somewhat parallel, likely some system locking overhead\n```\n\nAfter:\n\n```\n~/code/rubinius[master] % bin/rbx benchmark/parallelism.rb\nWork units: 8\nParallel count: 4\nIdeal time: 2s\nTotal time: 3.550943s\nConcurrency score: 74\nAssessment: Somewhat parallel, likely some system locking overhead\n```\n",
                "path": "",
                "user": {
                    "name": "guilleiguaran",
                    "email": ""
                }
            },
            {
                "body": "Please don't go just deleting tags like this. If you do so, always verify on Travis too that everything still passes. With bigs deletes like this, preferably first test it on different platforms too. \n\nNow two people have been adding back tags so our build is green again.\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Why only show the first constant here in the exception? Why not show them all? Don't feel restricted by MRI exception messages, if we can do better, we definitely should make better exception messages. We don't consider the wording of exceptions to be part of the spec and try to do better if we can.\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Thanks everyone for commenting on this! I'm REALLY glad to see many positive feedbacks. :)\n\n@dbussink  @abyx  I will post my first Rubinius blog post for finding this if I find some time. ;p\n\nIn short, I found this using `opannotate` from OProfile (http://oprofile.sourceforge.net/news/)\n",
                "path": "",
                "user": {
                    "name": "ryoqun",
                    "email": ""
                }
            },
            {
                "body": "@ryoqun We all hope you can find the time!\n",
                "path": "",
                "user": {
                    "name": "jc00ke",
                    "email": ""
                }
            },
            {
                "body": "@jc00ke  Hehe, OK!\n",
                "path": "",
                "user": {
                    "name": "ryoqun",
                    "email": ""
                }
            },
            {
                "body": "Please always include {} around conditionals, even for one liners\n",
                "path": "vm/builtin/io.cpp",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "You're also doing this check in the primitive, is it necessary to do it in both places?\n",
                "path": "kernel/common/io19.rb",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "No it's not strictly needed, but I wanted to avoid an empty else/silent failure. It's just to be safe incase the checks in Ruby are ever messed up somehow.\n\nSent from my iPhone\n\nOn 16/05/2012, at 11:49 PM, Dirkjan Bussinkreply@reply.github.com wrote:\n\n> You're also doing this check in the primitive, is it necessary to do it in both places?\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/rubinius/rubinius/commit/d29353c56a8c3ed41d8199da15c2a9bb46900d1b#commitcomment-1341626\n",
                "path": "kernel/common/io19.rb",
                "user": {
                    "name": "ileitch",
                    "email": ""
                }
            },
            {
                "body": "Meh, replied via email, thought the comment was on the cpp check. I'll just remove the check in Ruby.\n",
                "path": "kernel/common/io19.rb",
                "user": {
                    "name": "ileitch",
                    "email": ""
                }
            },
            {
                "body": "This is not the right way to do this. count_table parses the string so it needs to validate the input, not doing it adhoc here.\n",
                "path": "kernel/common/string19.rb",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "I noticed you guys are already doing something really similar in the implementation of `squeeze!` in this very file (line :124). That's why I thought it's the way to go.\n",
                "path": "kernel/common/string19.rb",
                "user": {
                    "name": "antekpiechnik",
                    "email": ""
                }
            },
            {
                "body": "The code in `squeeze!` is probably wrong too then. :)\n",
                "path": "kernel/common/string19.rb",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "Hmm, this commit might expose threads to Ruby land we don't want exposed there. If I look now, I see an additional thread, namely the signal handler thread. \n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Oh, it also looks like these changes broke the build: http://travis-ci.org/#!/rubinius/rubinius\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "I see. I'll try to address those problems.\n",
                "path": "",
                "user": {
                    "name": "ryoqun",
                    "email": ""
                }
            },
            {
                "body": "I fixed the sig handler thread problem at f32161f17fef7c65617379cebdeb0387c378ade0.\n",
                "path": "",
                "user": {
                    "name": "ryoqun",
                    "email": ""
                }
            },
            {
                "body": "I also fixed the failing spec at 65cfc231b44dc76ee90ab342341327a52114ea51, too! (/me is impatiently waiting the travis to go green)\n",
                "path": "",
                "user": {
                    "name": "ryoqun",
                    "email": ""
                }
            },
            {
                "body": "Phew, the build breakage gone now: http://travis-ci.org/#!/rubinius/rubinius/builds/1365711\n",
                "path": "",
                "user": {
                    "name": "ryoqun",
                    "email": ""
                }
            },
            {
                "body": "I bet the guy that wrote the `squeeze!` fix didn't know what he was doing. :)\n",
                "path": "kernel/common/string19.rb",
                "user": {
                    "name": "charlietanksley",
                    "email": ""
                }
            },
            {
                "body": "Hey @evanphx, I'll try to get this done, thanks for the feedback!\n",
                "path": "kernel/common/string19.rb",
                "user": {
                    "name": "antekpiechnik",
                    "email": ""
                }
            },
            {
                "body": "Oh, another nice clean-up commit! Please keep fixing these. Let's make the code base clean! :)\n",
                "path": "",
                "user": {
                    "name": "ryoqun",
                    "email": ""
                }
            },
            {
                "body": ":+1:\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "This breaks with Rake 0.8.7. @brixen do you feel like we still want to support Rake 0.8.7 for building Rubinius?\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "I'm going to revert this one for now, since at least GCC 4.2.1 which is standard on OS X doesn't support the -Wno-gnu option. \n\nIs it possible that we change the code so we don't depend on this extension?\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Also on OSX I'm not able to build with clang.\n\nApple clang version 3.0 (tags/Apple/clang-211.10.1) (based on LLVM 3.0svn)\nTarget: x86_64-apple-darwin11.3.0\nThread model: posix\n",
                "path": "",
                "user": {
                    "name": "ileitch",
                    "email": ""
                }
            },
            {
                "body": "Rake 0.8.7 was released in May 2009 so it's not THAT old. We can go with conditional include using Rake::VERSION for Rake 0.9+. Sounds ok?\n",
                "path": "",
                "user": {
                    "name": "nazgob",
                    "email": ""
                }
            },
            {
                "body": "Revert this commit. \n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "Done.\n",
                "path": "",
                "user": {
                    "name": "nazgob",
                    "email": ""
                }
            },
            {
                "body": "Please be more careful change anything related to the build system. They impact everyone and their OSes, etc. \n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "Sorry for the trouble... I'm be more careful when I push this kind of commits..\n",
                "path": "",
                "user": {
                    "name": "ryoqun",
                    "email": ""
                }
            },
            {
                "body": "@ileitch Yeah. There is still some issues for building with Clang... I'll resolve all of them. Please wait a bit. :)\n",
                "path": "",
                "user": {
                    "name": "ryoqun",
                    "email": ""
                }
            },
            {
                "body": "Does this into take into account the time it takes to shell out via backticks?\n",
                "path": "",
                "user": {
                    "name": "jc00ke",
                    "email": ""
                }
            },
            {
                "body": "Why did you do this?\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "Why are you making these changes? Who did you discuss this with? While we appreciate your help, do not start changing code organization and structural components without discussing it first.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "@ryoqun you should join #rubinius channel on Freenode :smile:\n",
                "path": "",
                "user": {
                    "name": "guilleiguaran",
                    "email": ""
                }
            },
            {
                "body": "Please revert this commit. Immix is not under rubinius because it is a generic library.\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "He was on #rubinius and this change was shortly discussed with dbussink. The source of this was a problem on freebsd when compiling rubinius with clang, which generated this error: https://gist.github.com/2775390\n",
                "path": "",
                "user": {
                    "name": "Gibheer",
                    "email": ""
                }
            },
            {
                "body": "@brixen I reverted this commit. I'm very sorry for committing this without proper confirmation.\n\n@guilleiguaran I'll stay there when I'm working on Rubinius.\n\n@Gibheer Thanks for explaining in behalf of me.\n",
                "path": "",
                "user": {
                    "name": "ryoqun",
                    "email": ""
                }
            },
            {
                "body": "@brixen, @evanphx At the time I thought it would be a good idea to move global symbols to under rubinius:: to avoid symbol name conflicts. I reverted this commit. I'm very sorry for committing this without proper confirmation.\n",
                "path": "",
                "user": {
                    "name": "ryoqun",
                    "email": ""
                }
            },
            {
                "body": "How should this be handled properly?\n",
                "path": "vm/oop.cpp",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "This should use rubinius::bug() instead.\n",
                "path": "vm/oop.cpp",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "Better would be to run rubinius::bug(\"not inflated\") instead of the assert here.\n",
                "path": "vm/oop.hpp",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "Good one, didn't actually do the todo in the next commits when it was possible. Pushed a fix for this in this branch.\n",
                "path": "vm/oop.cpp",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Last time you said I shouldn't change too much other things at once ;). But changed the assert(0) to rubinius::bug() :). \n",
                "path": "vm/oop.cpp",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "This breaks installation of Rubinius with FAKEROOT env variable [1], so either the FAKEROOT should be used here or some build configuration variables, such as BUILD_CONFIG[:build_ruby].\n\n[1] https://github.com/rubinius/rubinius/blob/master/rakelib/install.rake#L9\n",
                "path": "",
                "user": {
                    "name": "voxik",
                    "email": ""
                }
            },
            {
                "body": "in some cases it's `lib64`:\n\n```\nlinux-vdso.so.1 (0x00007fffbedff000)\nlibyaml-0.so.2 => /home/mpapis/.rvm/usr/lib64/libyaml-0.so.2 (0x00007fdab8602000)\nlibc.so.6 => /lib64/libc.so.6 (0x00007fdab8243000)\n/lib64/ld-linux-x86-64.so.2 (0x00007fdab8a2a000)\n```\n\nin this case I did detected `lib64` in RVM and passed it with `--with-lib-dir`\n",
                "path": "configure",
                "user": {
                    "name": "mpapis",
                    "email": ""
                }
            },
            {
                "body": "There is another flaw. Since you use \"-S gem\", it means that you are not installing gems with the version of RubyGems Rubinius bundles, but with some arbitrary, possibly incompatible, RubyGems version.\n",
                "path": "",
                "user": {
                    "name": "voxik",
                    "email": ""
                }
            },
            {
                "body": "-S looks in our gem dirs first, so the correct version is installing the gems. I'll fix the FAKEROOT issue shortly.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "Thank you. I opened issue (#1757) for this.\n",
                "path": "",
                "user": {
                    "name": "voxik",
                    "email": ""
                }
            },
            {
                "body": "This has an interesting side effect: if `GEM_HOME` is set by the time Rubinius is installed, it will install gems for the wrong Ruby. Plus, those gems will appear installed but won't actually load.\n\nWe have been hit by this with travis-ci.org Ruby images.\n",
                "path": "",
                "user": {
                    "name": "michaelklishin",
                    "email": ""
                }
            },
            {
                "body": "a nice cleaning-up commit!\n",
                "path": "",
                "user": {
                    "name": "ryoqun",
                    "email": ""
                }
            },
            {
                "body": "Agreed. Terrific work!\n",
                "path": "",
                "user": {
                    "name": "tmornini",
                    "email": ""
                }
            },
            {
                "body": "Ah I saw this in my profiles too, I wasn't aware of the pause instruction though. Nice!\n",
                "path": "",
                "user": {
                    "name": "ileitch",
                    "email": ""
                }
            },
            {
                "body": "Very nice, indeed!\n",
                "path": "",
                "user": {
                    "name": "tmornini",
                    "email": ""
                }
            },
            {
                "body": "This line should not be changed. The change breaks psych.\n\nirb(main):001:0> require 'psych'\nLoadError: no such file to load -- psych.so\n",
                "path": "lib/19/psych.rb",
                "user": {
                    "name": "caiquanqing",
                    "email": ""
                }
            },
            {
                "body": "Ah, good catch. Which platform are you on? The change doesn't break on OS X and also not on Travis, but it's better to use the correct path. This was changed because we basically copy the extension from MRI with as few changes as possible since we then have to maintain those changes.\n",
                "path": "lib/19/psych.rb",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "It looks like these specs are also problematic on MRI. On MRI they also either hang or get the SIGTERM in the main process.\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "I looked a bit into it, it seems like the SIGTERM is the real issue. The hangs on my machine seem to be caused by lingering files in rubyspec_temp/ where it stores the pid files. Then it subsequently tries to wait for a pid it reads from a pid file from the previous run which of course hangs indefinitely since that pid doesn't exist and the real pid is only stored in the pid file afterwards.\n\nThis race seems to be here:\n\nhttps://github.com/rubinius/rubinius/blob/master/spec/ruby/core/process/fixtures/common.rb#L54\n\nSince that file does exists from a previous failed run, it hangs there waiting for the wrong pid.\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "This commit made me _very_ happy, thanks for this :)\n",
                "path": "",
                "user": {
                    "name": "wayneeseguin",
                    "email": ""
                }
            },
            {
                "body": "Sorry. I made a mistake. The commit message says Sprinter#print_built_method is added, however the actual change is adding Sprinter#debug_print. The code is correct. I forgot to update the commit message...\n",
                "path": "",
                "user": {
                    "name": "ryoqun",
                    "email": ""
                }
            },
            {
                "body": "Doesn't this mean that perhaps we're setting it sometimes to the wrong constant table here? Instead of now setting it in two tables?\n",
                "path": "kernel/common/module19.rb",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Nice!\n",
                "path": "",
                "user": {
                    "name": "jc00ke",
                    "email": ""
                }
            },
            {
                "body": "Now THAT'S what I call an error message.\n",
                "path": "",
                "user": {
                    "name": "ileitch",
                    "email": ""
                }
            },
            {
                "body": ":+1:\n",
                "path": "",
                "user": {
                    "name": "frodsan",
                    "email": ""
                }
            },
            {
                "body": "It will print this out for every such handle?\n",
                "path": "",
                "user": {
                    "name": "headius",
                    "email": ""
                }
            },
            {
                "body": "Oh...nevermind...I assume the ->validate is normally turned off..\n",
                "path": "",
                "user": {
                    "name": "headius",
                    "email": ""
                }
            },
            {
                "body": "@headius For now it will actually exit. We're taking the defensive approach first here, if it turns out that the case where people fixup the handle afterwards is very common, we might change it to a warning.\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Could you please also add a spec for this? So we can verify the actual behavior is also correct and we're not just masking a problem here? Also prevents regressions in the future.\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Is this run on every `rbx` invocation that doens't have `RBX_NO_COLS` set? I am not too familiar with the rbx codebase so I'm not sure. But if this runs on every load, then this is going to be ridiculously expensive on some systems. Reading something like `ENV[\"COLUMNS\"]` is _reasonably_ cheap. But subprocessing out a couple times just to try to get the terminal width is a crazy amount of overhead.\n\nI'm speaking from the point of view of someone who continually tries to optimize the \"time to first output\" in a command line application. I can see this being extremely annoying. Why is the terminal width needed so badly?\n\n(Again, not familiar with the rbx codebase so I can be way off here. If so, sorry!)\n",
                "path": "",
                "user": {
                    "name": "mitchellh",
                    "email": ""
                }
            },
            {
                "body": "One solution would be to try and read `ENV[\"COLUMNS\"]` and if it's not set, delay calling `stty` or `tput` until we need to know the number of columns.\n\nSo, we need to know the number of columns to render the nice backtrace. If we defer calculating the columns until we're rendering a nice backtrace, that seems like a reasonable tradeoff since hopefully most successful processes won't even need to render the nice backtrace.\n\n@dbussink wanna change that? Should be easy to put the calls to `stty` and `tput` behind a method that memoizes the result and is called from the `awesome_backtrace` method.\n",
                "path": "",
                "user": {
                    "name": "evanphx",
                    "email": ""
                }
            },
            {
                "body": "Evan, thanks for responding. \n\nI'm going to be honest that my preferred approach would be to defer `TERMINAL_WIDTH` until it is absolutely needed. `TERMINAL_WIDTH` is not a standard (based on MRI) constant, I don't think, so I'd prefer it to be gone altogether. I realize that reading a hash is freakishly cheap, but its still doing _something_ and the best way to get fast is to do _nothing_. Could you not just attempt to get the terminal width when/if an exception is thrown?\n\nLike I said, my point of view is a bit extreme since I maintain a command line app where I'm constantly trying to push the load time speeds of. And also because I'd one day love to use Rbx and just can't right now due to load times.\n\nAs a compromise, of course, I think deferring subprocess calls would be acceptable.\n",
                "path": "",
                "user": {
                    "name": "mitchellh",
                    "email": ""
                }
            },
            {
                "body": "Waiting to get something potentially expensive until you actually need it seems like the wise approach to me.\n",
                "path": "",
                "user": {
                    "name": "leavengood",
                    "email": ""
                }
            },
            {
                "body": "Hi, I think these renames are really great as well as those in the next commit.\n\nAs software projects grow, the code base gets uglier as modifications pile up. So, I have a strong belief that regular cleaning is a must. However, many projects don't practice it due to lack of man power, inevitable large change, overly-worried incompatibility, etc...\n\nI'm really happy Rubinius isn't one of those projects. That's one of my reason why I love Rubinius out of all other Ruby implementations. Without doubt, Rubinius got more readable by this commit and the next one.\n\nThanks for great work!\n",
                "path": "",
                "user": {
                    "name": "ryoqun",
                    "email": ""
                }
            },
            {
                "body": "Thank you @ryoqun. We have always strived to keep the code in Rubinius and RubySpec as clean as possible. It inevitably gets messy and we have more cleaning to do, but the importance of clean code for correctness and comprehension cannot be overestimated.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "Should\n\n``` ruby\nrubinius::MachineCode* code\n```\n\nbe\n\n``` ruby\nrubinius::MachineCode* mcode\n```\n\n?\n",
                "path": "rakelib/instruction_parser.rb",
                "user": {
                    "name": "arjen",
                    "email": ""
                }
            },
            {
                "body": "Hmm, this basically adds around 8 seconds to CI build times (on my machine), which is really long. We might want to revert it because of that, especially since even when this doesn't hang, it doesn't guarantee that there is no deadlock.\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "OK, I reverted this commit.\n",
                "path": "",
                "user": {
                    "name": "ryoqun",
                    "email": ""
                }
            },
            {
                "body": "Would you mind (me) splitting the lines after 80 characters? It's difficult to read on smaller screens.\n",
                "path": "",
                "user": {
                    "name": "burningTyger",
                    "email": ""
                }
            },
            {
                "body": "Done on b50d39b\n",
                "path": "",
                "user": {
                    "name": "jc00ke",
                    "email": ""
                }
            },
            {
                "body": "perfect, thank you. \n",
                "path": "",
                "user": {
                    "name": "burningTyger",
                    "email": ""
                }
            },
            {
                "body": "You're welcome. And I learned about `gqq` in vim!\n",
                "path": "",
                "user": {
                    "name": "jc00ke",
                    "email": ""
                }
            },
            {
                "body": "The reason I love Rubinius is that its commits are well explained in commit messages. It sufficiently records the relational of commits and at the same time other programmers like me can learn a lot from such commits like this one!\n\nReally thanks @thedarkone for finding this bug and @dbussink for fixing it. I got busy recently...\n",
                "path": "",
                "user": {
                    "name": "ryoqun",
                    "email": ""
                }
            },
            {
                "body": "@ryoqun I've noticed the same :wink:\nCheck the [CONTRIBUTING](https://github.com/rubinius/rubinius/blob/3fdd8b5bb986f63aa3bbbe617ae7e03e41054d78/CONTRIBUTING#L28-31) doc\n",
                "path": "",
                "user": {
                    "name": "jc00ke",
                    "email": ""
                }
            },
            {
                "body": "Yes, I love reading these commits :)\n",
                "path": "",
                "user": {
                    "name": "ileitch",
                    "email": ""
                }
            },
            {
                "body": "@jc00ke Wow, I didn't know that. Thanks! My commit is mentioned as an example. Yay!\n",
                "path": "",
                "user": {
                    "name": "ryoqun",
                    "email": ""
                }
            },
            {
                "body": "@brixen did you intended to commit this?\n",
                "path": "kernel/loader.rb",
                "user": {
                    "name": "ileitch",
                    "email": ""
                }
            },
            {
                "body": "WHAT THE... nope, I'll fix it, thanks. :)\n",
                "path": "kernel/loader.rb",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "Excellent find, I spent a few hours debugging heap_dump.rb trying to find where this incorrect class pointer was coming from, now I can use the heap dump to find a memory leak, thanks @dbussink :)\n",
                "path": "",
                "user": {
                    "name": "hosiawak",
                    "email": ""
                }
            },
            {
                "body": "Weeeee\n",
                "path": "",
                "user": {
                    "name": "drnic",
                    "email": ""
                }
            },
            {
                "body": "Looking forward to changelog... ;)\n",
                "path": "",
                "user": {
                    "name": "jinzhu",
                    "email": ""
                }
            },
            {
                "body": "Awesome!\n",
                "path": "",
                "user": {
                    "name": "kyledrake",
                    "email": ""
                }
            },
            {
                "body": ":+1: \n",
                "path": "",
                "user": {
                    "name": "nahi",
                    "email": ""
                }
            },
            {
                "body": ":)\n",
                "path": "",
                "user": {
                    "name": "rkh",
                    "email": ""
                }
            },
            {
                "body": "Great job. Keep on rocking!! :+1: \n",
                "path": "",
                "user": {
                    "name": "Veejay",
                    "email": ""
                }
            },
            {
                "body": "See https://github.com/rubinius/rubinius/issues/1982\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "What the point to use us-ascii instead of something like UTF-8 please ?\n",
                "path": "",
                "user": {
                    "name": "robin850",
                    "email": ""
                }
            },
            {
                "body": "Because this is how Ruby behaves. Strings coming from things like Fixnum#to_s are US-ASCII by default. Using this encoding as the default is the least work for us, otherwise we have to do much more work to tag strings created here with US-ASCII\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Ok, thanks for taking the time to answer to my question.\n",
                "path": "",
                "user": {
                    "name": "robin850",
                    "email": ""
                }
            },
            {
                "body": "@robin850 The issue is that the Rubinius kernel has to be compilable with both Ruby 1.8 and 1.9 and there is no encoding support in 1.8. The melbourne parser, if running in a 1.8 Ruby, fakes enough of the encoding API to support compiling 1.9 code, but cannot actually deal with encodings. There is absolutely nothing in the core library that requires Encodings support but by explicitly setting the encoding, in 1.9, literals will have a defined rather than default encoding. The default encoding rules in MRI are complex and silly.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "@brixen : I see. Thanks for explanation. For which version are you going to drop 1.8 support ? I imagine that it's harder to support 1.8 on Rubinius. \n",
                "path": "",
                "user": {
                    "name": "robin850",
                    "email": ""
                }
            },
            {
                "body": "@robin850 There is absolutely nothing hard about supporting 1.8 on Rubinius. But this isn't about Rubinius support for a language mode. It's about ensuring Rubinius can still be built with MRI 1.8 and some systems still have 1.8.6. Even with the very newest ubuntu, MRI 1.8.7 is the default when you install ruby.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "@brixen : Ah ok, I see. Thanks once again. :) \n",
                "path": "",
                "user": {
                    "name": "robin850",
                    "email": ""
                }
            },
            {
                "body": ":metal:\n",
                "path": "",
                "user": {
                    "name": "steveklabnik",
                    "email": ""
                }
            },
            {
                "body": "Cool !\n",
                "path": "",
                "user": {
                    "name": "jineshkj",
                    "email": ""
                }
            },
            {
                "body": "Awesome! :heart: \n",
                "path": "",
                "user": {
                    "name": "goyox86",
                    "email": ""
                }
            },
            {
                "body": ":+1: \n",
                "path": "",
                "user": {
                    "name": "bakkdoor",
                    "email": ""
                }
            },
            {
                "body": ":metal: \n",
                "path": "",
                "user": {
                    "name": "StupidCodeFactory",
                    "email": ""
                }
            },
            {
                "body": ":clap:\n",
                "path": "",
                "user": {
                    "name": "christhekeele",
                    "email": ""
                }
            },
            {
                "body": "_Excited_\n",
                "path": "",
                "user": {
                    "name": "mrrooijen",
                    "email": ""
                }
            },
            {
                "body": "Yee !\n",
                "path": "",
                "user": {
                    "name": "qiun",
                    "email": ""
                }
            },
            {
                "body": "Awesome!\n",
                "path": "",
                "user": {
                    "name": "coolgeng",
                    "email": ""
                }
            },
            {
                "body": ":beers: \n",
                "path": "",
                "user": {
                    "name": "kossnocorp",
                    "email": ""
                }
            },
            {
                "body": ":+1: \n",
                "path": "",
                "user": {
                    "name": "diegoviola",
                    "email": ""
                }
            },
            {
                "body": "Wow!\n",
                "path": "",
                "user": {
                    "name": "parndt",
                    "email": ""
                }
            },
            {
                "body": "@ileitch You owe me a beer when we meet irl: 04d8acbc7650df160d74f1e7fc5c741b32b093b9 :)\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Thank you! This crash was annoying. \n",
                "path": "",
                "user": {
                    "name": "zhando",
                    "email": ""
                }
            },
            {
                "body": ":+1: \n",
                "path": "",
                "user": {
                    "name": "diegoviola",
                    "email": ""
                }
            },
            {
                "body": "@dbussink @brixen https://github.com/frodsan/rubinius/commit/6fe5e55086d66313cad09352588755d980b7e739 WDYT? Extract this helper method to a class to avoid expose a new method to Ruby.\n",
                "path": "",
                "user": {
                    "name": "frodsan",
                    "email": ""
                }
            },
            {
                "body": "No, that doesn't really help anything.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "Sorry :(\n",
                "path": "",
                "user": {
                    "name": "ileitch",
                    "email": ""
                }
            },
            {
                "body": "@robgleeson lol, more on the way! :)\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "Where are the specs for this. Or a tag removed for a passing spec?\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "@brixen Just added a spec in 46c76d73a4.\n",
                "path": "",
                "user": {
                    "name": "IPGlider",
                    "email": ""
                }
            },
            {
                "body": "Curious, from where did you get `siphash.c` & `siphash.h`?\n",
                "path": "",
                "user": {
                    "name": "jc00ke",
                    "email": ""
                }
            },
            {
                "body": "@jc00ke maybe https://github.com/emboss/siphash-c/blob/master/src/siphash.c\n",
                "path": "",
                "user": {
                    "name": "guilleiguaran",
                    "email": ""
                }
            },
            {
                "body": ":+1: for not relying on Ruby Managers. FWIW, @dbussink already reviewed [chruby's Rubinius installation instructions](https://github.com/postmodern/chruby/wiki/Rubinius). Feel free to crib.\n",
                "path": "",
                "user": {
                    "name": "postmodern",
                    "email": ""
                }
            },
            {
                "body": "A list of the _specific_ interference points would probably be good, since if its just changing of build time settings, users should be able to do this on their own as they wish. Showing where the changes RVM makes to the build process that are _incorrect_, or cause rbx not to work would probably be a good thing to show, if rbx is dropping RVM support. I'm sure others will have questions as to what RVM specifically changes that breaks rbx so they know.\n\nWould also give the RVM Project a chance to respond to specifics, should they choose to.\n",
                "path": "",
                "user": {
                    "name": "ddd",
                    "email": ""
                }
            },
            {
                "body": "I agree with ddd. I count on RVM handling all of my rubies, and if Rubinius is not supported, I probably won't mess with Rubinius anymore, mostly out of laziness. I would like to know the specifics of what's wrong.\n\nIdeally, this could be done without a flame war.\n",
                "path": "",
                "user": {
                    "name": "heironimus",
                    "email": ""
                }
            },
            {
                "body": "Folks, this has nothing to do with Rubinius _supporting_ RVM. RVM is an external tool. We provide a build system that is used by multiple OS packaging systems, multiple Ruby installer and switcher systems, and can be used by anyone to simply build and run Rubinius in the clone directory, or install if they wish. If RVM choses to support Rubinius, that is up to RVM.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "I realize that. You said that RVM interferes with the RBX build process, which can be modified even by users _not_ using RVM. I was looking for a list of the things RVM does that breaks, interferes, or otherwise harms/hampers RBX's build process when installed using RVM.\n",
                "path": "",
                "user": {
                    "name": "ddd",
                    "email": ""
                }
            },
            {
                "body": "Hmm, I've seen this header before but then the extension used it to see if it could poke at MRI internals if I recall correctly. Don't know anymore where that was, but adding this scares me a bit ;).\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Yeah, I wasn't sure if it was just forgotten or if it really shouldn't go there, but I wasn't sure since the file already has a bunch of HAVE_RUBY_\\* defines... Tmail uses it to check if its being installed on Ruby 1.9 and basically does this:\n# ifdef HAVE_RUBY_VM_H\n\n  #include \"ruby/re.h\"\n  #include \"ruby/encoding.h\"\n# else\n\n  #include \"re.h\"\n# endif\n\nSince it wasn't defined, it couldn't find the right \"re.h\".\nNot sure what's the best approach here, but adding HAVE_RUBY_VM_H worked.\n",
                "path": "",
                "user": {
                    "name": "bakkdoor",
                    "email": ""
                }
            },
            {
                "body": "This probably means the gem should be fixed. They use this as a check for 1.9 or not, but extconf.rb can be setup very easily to detect whether those headers exist or not. Actually looking for the header files you want seems like a better solution for me.\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "BTW, this is what I do in my own extensions:\n\n```\n#include <ruby.h>\n#ifdef HAVE_RUBY_ENCODING_H\n#include <ruby/encoding.h>\n#endif\n```\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Fair enough. If you want to reverse this commit, go ahead. Seems like Tmail isn't actively maintained anymore. The last gem release was almost 3 years ago -_- https://rubygems.org/gems/tmail\n",
                "path": "",
                "user": {
                    "name": "bakkdoor",
                    "email": ""
                }
            },
            {
                "body": "CVE-2012-5372\n",
                "path": "",
                "user": {
                    "name": "nahi",
                    "email": ""
                }
            },
            {
                "body": "Oops, I didn't intend to post here. The number is assigned from CVE for this issue: http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-5372\n",
                "path": "",
                "user": {
                    "name": "nahi",
                    "email": ""
                }
            },
            {
                "body": "Any reason this is conditional? If it's a generic header that should exist on every platform, I'd rather not add conditional loading for it.\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "I can confirm that it exists on linux and freebsd.\n",
                "path": "",
                "user": {
                    "name": "Gibheer",
                    "email": ""
                }
            },
            {
                "body": "Do these method size variables depend on context of the application, or are they roughly absolute given the general sizes of methods in all projects? If the former, it'd be great to auto-tune these.\n",
                "path": "",
                "user": {
                    "name": "ileitch",
                    "email": ""
                }
            },
            {
                "body": "AFAIK they're absolute values. Auto tuning would be a good solution provided the perf benefits outweigh the complexity of its implementation. We'd have to benchmark some real world apps and prove that the current absolute values aren't the best defaults. I did some benchmarks before on this but haven't found anything conclusive (the current defaults seemed to be OK, not necessarily the best).\n",
                "path": "",
                "user": {
                    "name": "hosiawak",
                    "email": ""
                }
            },
            {
                "body": "Can you explain what error was introduced? Travis does not have errors associated with this commit – https://travis-ci.org/rubinius/rubinius/builds/5004940\n\nAnd this behavior is essentially a mirror from mri 1.9 and 2.0. I've shown links and code example in https://github.com/rubinius/rubinius/pull/2171.\n",
                "path": "",
                "user": {
                    "name": "brainopia",
                    "email": ""
                }
            },
            {
                "body": "Take a look again at my commit and at yours.\n\nIf you change 2.0 code, you need to use `./configure --enable-version=2.0` so the 2.0 specs run.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "oh, such a typo, thanks for fixing, next time I'll be more careful! :dancers: \n",
                "path": "",
                "user": {
                    "name": "brainopia",
                    "email": ""
                }
            },
            {
                "body": "Well, you can write that like this `classes.sort.each do |name, fields|`\n\nI think this is more cleaner. Is there specific reason you wrote in that way?\n",
                "path": "",
                "user": {
                    "name": "ryoqun",
                    "email": ""
                }
            },
            {
                "body": "You're right, I'll change it, forgot about it :). Fixed!\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "thx!\n",
                "path": "",
                "user": {
                    "name": "ryoqun",
                    "email": ""
                }
            },
            {
                "body": "Thanks for your improvements!\n",
                "path": "",
                "user": {
                    "name": "kachick",
                    "email": ""
                }
            },
            {
                "body": "Whoops, the number needs to be 0.02 here. It went from 0.18 to 0.16 on my system\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Do you think you could also add a spec for the problem case? We also have explicit specs for the SendFastNew transformation, maybe that's a good place to put it?\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "@dbussink Will do :)\n",
                "path": "",
                "user": {
                    "name": "leocassarani",
                    "email": ""
                }
            },
            {
                "body": ":sushi: \n\nThank you. #2089 run on [HEAD](878677833a6e5c5905de729accc4fe96fcda087d).\n",
                "path": "",
                "user": {
                    "name": "kachick",
                    "email": ""
                }
            },
            {
                "body": "Really nice work @dbussink!\n",
                "path": "",
                "user": {
                    "name": "digitalextremist",
                    "email": ""
                }
            },
            {
                "body": "Great explanation!\n",
                "path": "",
                "user": {
                    "name": "ileitch",
                    "email": ""
                }
            },
            {
                "body": "Interesting...but I'm confused. Was Rubinius inlining methods that weren't actually ever called?\n",
                "path": "",
                "user": {
                    "name": "headius",
                    "email": ""
                }
            },
            {
                "body": "My undocumented gems and I thank you...\n",
                "path": "",
                "user": {
                    "name": "zhando",
                    "email": ""
                }
            },
            {
                "body": "It looks like this broke some of the Time specs on 32 bit systems, where we extend to 64 bit timestamps. Could you investigate why this breaks? This is the output I'm seeing on 32 bit Linux (Ubuntu Precise 12.04):\n\n```\nrubinius 2.0.0.rc1 (1.8.7 2feba864 yyyy-mm-dd JI) [i686-pc-linux-gnu]\n........................F....F.................................\n\n1)\nTime.local accepts various year ranges FAILED\nExpected 3\n to equal 1\n\n          { } in Object#__script__ at spec/ruby/core/time/shared/time_params.rb:169\n          { } in Object#__script__ at spec/ruby/core/time/shared/time_params.rb:168\n      Kernel(Object)#instance_eval at kernel/common/eval18.rb:45\n     { } in Enumerable(Array)#all? at kernel/common/enumerable.rb:102\n                        Array#each at kernel/bootstrap/array.rb:68\n            Enumerable(Array)#all? at kernel/common/enumerable.rb:102\n             Integer(Fixnum)#times at kernel/common/integer.rb:83\n                        Array#each at kernel/bootstrap/array.rb:68\n                 Object#__script__ at spec/ruby/core/time/local_spec.rb:6\n                       Kernel.load at kernel/common/kernel.rb:587\n      Kernel(Object)#instance_eval at kernel/common/eval18.rb:45\n                        Array#each at kernel/bootstrap/array.rb:68\n  Rubinius::CodeLoader#load_script at kernel/delta/codeloader.rb:68\n  Rubinius::CodeLoader.load_script at kernel/delta/codeloader.rb:119\n           Rubinius::Loader#script at kernel/loader.rb:620\n             Rubinius::Loader#main at kernel/loader.rb:821\n\n2)\nTime.mktime accepts various year ranges FAILED\nExpected 3\n to equal 1\n\n          { } in Object#__script__ at spec/ruby/core/time/shared/time_params.rb:169\n          { } in Object#__script__ at spec/ruby/core/time/shared/time_params.rb:168\n      Kernel(Object)#instance_eval at kernel/common/eval18.rb:45\n     { } in Enumerable(Array)#all? at kernel/common/enumerable.rb:102\n                        Array#each at kernel/bootstrap/array.rb:68\n            Enumerable(Array)#all? at kernel/common/enumerable.rb:102\n             Integer(Fixnum)#times at kernel/common/integer.rb:83\n                        Array#each at kernel/bootstrap/array.rb:68\n                 Object#__script__ at spec/ruby/core/time/mktime_spec.rb:6\n                       Kernel.load at kernel/common/kernel.rb:587\n      Kernel(Object)#instance_eval at kernel/common/eval18.rb:45\n                        Array#each at kernel/bootstrap/array.rb:68\n  Rubinius::CodeLoader#load_script at kernel/delta/codeloader.rb:68\n  Rubinius::CodeLoader.load_script at kernel/delta/codeloader.rb:119\n           Rubinius::Loader#script at kernel/loader.rb:620\n             Rubinius::Loader#main at kernel/loader.rb:821\n\nFinished in 0.679967 seconds\n\n63 files, 316 examples, 439 expectations, 2 failures, 0 errors\n```\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "I don't know if this a problem with the specs or that this change really breaks something, that would be good to investigate then.\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "@dbussink This seems to have fixed my \"undefined method\" problem on a codebase I couldn't share the other day, no longer getting them on master, thanks.\n",
                "path": "",
                "user": {
                    "name": "hosiawak",
                    "email": ""
                }
            },
            {
                "body": "@hosiawak Ah, cool to hear, thanks for testing it and reporting!\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Is this comment still relevant, now that the free bit is set outside the conditional?\n",
                "path": "vm/builtin/data.cpp",
                "user": {
                    "name": "leocassarani",
                    "email": ""
                }
            },
            {
                "body": "So impressive performance :D\n",
                "path": "",
                "user": {
                    "name": "ryoqun",
                    "email": ""
                }
            },
            {
                "body": "Thank you!\n",
                "path": "",
                "user": {
                    "name": "kachick",
                    "email": ""
                }
            },
            {
                "body": "Why is `obj` being passed? Does not it increases overhead?\n",
                "path": "kernel/bootstrap/weakref.rb",
                "user": {
                    "name": "badosu",
                    "email": ""
                }
            },
            {
                "body": "Because the actual implementation in the vm expects it: https://github.com/rubinius/rubinius/blob/master/vm/builtin/weakref.cpp#L10-L15\n\nSo the code before didn't even work. Also I don't really understand what you mean by increasing overhead here?\n",
                "path": "kernel/bootstrap/weakref.rb",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Interesting!\n\nI just got confused because of this commit: https://github.com/rubinius/rubinius/commit/1211ffb10c2fda7d5f5bd01a09c77a69a464b288 , but it is about blocks, not arguments.\n\nThanks very much for the explanation!\n",
                "path": "kernel/bootstrap/weakref.rb",
                "user": {
                    "name": "badosu",
                    "email": ""
                }
            },
            {
                "body": "@razielgn Thanks for fixing this up. I love each and every guys for caring the Encoding!!\n",
                "path": "",
                "user": {
                    "name": "ryoqun",
                    "email": ""
                }
            },
            {
                "body": "ehm this commit break for example some extensions in rubinius, e.g. rmagick\n",
                "path": "",
                "user": {
                    "name": "blackhand",
                    "email": ""
                }
            },
            {
                "body": "ref: Issue #492\n",
                "path": "",
                "user": {
                    "name": "blackhand",
                    "email": ""
                }
            },
            {
                "body": "spec failure looks from variables sequence\n\n```\nExpected [:unmatched, :matched]\n to equal [:matched, :unmatched]\n```\n\nBut in script, it contains strings.\n\n```\nbin/ruby <<EOD\n/(?<matched>foo)(?<unmatched>bar)?/ =~ \"foofoo\"\np local_variables\nEOD\nnil\n[:matched, :unmatched, \"matched\", \"unmatched\"]\n```\n\nStrange for me\n",
                "path": "",
                "user": {
                    "name": "kachick",
                    "email": ""
                }
            },
            {
                "body": "Already fixed with 5805fcd72eb4c3ffd2b6608301706b8238bbf8a7, Rubinius::LookupTable doesn't keep ordering defined, so it could come out unordered when iterating it.\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Thanks! Spec passes on my env too.\nAnd I'm looking https://github.com/rubinius/rubinius/blob/5805fcd72eb4c3ffd2b6608301706b8238bbf8a7/kernel/common/regexp.rb#L356.\n",
                "path": "",
                "user": {
                    "name": "kachick",
                    "email": ""
                }
            },
            {
                "body": ":heart: \n",
                "path": "",
                "user": {
                    "name": "jc00ke",
                    "email": ""
                }
            },
            {
                "body": ":heartpulse:\n",
                "path": "",
                "user": {
                    "name": "christhekeele",
                    "email": ""
                }
            },
            {
                "body": "X?\n",
                "path": "",
                "user": {
                    "name": "rkh",
                    "email": ""
                }
            },
            {
                "body": "Rubinius X\n",
                "path": "",
                "user": {
                    "name": "guilleiguaran",
                    "email": ""
                }
            },
            {
                "body": "Rubinius, part Deux\n",
                "path": "",
                "user": {
                    "name": "jc00ke",
                    "email": ""
                }
            },
            {
                "body": "Is that the Rubinius take on JRuby 9000?\n",
                "path": "",
                "user": {
                    "name": "rkh",
                    "email": ""
                }
            },
            {
                "body": "I have no idea what JRuby 9000 is but it sounds very enterprise-y.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "<3\n",
                "path": "",
                "user": {
                    "name": "badosu",
                    "email": ""
                }
            },
            {
                "body": "I am so happy you fixed this.. I will now use rbx as my day to day ruby! Goodbye MRI!\n\nThank you!\n",
                "path": "",
                "user": {
                    "name": "zhando",
                    "email": ""
                }
            },
            {
                "body": "Great work!\n",
                "path": "",
                "user": {
                    "name": "badosu",
                    "email": ""
                }
            },
            {
                "body": "Looks like this breaks the build in 1.8 mode:\n\nhttps://travis-ci.org/rubinius/rubinius/jobs/9688103\n\nCould you please check whether this is a problem with the spec or with Rubinius?\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Ah.. sorry, and sure.\nI'll check and try to fix.\n",
                "path": "",
                "user": {
                    "name": "kachick",
                    "email": ""
                }
            },
            {
                "body": "- Array#to_s does not accepts arguments\n- Array#\\* does not coerce nil as Array#join\n\nI think this spec is an only Array#join spec.\n\nI'll adjust.\n",
                "path": "",
                "user": {
                    "name": "kachick",
                    "email": ""
                }
            },
            {
                "body": "Fixed https://github.com/rubinius/rubinius/commit/43bd48da4e9a726ef93c001d3c8d16882ed53d74\n\nSorry my carelessness :<\n",
                "path": "",
                "user": {
                    "name": "kachick",
                    "email": ""
                }
            },
            {
                "body": "Thanks for quickly fixing it!\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Oops ... :-1: \n",
                "path": "spec/ruby/core/enumerator/yielder/initialize_spec.rb",
                "user": {
                    "name": "kachick",
                    "email": ""
                }
            },
            {
                "body": "To clarify JRuby 9000: it will remove 1.8 and 1.9 support and trim the core down significantly as a result. We've done a couple spikes of it, but are finishing up 1.7.5 right now.\n",
                "path": "",
                "user": {
                    "name": "headius",
                    "email": ""
                }
            },
            {
                "body": "Why not just use a mutex? Also, should IO really be locked? Most implementations assume that the caller should be doing the locking, not the underlying buffer, e.g. C, C++.\n",
                "path": "",
                "user": {
                    "name": "ioquatix",
                    "email": ""
                }
            },
            {
                "body": "This is not the current implementation anymore. The locking was put in place because we got actual bug reports / issues from people. We should revisit the problem and check how we can improve this.\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Does this also fix #2548 ?\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Hey there! It seems this change, particularly https://github.com/rubinius/rubinius/commit/9fa7e49ad22d881a6e942a4ec629c119daff6529#L2L45, is causing my build against rubinius to fail.\n\nYou can check it out here: https://travis-ci.org/craiglittle/hello_sign/jobs/10575545\n\nIt appears that `respond_to?` as defined on the object returned from `tuple.at` has an arity of one instead of the expected two.\n\nEdit:\n\nHere's the full stack trace:\n\n```\n   Failure/Error: HelloSign.signature_request.deliver do |request|\n     ArgumentError:\n       method 'respond_to?': given 2, expected 1\n     # kernel/common/type.rb:45:in `check_convert_type'\n     # kernel/common/array.rb:1038:in `recursively_flatten'\n     # kernel/common/thread.rb:52:in `detect_recursion'\n     # kernel/common/array.rb:1030:in `recursively_flatten'\n     # kernel/common/array19.rb:245:in `flatten'\n     # kernel/bootstrap/proc.rb:22:in `call'\n     # kernel/common/enumerable.rb:93:in `inject'\n     # kernel/common/hash19.rb:255:in `each'\n     # kernel/common/enumerable.rb:88:in `inject'\n     # kernel/common/enumerable.rb:93:in `inject'\n     # kernel/common/hash19.rb:255:in `each'\n     # kernel/common/enumerable.rb:88:in `inject'\n     # ./lib/hello_sign/client.rb:34:in `request'\n     # ./lib/hello_sign/client.rb:28:in `post'\n     # ./lib/hello_sign/proxy/signature_request.rb:26:in `deliver'\n     # ./spec/integration/signature_request_spec.rb:12:in `__script__'\n     # kernel/common/eval19.rb:45:in `instance_eval'\n     # kernel/bootstrap/array19.rb:18:in `map'\n     # kernel/bootstrap/array19.rb:18:in `map'\n     # kernel/bootstrap/array19.rb:18:in `map'\n     # kernel/bootstrap/array19.rb:18:in `map'\n     # kernel/bootstrap/proc.rb:22:in `call'\n     # kernel/loader.rb:725:in `run_at_exits'\n     # kernel/loader.rb:745:in `epilogue'\n     # kernel/loader.rb:878:in `main'\n```\n",
                "path": "",
                "user": {
                    "name": "craiglittle",
                    "email": ""
                }
            },
            {
                "body": "First of all, thanks for letting us know. I've investigated your report, and it looks like [this line](https://github.com/nicksieger/multipart-post/blob/37289460d4e046dacf72b2c0eb8366660873a498/lib/composite_io.rb#L105) in the [multipart-post gem](https://github.com/nicksieger/multipart-post), which is a dependency of Faraday, redefines `respond_to?` but accidentally omits the second argument.\n\nWhile this is definitely a bug in multipart-post, and clearly warrants a pull request to fix it, a quick grep through the codebase shows that we only pass the second parameter into `respond_to?` on three occurrences throughout all kernel code. Furthermore, all of those occurrences seem to have been introduced by @razielgn relatively recently. I wonder if @dbussink agrees that it might be a safer option to implement those checks in a way that doesn't rely on a public API method that people may often override incorrectly (i.e. by forgetting the second, optional parameter in the method signature).\n",
                "path": "",
                "user": {
                    "name": "leocassarani",
                    "email": ""
                }
            },
            {
                "body": "@craiglittle: I believe this was fixed by 4c22e32ec8. I've re-run your integration tests against Rubinius master, and they no longer fail. \n\nPlease let us know if you're still having issues.\n",
                "path": "",
                "user": {
                    "name": "leocassarani",
                    "email": ""
                }
            },
            {
                "body": "Looks good to me. Thanks for the prompt response!\n",
                "path": "",
                "user": {
                    "name": "craiglittle",
                    "email": ""
                }
            },
            {
                "body": "@leocassarani: Thanks for fixing this! I should've been more careful there.\n",
                "path": "",
                "user": {
                    "name": "razielgn",
                    "email": ""
                }
            },
            {
                "body": "@razielgn You can't for see every case of other people overwriting methods in an incompatible way and getting away with it on MRI :). Don't feel sorry for this one :).\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "What @dbussink said. To be fair, I myself had forgotten that `respond_to?` took a second optional argument. For an often-overridden method, that's just asking for trouble.\n",
                "path": "",
                "user": {
                    "name": "leocassarani",
                    "email": ""
                }
            },
            {
                "body": "Right! :smile:\n",
                "path": "",
                "user": {
                    "name": "razielgn",
                    "email": ""
                }
            },
            {
                "body": "Yeah! :clap::tada::beers:\n",
                "path": "",
                "user": {
                    "name": "razielgn",
                    "email": ""
                }
            },
            {
                "body": "Nice, thanks for sorting this out.\n",
                "path": "",
                "user": {
                    "name": "ioquatix",
                    "email": ""
                }
            },
            {
                "body": "Shouldn't the checks against self.class be changed and the class passed down as argument? Now the helper in Rubinius::Type checks against the wrong class\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Yep.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "super cool cleaning up commit!\n",
                "path": "",
                "user": {
                    "name": "ryoqun",
                    "email": ""
                }
            },
            {
                "body": "this one changes `rbx -rrbconfig -e 'puts RbConfig::CONFIG[\"sitelibdir\"]'` to point to `vm/include/capi` which contains:\n\n``` ssh\ncapi_constants.h  capi_oop.h  gen  rbx_config.h  rbxti  rbxti.hpp  ruby  ruby.h\n```\n\ncompared to mri which contains `rubygems` there(`lib/ruby/site_ruby/2.0.0`):\n\n``` ssh\ngauntlet_rubygems.rb  rubygems  rubygems.rb  ubygems.rb  x86_64-linux\n```\n",
                "path": "",
                "user": {
                    "name": "mpapis",
                    "email": ""
                }
            },
            {
                "body": "Curious, why doesn't [this](https://github.com/rubysl/rubysl-uri/blob/5e92615f33b58120281101d0b2fa834b6d31b0dd/lib/uri/common.rb#L991) work then?\n",
                "path": "configure",
                "user": {
                    "name": "jc00ke",
                    "email": ""
                }
            },
            {
                "body": "@jc00ke That's not in every version :), older versions don't have that.\n",
                "path": "configure",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Ah, gotcha. Thanks.\n",
                "path": "configure",
                "user": {
                    "name": "jc00ke",
                    "email": ""
                }
            },
            {
                "body": "lulz\n",
                "path": "library/digest/bubblebabble.rb",
                "user": {
                    "name": "jc00ke",
                    "email": ""
                }
            },
            {
                "body": "So if I bundle after this change, it removes the json gem from the cache:\n\n```\nUsing rake (10.1.0)\nUsing daedalus-core (0.0.1)\nUsing gems (0.8.3)\nUsing redcard (1.1.0)\nUsing rubinius-ast (2.0.8)\nUsing rubinius-bridge (1.0.3)\nUsing rubinius-compiler (2.0.4)\nUsing rubinius-toolset (0.1.1)\nUsing rubinius-melbourne (2.0.0.17)\nUsing rubinius-processor (2.0.1)\nUsing bundler (1.3.5)\nUpdating files in vendor/cache\nRemoving outdated .gem files from vendor/cache\n  * json-1.8.0.gem\nYour bundle is complete!\nUse `bundle show [gemname]` to see where a bundled gem is installed.\n```\n\nRight now this file is in git:\n\n```\ngit st\n# On branch master\n# Changes not staged for commit:\n#   (use \"git add/rm <file>...\" to update what will be committed)\n#   (use \"git checkout -- <file>...\" to discard changes in working directory)\n#\n#   deleted:    vendor/cache/json-1.8.0.gem\n#\n```\n\nShould we remove it from git or store it somewhere else?\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Hi,\n\nIs this 2.1 behavior? I had to revert this to make\n\nhttps://github.com/cldwalker/boson/blob/master/lib/boson/option_parser.rb (line 394)\n\nwork as is..\n",
                "path": "",
                "user": {
                    "name": "zhando",
                    "email": ""
                }
            },
            {
                "body": "Yep, it's 2.1 behavior.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "This invades every C extensions' namespace with a #define called CEIL.\nThat may be asking for trouble; maybe choose a less likely name.\n",
                "path": "",
                "user": {
                    "name": "cabo",
                    "email": ""
                }
            },
            {
                "body": "Given these were originally added to also solve a problem with using the --path option for Bundler, how will that problem be solved now? Also see https://github.com/rubinius/rubinius/issues/2646\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Probably by doing this https://github.com/rubinius/rubinius/commit/631c05cece56097784e1efc8c914eec878384278.\n",
                "path": "",
                "user": {
                    "name": "YorickPeterse",
                    "email": ""
                }
            },
            {
                "body": "@dbussink the stubs were added to give better error messages more than to fix rubygems and bundler being broken. That case will be addressed with more documentation. I'll ensure that rubygems works for all operations. Bundler will be expected to work if rubysl-bundler meta-gem and bundler gem are installed.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "Hi, will there be a short summary of all the changes on the rubini.us blog? Or at least a CHANGELOG or HISTORY file, with the major features / changes / bugfixes? This would definitely be nice to have!\nThank you.\n",
                "path": "",
                "user": {
                    "name": "clemensg",
                    "email": ""
                }
            },
            {
                "body": "Generally the output from 'git log' is canonical. The addition of ruby-sl has somewhat complicated that but it's a good place to start. \n\nSent from my iPhone\n\n> On Nov 16, 2013, at 10:01 AM, Clemens Gruber notifications@github.com wrote:\n> \n> Hi, will there be a short summary of all the changes on the rubini.us blog? Or at least a CHANGELOG or HISTORY file, with the major features / changes / bugfixes? This would definitely be nice to have!\n> Thank you.\n> \n> —\n> Reply to this email directly or view it on GitHub.\n",
                "path": "",
                "user": {
                    "name": "chuckremes",
                    "email": ""
                }
            },
            {
                "body": "@clemensg I added git log output to the [release](https://github.com/rubinius/rubinius/releases/tag/v2.2.0). I'm happy to consider proposals for generating a Changelog without a lot of effort.\n\nA much more useful inquiry is what you think you need to know. Rubinius uses RubySpec and intends to provide features compatible with MRI. So what questions are you actually hoping to answer by reading a Changelog?\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "Hi, summarizing only the most notable changes would be great. For example: https://www.ruby-lang.org/en/news/2013/09/23/ruby-2-1-0-preview1-is-released/\nThey did not post their svn log output, it's just an (opinionated) selection.\n\nRegarding RubySpec: What about Rubinius specific features? They are not intended to go into RubySpec, right?\n",
                "path": "",
                "user": {
                    "name": "clemensg",
                    "email": ""
                }
            },
            {
                "body": "It's the summarizing that is 1. labor-intensive, and 2. possibly error-prone. This is why I'm inquiring what specifically you hope to know by reading such a thing. Maybe there's a better way to produce it.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "This is not a stdlib, but core feature.\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Yeah, that’s what I thought: https://github.com/rubinius/rubinius/pull/2822/files#r8208091\n\nIs there a better place to list core features that aren’t implemented?\n",
                "path": "",
                "user": {
                    "name": "sferik",
                    "email": ""
                }
            },
            {
                "body": "Doesn't MRI defer this to the regexp library and can't we do the same?\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Looking at the source code I couldn't find any mention of this. Having said that, due to the size of the code I could've overlooked it.\n",
                "path": "",
                "user": {
                    "name": "YorickPeterse",
                    "email": ""
                }
            },
            {
                "body": "Made a typo in the commit, meant to say `GEM_PATH` / `GEM_HOME`.\n",
                "path": "",
                "user": {
                    "name": "YorickPeterse",
                    "email": ""
                }
            },
            {
                "body": "To clarify, the length of `byte_size()` is correct and is expected behaviour. I misunderstood the way the values were laid out in my GDB output.\n",
                "path": "",
                "user": {
                    "name": "YorickPeterse",
                    "email": ""
                }
            },
            {
                "body": "This is actually not the right behavior. This was an accidental change in 2.1.1 and will be reverted in 2.1.2 to match 2.1.0 behavior. I think the old behavior should be considered the 2.1.x behavior, this will only actually change for 2.2.x.\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Got a link to the ticket explaining that? I could not follow the byzantine threads and backport tickets on ruby-lang.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "https://www.ruby-lang.org/en/news/2014/03/10/regression-of-hash-reject-in-ruby-2-1-1/\n\n```\nThis behavior will be reverted to the 2.1.0 behavior in Ruby 2.1.2,\nbut is expected to be the default behavior for Ruby 2.2.0: Feature #9223.\nSo we recommend to fix your code in order to expect this behavior change.\n```\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "Too bad MRI doesn't run RubySpecs.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "This actually breaks on CentOS as you, apparently, can not just require this header. Said header seems to depend on a bunch of other things which it doesn't include itself. I'm looking into this at the moment but I might end up reverting this commit if this check can not be performed reliably during configuration.\n",
                "path": "",
                "user": {
                    "name": "YorickPeterse",
                    "email": ""
                }
            },
            {
                "body": "Ok apparently this requires an extra `#include <stdio.h>` to work. Apparently libreadline is too cool to include this header for us.\n",
                "path": "",
                "user": {
                    "name": "YorickPeterse",
                    "email": ""
                }
            },
            {
                "body": ":+1:\n\nThanks!\n",
                "path": "",
                "user": {
                    "name": "skottler",
                    "email": ""
                }
            },
            {
                "body": "I have add them to the spec.\n\n```\nbin/mspec spec/ruby/core/string/delete_spec.rb \nrubinius 2.2.6.n117 (2.1.0 9dbbaf8f 2014-04-27 JI) [x86_64-linux-gnu]\n....F.........\n\n1)\nString#delete deletes multibyte characters FAILED\nExpected \"我\\x80\\x92\"\n to equal \"我倒\"\n\n           { } in Object#__script__ at spec/ruby/core/string/delete_spec.rb:54\n  BasicObject(Object)#instance_eval at kernel/common/eval.rb:43\n      { } in Enumerable(Array)#all? at kernel/common/enumerable.rb:304\n                         Array#each at kernel/bootstrap/array.rb:66\n             Enumerable(Array)#all? at kernel/common/enumerable.rb:304\n              Integer(Fixnum)#times at kernel/common/integer.rb:196\n                         Array#each at kernel/bootstrap/array.rb:66\n                  Object#__script__ at spec/ruby/core/string/delete_spec.rb:5\n                        Kernel.load at kernel/common/kernel.rb:447\n  BasicObject(Object)#instance_eval at kernel/common/eval.rb:43\n                         Array#each at kernel/bootstrap/array.rb:66\n   Rubinius::CodeLoader#load_script at kernel/delta/code_loader.rb:66\n   Rubinius::CodeLoader.load_script at kernel/delta/code_loader.rb:152\n            Rubinius::Loader#script at kernel/loader.rb:649\n              Rubinius::Loader#main at kernel/loader.rb:818\n\nFinished in 0.095297 seconds\n\n1 file, 14 examples, 49 expectations, 1 failure, 0 errors\n```\n",
                "path": "",
                "user": {
                    "name": "felix125",
                    "email": ""
                }
            },
            {
                "body": "Very similar to how JRuby accesses hidden (native) object internals from Ruby:\n\n``` ruby\nclass Foo; end\nclass Bar; end\nfoo = Foo.new\np foo.class # => Foo\nfoo_ref = JRuby.reference(foo)\nfoo_ref.set_metaclass(Bar)\np foo.class # => Bar\n```\n\nWe use it to implement parts of JRuby in Ruby (more and more).\n\nAlso, a quick note... in JRuby, the fact that most core classes are implemented in Java doesn't prevent JIT optimizations. Ruby and Java (and Scala, and Clojure, ...) can inline and optimize together just fine.\n",
                "path": "",
                "user": {
                    "name": "headius",
                    "email": ""
                }
            },
            {
                "body": "Couldn't find a solution to this months ago, very happy you managed to. :smiley:\n",
                "path": "",
                "user": {
                    "name": "razielgn",
                    "email": ""
                }
            },
            {
                "body": "Is `or` used intentionally here?\n",
                "path": "kernel/common/method.rb",
                "user": {
                    "name": "pointlessone",
                    "email": ""
                }
            },
            {
                "body": "@cheba can you ask a more complete question? IOW, are you asking why `or` vs `||`, or `or` vs `and`, etc.\n",
                "path": "kernel/common/method.rb",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "`or` vs `||`.\n\nI was under impression that in conditionals using `or` and `and` is not advised.\n",
                "path": "kernel/common/method.rb",
                "user": {
                    "name": "pointlessone",
                    "email": ""
                }
            },
            {
                "body": "@chena, yes we did discuss `or` vs `||`. In this circumstance binding precedence did not matter and `or` read naturally. \"Never use or/and\" is FUD. Just remember to be careful about binding precedence. Or/and are not drop-in replacements for ||/&&, which is why some advise against the former entirely.\n",
                "path": "kernel/common/method.rb",
                "user": {
                    "name": "jbr",
                    "email": ""
                }
            },
            {
                "body": "@cheba the style in Rubinius is to use and/or unless precedence rules and simplicity advise using &&/||. The word versions are simply more language like.\n",
                "path": "kernel/common/method.rb",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "@jbr @brixen I'm well aware of the differences between them. I didn't know about Rubinius style. In the community it seems `&&`/`||` are used in conditionals and `and`/`or` are used for flow control.\n\nWhere can  read more about Rubinius style?\n",
                "path": "kernel/common/method.rb",
                "user": {
                    "name": "pointlessone",
                    "email": ""
                }
            },
            {
                "body": "@cheba -> http://rubini.us/doc/en/contributing/style-guide/\n",
                "path": "kernel/common/method.rb",
                "user": {
                    "name": "goyox86",
                    "email": ""
                }
            },
            {
                "body": "@cheba Or any of the core classes like Array -> https://github.com/rubinius/rubinius/blob/master/kernel/common/array.rb :)\n",
                "path": "kernel/common/method.rb",
                "user": {
                    "name": "goyox86",
                    "email": ""
                }
            },
            {
                "body": "@goyox86 Thanks. Now I feel terrible as it's laying in the plain sight before me.\n",
                "path": "kernel/common/method.rb",
                "user": {
                    "name": "pointlessone",
                    "email": ""
                }
            },
            {
                "body": "@cheba I don't understand this\n\n> In the community it seems &&/|| are used in conditionals and and/or are used for flow control.\n\nThe usage you're questioning _is in_ flow control and I'm confused what you mean by \"conditionals\" if not flow control.\n\nThe style guide is pretty light and somewhat informal but there's quite a bit of Ruby code in the core classes, so when in doubt, look at the code and ask in IRC\n",
                "path": "kernel/common/method.rb",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "@brixen I'm pretty sure the flow control usage @cheba is referring to is `left = right or raise` / `left = right and assignment_was_truthy` as in http://devblog.avdi.org/2010/08/02/using-and-and-or-in-ruby/, so by that definition this is _in_ flow control, but is not a flow control expression itself because we're not relying on short-circuiting boolean operations for conditional execution.\n",
                "path": "kernel/common/method.rb",
                "user": {
                    "name": "jbr",
                    "email": ""
                }
            },
            {
                "body": "When adding the BasicObject Guard here #3070 specific code in https://github.com/rubinius/rubinius/blob/c41a3cd6b61ebb185f7fab346072291c9be89b85/kernel/common/type.rb#L26-L30 can be removed. :)\n",
                "path": "kernel/common/kernel.rb",
                "user": {
                    "name": "tak1n",
                    "email": ""
                }
            },
            {
                "body": "Or should we let this there for \"Selfmade Objects\" which doesn't respond to inspect?\n",
                "path": "kernel/common/kernel.rb",
                "user": {
                    "name": "tak1n",
                    "email": ""
                }
            },
            {
                "body": "In my opinion we should remove it and only protect against BasicObject\nOther Objects from classes which doesn't implement needed methods are not controlled by us and therefore should be designed proper by the user itself and furthermore I think it would be a tremendous amount of work to ensure an object implements all needed methods and catch these errors\n",
                "path": "kernel/common/kernel.rb",
                "user": {
                    "name": "tak1n",
                    "email": ""
                }
            },
            {
                "body": "I would leave it in just in case. The above guard only handles BasicObject, it however doesn't stop people from doing something like this:\n\n``` ruby\nclass MyClass\n  undef :inspect\nend\n\nFloat(MyClass.new)\n```\n",
                "path": "kernel/common/kernel.rb",
                "user": {
                    "name": "YorickPeterse",
                    "email": ""
                }
            },
            {
                "body": "Okay :+1:\n",
                "path": "kernel/common/kernel.rb",
                "user": {
                    "name": "tak1n",
                    "email": ""
                }
            },
            {
                "body": "Consider this example:\n\n``` ruby\nclass MyClass\n  undef :kind_of?\nend\n\nString(MyClass.new)\n```\n\nThis blows up in a `NoMethodError: undefined method `kind_of?' on an instance of MyClass.`\n\nNow we have inconsistence in the behaviour of different Kernel.TYPE methods when removing different \"base\" methods. In general we should consider to catch any NoMethodError in the Kernel.TYPE methods and reraise a TypeError.\n",
                "path": "kernel/common/kernel.rb",
                "user": {
                    "name": "tak1n",
                    "email": ""
                }
            },
            {
                "body": "Good point. The above case works on MRI but doesn't on Rbx since it uses `kind_of?` and the likes. This is also why I opened a PR first instead of merging things right away. There are a large number of methods we have to check for in these type coercion methods given we want to handle things the same as MRI. There are basically two paths we can take:\n1. Add guards for all the methods we require or use `Rubinius::Type.object_kind_of?` and the likes instead of `Object#kind_of?`\n2. Tell people not to remove core methods such as `kind_of?`\n\nWith the exception of BasicObject I'm much more a fan of the last option. Going for option 1 is a game of cat and mouse that's only really worth it if there's simply no other option.\n",
                "path": "kernel/common/kernel.rb",
                "user": {
                    "name": "YorickPeterse",
                    "email": ""
                }
            },
            {
                "body": "Also prefering option 2 :+1:\nAnother case of https://blog.engineyard.com/2010/rubinius-wants-to-help-you-make-ruby-better :smile:\n",
                "path": "kernel/common/kernel.rb",
                "user": {
                    "name": "tak1n",
                    "email": ""
                }
            },
            {
                "body": "@rpag The Rubinius namespace itself is safe, thus I don't think we should add guards for every possible case there. However, methods such as `Kernel.Integer` are unsafe in that we have no control over what people pass it. In this particular case we have to add guards for BasicObject as MRI raises a dedicated TypeError for those (whereas we raised a NoMethodError as a result of not having a guard).\n",
                "path": "kernel/common/kernel.rb",
                "user": {
                    "name": "YorickPeterse",
                    "email": ""
                }
            },
            {
                "body": "Do the JIT helpers also need these fixes?\n",
                "path": "",
                "user": {
                    "name": "dbussink",
                    "email": ""
                }
            },
            {
                "body": "@dbussink of course, it's a WIP. ;)\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "Did you run this spec? `.should=` shouldn't work.\n\nYou need to be using `.should ==` (or in this case, I would say `.should equal`).  I would also suggest some other object than a number - as these are kind of a special case for testing equality.\n\nIncidentally, I already have a PR pending at rubyspec for this test: \nhttps://github.com/rubyspec/rubyspec/pull/287\n",
                "path": "spec/ruby/core/kernel/itself_spec.rb",
                "user": {
                    "name": "jemc",
                    "email": ""
                }
            },
            {
                "body": "Yep, right.\nCould have used a fixture class, but thought nah just use an Integer..\nAnd the .should == error is kinda embarrassing ^^\n\nShould I fix the spec or undo this commit and awaiting approval for your rubyspec pr?\n",
                "path": "spec/ruby/core/kernel/itself_spec.rb",
                "user": {
                    "name": "tak1n",
                    "email": ""
                }
            },
            {
                "body": "Just fixing the spec is fine since it's already pushed.\n",
                "path": "spec/ruby/core/kernel/itself_spec.rb",
                "user": {
                    "name": "YorickPeterse",
                    "email": ""
                }
            },
            {
                "body": "Fuck, I'm a dumbass. This is supposed to be `guard.status() != ....`.\n",
                "path": "vm/console.cpp",
                "user": {
                    "name": "YorickPeterse",
                    "email": ""
                }
            },
            {
                "body": "This causes #3142\nWe should check if Complex contains only a real part and if not raise RangeError\n",
                "path": "kernel/bootstrap/type.rb",
                "user": {
                    "name": "tak1n",
                    "email": ""
                }
            },
            {
                "body": "Can this not go into RubySpec, rather than just Rubinius? Or do all specs go here first and then merged into RubySpec later?\n",
                "path": "",
                "user": {
                    "name": "chrisseaton",
                    "email": ""
                }
            },
            {
                "body": "@chrisseaton it can make its way into RubySpec later, when we sync.\n",
                "path": "",
                "user": {
                    "name": "jc00ke",
                    "email": ""
                }
            },
            {
                "body": "@brixen did you intend to commit this?\n",
                "path": "vm/builtin/stat.cpp",
                "user": {
                    "name": "ileitch",
                    "email": ""
                }
            },
            {
                "body": "@ileitch heh, not exactly. Thanks. :)\n",
                "path": "vm/builtin/stat.cpp",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": ":heart_eyes_cat: the commit message made my day.  Thank you :heart:\n",
                "path": "",
                "user": {
                    "name": "meatballhat",
                    "email": ""
                }
            },
            {
                "body": "It was totally ruining my day, so I'm glad it made yours. :) I don't understand why we set up systems where you have permission to do anything you want but you have to use a special command to do so.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "preach on!\n",
                "path": "",
                "user": {
                    "name": "meatballhat",
                    "email": ""
                }
            },
            {
                "body": ":heart: \n",
                "path": "",
                "user": {
                    "name": "rkh",
                    "email": ""
                }
            },
            {
                "body": "@rkh :heart: for filing the issue. It's a really nasty edge case and the JIT currently doesn't compile this sort of method, something I'm working on now.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "Thank you very much! :heart:\n",
                "path": "",
                "user": {
                    "name": "robin850",
                    "email": ""
                }
            },
            {
                "body": "Nifty, this should help with the JIT spec apparatus.\n",
                "path": "",
                "user": {
                    "name": "jemc",
                    "email": ""
                }
            },
            {
                "body": "Indeed, it's already in use. :)\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "@brixen Downgrade? Was this intended?\n",
                "path": "gems_list.txt",
                "user": {
                    "name": "ileitch",
                    "email": ""
                }
            },
            {
                "body": "Thanks. No, it wasn't. Bundler gets picked up from the installed version. I'll add Bundler to Gemfile.installed, which should fix this.\n",
                "path": "gems_list.txt",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "Cool.\nI'm new to the codebase - is the check_async not necessary for errors? (I'm not really sure what it's for.)\n",
                "path": "",
                "user": {
                    "name": "Pugio",
                    "email": ""
                }
            },
            {
                "body": "No, it's not necessary to handle the interrupted reads here and this case is extremely rare. The signals will get processed eventually elsewhere.\n\nWhat were you doing to \"rapidly resize\" your window anyway?\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "I was just clicking and dragging. To test it I moved my mouse around the screen quickly and erratically, but you could trigger the exception with a fairly normal click-on-edge-and-drag to resize. In my report, \"rapid\" more meant \"not really slowly\".\n",
                "path": "",
                "user": {
                    "name": "Pugio",
                    "email": ""
                }
            },
            {
                "body": "@Pugio ah, ok. Well, it's a pretty interesting edge-case I hadn't considered, so thanks for finding it!\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "@brixen This defines X on Object, which I believe is unintended here.\nIt notably makes https://github.com/rubinius/rubinius/blob/master/spec/ruby/core/float/shared/equal.rb fail if that Float spec is run after this language lambda spec.\nThe Float spec should use Class.new with block, but this one (and below) should not define X on Object either.\n",
                "path": "spec/ruby/language/lambda_spec.rb",
                "user": {
                    "name": "eregon",
                    "email": ""
                }
            },
            {
                "body": "@eregon ah, good catch. So, both these specs need to be fixed. Use proper constant scoping in this spec and the Float one should probably use a mock (unless I'm missing something), eg:\n\n``` ruby\nobj = mock(\"object with #==\")\nobj.should_receive(:==).and_return(2.0)\n...\n```\n",
                "path": "spec/ruby/language/lambda_spec.rb",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "Why the explicit `return`?\n",
                "path": "configure",
                "user": {
                    "name": "jc00ke",
                    "email": ""
                }
            },
            {
                "body": "@brixen\nThis new implementation is not safe for objects that have no `respond_to_missing?` method (like most Myco objects).  It's not good for Rubinius as a language platform to assume that the only objects that don't have `respond_to_missing?` are `BasicObject`s (other languages might have object hierarchies that don't stem from this class).\n\nI'd suggest amending this `if`/`else` tree to switch based on the result of `if(dis(missing).resolve(...))` instead of `if(instance_of<BasicObject>(self))`.\n",
                "path": "vm/builtin/object.cpp",
                "user": {
                    "name": "jemc",
                    "email": ""
                }
            },
            {
                "body": "@jemc as long as it passes the specs, commit it. :) I agree that we should avoid Ruby assumptions to the greatest extent possible (and we'll be able to do so more soon). Myco is serving a good role in the Rubinius ecosystem and is appreciated.\n",
                "path": "vm/builtin/object.cpp",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "@jemc \nNot sure if you saw this, but I think something in here also breaks `SimpleDelegator`\nSee https://github.com/rubinius/rubinius/issues/3451\n",
                "path": "vm/builtin/object.cpp",
                "user": {
                    "name": "tak1n",
                    "email": ""
                }
            },
            {
                "body": "Thanks, @tak1n - it looks like the fix I proposed will also fix the regression in `SimpleDelegator` caused by this commit (even though it's the opposite of the case I was talking about - a `BasicObject` that _does_ implement `respond_to_missing?`).  I'll work on this tonight and add a spec that should keep this both cases safe.\n",
                "path": "vm/builtin/object.cpp",
                "user": {
                    "name": "jemc",
                    "email": ""
                }
            },
            {
                "body": "Awesome :)\n",
                "path": "vm/builtin/object.cpp",
                "user": {
                    "name": "tak1n",
                    "email": ""
                }
            },
            {
                "body": "I guess `ThreadGroup#add` is not thread safe itself? Should I use a mutex to protect it while adding another thread to the group manually?\n\nThanks!\n\nReference: https://travis-ci.org/godfat/pork/jobs/71427711\n",
                "path": "",
                "user": {
                    "name": "godfat",
                    "email": ""
                }
            },
            {
                "body": "@godfat hm, this is an interesting case. Could you please open an issue so we can discuss it. While ThreadGroup is simply using an Array underneath (hence the error you saw) so by itself, it's not thread-safe. However, given the facility of ThreadGroup, I'm inclined to make the operations synchronized on Rubinius.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "Filed. Thanks for looking into it! https://github.com/rubinius/rubinius/issues/3467\n",
                "path": "",
                "user": {
                    "name": "godfat",
                    "email": ""
                }
            },
            {
                "body": "Should this not come _after_ the `#ifdef RBX_ALLOC_TRACKING` below, or does that not matter?\n",
                "path": "vm/instructions.def",
                "user": {
                    "name": "YorickPeterse",
                    "email": ""
                }
            },
            {
                "body": "It doesn't matter because `dup` is still a reference to the same object. I kept it with the code above it because I want to remove all the current allocation tracking machinery.\n",
                "path": "vm/instructions.def",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "I'd go with `*cannot*` here. Reads slightly better.\n",
                "path": "CONTRIBUTING.md",
                "user": {
                    "name": "jc00ke",
                    "email": ""
                }
            },
            {
                "body": "`if the issue...`\n",
                "path": "CONTRIBUTING.md",
                "user": {
                    "name": "jc00ke",
                    "email": ""
                }
            },
            {
                "body": ":+1: \n",
                "path": "CONTRIBUTING.md",
                "user": {
                    "name": "tmornini",
                    "email": ""
                }
            },
            {
                "body": ":+1: \n",
                "path": "CONTRIBUTING.md",
                "user": {
                    "name": "tmornini",
                    "email": ""
                }
            },
            {
                "body": "I think this is introducing 8 failures for me, when running `bin/mspec ci` on 2.2 branch.\n\nExample failures:\n\n```\nRubinius::Type.infect is a no-op for false ERROR\nRuntimeError: can't modify frozen instance of FalseClass\n\nRubinius::Type.infect is a no-op for true ERROR\nRuntimeError: can't modify frozen instance of TrueClass\n\nRubinius::Type.infect is a no-op for nil ERROR\nRuntimeError: can't modify frozen instance of NilClass\n```\n",
                "path": "",
                "user": {
                    "name": "tak1n",
                    "email": ""
                }
            },
            {
                "body": "@tak1n Please open an issue for that, commit comments are easy to lose track of.\n",
                "path": "",
                "user": {
                    "name": "YorickPeterse",
                    "email": ""
                }
            },
            {
                "body": "Seems this commit messed up the indentation in some parts.\n",
                "path": "",
                "user": {
                    "name": "YorickPeterse",
                    "email": ""
                }
            },
            {
                "body": "That was the reformatting that the travis gem did. I decided not to fight it since I expect it will 1. be consistent across changes made by the travis gem, and 2. there will be further automated changes by the travis gem.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "What's the ANSI escape doing in the commit subject?\n",
                "path": "",
                "user": {
                    "name": "heftig",
                    "email": ""
                }
            },
            {
                "body": "@heftig I think that's because I have colours enabled when running `git log`.\n",
                "path": "",
                "user": {
                    "name": "YorickPeterse",
                    "email": ""
                }
            },
            {
                "body": "Fixed in 114253414b4f29a07841163a9b2a515309bb2e53\n",
                "path": "",
                "user": {
                    "name": "YorickPeterse",
                    "email": ""
                }
            },
            {
                "body": "While I'm no lawyer I think it may be better to use \"Rubinius, Inc\" here instead of just \"the Rubinius project\" as the former is a more well defined entity. I suspect \"the Rubinius project\" may be interpreted as \"everybody who ever worked on it\", and I'm not sure if we want to hand out copyrights to _everybody_.\n\nAlternatively we'd have to define what \"the Rubinius project\" actually means.\n",
                "path": "LICENSE",
                "user": {
                    "name": "YorickPeterse",
                    "email": ""
                }
            },
            {
                "body": "Hmm, yes, for the time being, I agree. Ultimately, Rubinius itself may have a legal distinction independent of Rubinius, Inc, but that hasn't been formulated yet.\n",
                "path": "LICENSE",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "Not a lawyer either, but I believe (perhaps falsely) that:\n1. The language here doesn't \"hand out copyrights to _everybody_\".  In fact, because there was no copyright assignment as part of the contribution process, all of the contributors do in fact hold some copyright _already_, no matter what language you decide to use here.\n2. Because copyright is held by all contributors, you need consent from all contributors to change the license.  For whatever it's worth, I give my consent to change the license to the MPLv2 (and I think it's a great license for a project like this), but traditionally I've seen this handled by making an issue ticket that pings all of the contributors to get their consent.  This can take some time, but it's worth covering all the bases here, and I think it would be appropriate.\n",
                "path": "LICENSE",
                "user": {
                    "name": "jemc",
                    "email": ""
                }
            },
            {
                "body": "Also, not a lawyer, but my understanding is 1. contributors hold their copyright to their specific work, 2. notwithstanding any individual's copyright, the combined work is also copyrightable, and if anything, that's what the notice refers to.\n\nAny particular contributor who disagrees with MPL-2.0 can request their specific, verifiable contributions be removed and we'll rewrite those parts.\n",
                "path": "LICENSE",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "Still not a lawyer, but okay by me. :+1: \n",
                "path": "LICENSE",
                "user": {
                    "name": "jemc",
                    "email": ""
                }
            },
            {
                "body": "Apologies for joining this conversation. There are a few issues with this change which put Rubinius into a dangerous state, legally speaking. You have exposed yourself to potential liability. IANAL so this is based on some decades of copyright experience.\n\nRelicensing to MPLv2 is a fine idea per-se, yet you need to go about it the right way. Removing the BSD text and replacing it with MPLv2 text is not the right way.\n\nLet me break this down:\n- You have no contributor agreement, so every patch is owned by its contributor. You can argue that trivial patches are excluded from this. Probably not worth it though.\n- The original patches were made to a BSD project and we can assume they were licensed under BSD. (There is a legal gray area here since patches on a BSD/MIT/X11 project are not automatically licensed the same way. Still, it is a reasonable assumption to make.)\n- It's worth noting that one does not \"hand out copyrights.\" The author of a patch owns the copyright on that patch. By submitting it they (one assumes) grant the project a license to use and distribute the patch. One advantage of MPLv2 and other share-alike licenses is they remove this assumption.\n- To fully re-license the project you MUST contact every single contributor, and get their approval. In effect they re-license their contributions, allowing you to re-license the whole project. We've done this in cases. It can be a lot of work (months) if you have many contributors. During that process you must either freeze new patches, or ensure they are licensed under both old and new license.\n- You can absolutely NOT argue that any contributor who \"disagrees\" must notify you. This is not how it works. Copyright exists on all creative works by default, under international law, and expires only after the full period. If you distribute a work without valid license (as you are doing currently), you are violating copyright law.\n- You can avoid that work by wrapping the BSD license in an MPLv2 license. This means to create a derived product that has the MPLv2 license, and which includes BSD code. This is how any proprietary product includes BSD code.\n- In that case, you MUST continue to respect the original BSD license, otherwise your derived work is illegal and you MAY NOT distribute it. (If you do, any original contributor can sue you, if they cared, and probably win.)\n- The BSD license explicitly forbids removal of the copyright statements and the license text. You have removed these (from LICENSE text, as they were not in the source files). This is not legally safe.\n- The simplest solution is to leave the original copyright statements, and the BSD text, in LICENSE, then add the MPLv2 statement and other copyrights ahead of that.\n- Note that copyrights can only be claimed by individuals or legal entities. Projects cannot claim copyrights (or any other property for that matter) since they will have no standing in a court.\n",
                "path": "LICENSE",
                "user": {
                    "name": "hintjens",
                    "email": ""
                }
            },
            {
                "body": "@hintjens thanks for weighing in, your extensive experience is much appreciated. It wasn't clear to me that the BSD text needed to be retained. I'll re-add it.\n",
                "path": "LICENSE",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "@brixen no problem. Good luck.\n",
                "path": "LICENSE",
                "user": {
                    "name": "hintjens",
                    "email": ""
                }
            },
            {
                "body": "@brixen For good measurement we should probably Email all contributors and ask them to reply to an issue whether they're OK with this or not. I can set this up if needed. For future references it may be wiser to discuss these things first before changing them (though I have nothing against the MPL 2.0).\n",
                "path": "LICENSE",
                "user": {
                    "name": "YorickPeterse",
                    "email": ""
                }
            },
            {
                "body": "@hintjens the main thing I wanted to clarify is that going forward, new contributions are licensed under MPL-2.0. I didn't want there to be confusion about whether those were BSD or MPL-2.0. Unsure whether there's an effective way to do that.\n\nMany thanks for all your extensive work on fixing the horribly broken copyright system.\n",
                "path": "LICENSE",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "@hintjens er, _trying to fix_; it's hopeless. :)\n",
                "path": "LICENSE",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "@YorickPeterse we're not changing the license for any existing contribution, that wasn't the intent. Prior contributions don't dictate the license for future contributions. Any prior contributions continue to be licensed exactly as they were.\n",
                "path": "LICENSE",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "@brixen In that case the license file should explicitly state that the BSD license applies to old code only, right now it looks like we're dual licensing both past and future changes.\n",
                "path": "LICENSE",
                "user": {
                    "name": "YorickPeterse",
                    "email": ""
                }
            },
            {
                "body": "@YorickPeterse that's what [this](https://github.com/rubinius/rubinius/blob/master/LICENSE#L1-L3) and [this](https://github.com/rubinius/rubinius/blob/master/LICENSE#L366-L369) are intended to say. The README files are also explicit.\n\nFeel free to update with clarifying language if you can.\n",
                "path": "LICENSE",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "I'll add an extra note to the LICENSE, I feel the current setup is too ambiguous.\n",
                "path": "LICENSE",
                "user": {
                    "name": "YorickPeterse",
                    "email": ""
                }
            },
            {
                "body": "This looks good to me, with some comments:\n- Perhaps LICENSE.BSD is a better name so that \"ls LICENSE*\" works.\n- The restriction on secondary licensing is unusual usage of MPLv2 and may be problematic. It in effect it prevents mixing the MPLv2 code with other codebases. Including commercial code. Unless you have specific reasons for doing this, I'd recommend against it. \n- Further, according to https://www.mozilla.org/en-US/MPL/2.0/FAQ/, to enable the restriction on secondary licensing you should specify it in each source file. Simply having it present does not \"attach\" it.\n",
                "path": "",
                "user": {
                    "name": "hintjens",
                    "email": ""
                }
            },
            {
                "body": "> The restriction on secondary licensing is unusual usage of MPLv2 and may be problematic. It in effect it prevents mixing the MPLv2 code with other codebases. Including commercial code. Unless you have specific reasons for doing this, I'd recommend against it.\n\nI'm not entirely sure what you mean, but doesn't the MPL 2.0 explicitly allow mixing with BSD? From the MPL 2.0 FAQ:\n\n> Q13: May I combine MPL-licensed code and BSD-licensed code in the same executable program? What about Apache?\n> \n> Yes to both. Mozilla currently does this with BSD-licensed code. For example, libvpx, which is used in Firefox to decode WebM video, is under a BSD license.\n\nThe \"Secondary licenses\" referred to in the MPL 2.0 seem to refer to the various (L)GPL flavours. I'm not sure how that would apply when using the BSD license instead.\n",
                "path": "",
                "user": {
                    "name": "YorickPeterse",
                    "email": ""
                }
            },
            {
                "body": "Ah, you're right, sorry. It does mean various L(GPL) flavors.\n\nThe details are in section 3.3. It is confusing. The default model is that the software is compatible with secondary licenses. This is what you generally want. It means if Rubinius code is used in a GPL project, the user can re-dtsirbuted that under MPLv2 again. If you state (in the source file, not in a separate license) that the source file is not compatible with secondary licenses, this right is lost. That's my reading of it.\n\nIn any case this text only works when embedded in a source. (Otherwise it's lost when you copy individual source files.)\n\nI'd recommend removing it and using the vanilla MPLv2.\n",
                "path": "",
                "user": {
                    "name": "hintjens",
                    "email": ""
                }
            },
            {
                "body": "@hintjens Ah OK. I also agree it's a better choice to move to _just_ the MPL 2.0, for both past and future contributions. I'd rather go through the pain of getting everybody to reply than having to deal with a confusing license that may one day bite us in the butt.\n",
                "path": "",
                "user": {
                    "name": "YorickPeterse",
                    "email": ""
                }
            },
            {
                "body": "Yes, custom licenses tend to be troublesome. We did this to the LGPL, for ZeroMQ, modifying it to get much the same as MPLv2 (which did not exist at the time). It's always been a source of confusion.\n\nA simple way is to open an issue with a todo list of all contributors' names, and get everyone to comment on the issue. Here's how we did this for Zyre: https://github.com/zeromq/zyre/issues/327. You can then pester people by email out of band.\n",
                "path": "",
                "user": {
                    "name": "hintjens",
                    "email": ""
                }
            },
            {
                "body": "@hintjens Yeah, I was thinking about something along those lines. Thanks for the info.\n",
                "path": "",
                "user": {
                    "name": "YorickPeterse",
                    "email": ""
                }
            },
            {
                "body": "@hintjens thanks again for all the help. Much appreciated. And thanks @YorickPeterse for leading the effort.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "How did I miss this happening?  Why did it happen?\n\nLicense incompatibilities just ruined my day.\n",
                "path": "",
                "user": {
                    "name": "apotheon",
                    "email": ""
                }
            },
            {
                "body": "@apotheon could you elaborate on what you think is incompatible with what?\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "disclaimer: I am not a lawyer.  This is not legal advice.  If you need legal advice, seek the counsel of a legal professional.  I disclaim all liability for actions taken in light of my comments, offered solely as opinion.\n\n(As Mr. Bumble of _Oliver Twist_ said, \"the law is a ass\": any time I discuss my understanding of the law in any depth, I feel compelled to disclaim my statements for my own protection.)\n\nThere are many ways in which (even weakly) copyleft licenses are incompatible with other licenses.  This can get extremely dangerous especially when dealing with a programming language like Ruby where, in the course of perfectly reasonable (okay, some people disagree it's reasonable, but I think most of them are using Java or C++) work, one might need to make alterations to existing, open classes.  The law has not, to my knowledge, been tested on such things, and the supposed \"per-file\" scope of the MPL may not conceptually excuse such modification of the original work, so that activities like monkeypatching or even subclassing (either pushing changes up the chain or pulling them down) may result in an effective violation if the changes themselves must, for some reason, be used under terms incompatible with the MPL's terms.\n\nI have to ask . . . why did you choose MPL 2.0 as the new license?  What exactly was the licensing need that prompted this change?  Was it the enforced source distribution?\n",
                "path": "",
                "user": {
                    "name": "apotheon",
                    "email": ""
                }
            },
            {
                "body": "@apotheon I suggest reading https://github.com/rubinius/rubinius/issues/3550.\n",
                "path": "",
                "user": {
                    "name": "YorickPeterse",
                    "email": ""
                }
            },
            {
                "body": "If that's a reference to an explanation of the reason for the change, it is somewhat vague, apart from a statement about patents and a statement about \"who owns what\".  The \"and so forth\" means nothing to me.\n\nRather than clutter up the contributor survey there, I'll share my thoughts here:\n1. There are more widely compatible licenses than the MPL that deal more explicitly with patents than the Revised BSD License.\n2. MPL itself does not provide any guidance on \"who owns what\" beyond the absolute necessities of the license's restrictions, so far as I recall (or notice on skimming the license text once more).  What it does do is take a little time to explain how the MPL interacts with a few other licenses, to carve out some level of compatibility with a few, very specific licenses that are, themselves, broadly incompatible with other licenses.  This is not surprising, but offers no benefit in and of itself over the Revised BSD License, which does not have the same compatibility problems, and thus does not need that explicit treatment.\n\nApart from that, I am not sure why you recommend reading #3550.  As you can see, I am not picked out as part of the list of GitHub contributors.  I think I did contribute to some documentation at one point, but I'm about as close to certain as I can be (without some serious research) that it has been obsolesced in the years since, so you should not need my permission for any relicensing as a contributor.  A recent renewed interest in Rubinius might have prompted some contributions, but I have not made any yet, and am now unlikely to do so given the constraints of the new project license, so no worries about me, as a contributor, having any legal standing on the matter of relicensing.\n",
                "path": "",
                "user": {
                    "name": "apotheon",
                    "email": ""
                }
            },
            {
                "body": "@apotheon You are not on the list as the GitHub API did not return your username in the list of contributors. \n\nThe MPL 2.0 is a perfectly valid/fine license, probably better than most out there. If you have any specific concerns please address those either in Gitter or via an issue, it's hard to keep track of them via commit comments. So far I'm not seeing any solid arguments, other than vague statements about compatibility (which isn't even relevant since we're fully swapping over the license with permission of past contributors).\n",
                "path": "",
                "user": {
                    "name": "YorickPeterse",
                    "email": ""
                }
            },
            {
                "body": "@apotheon you may find [this post](http://www.gatsbymedia.net/development-articles/why-we-use-the-mpl) interesting. There are also other resources available. From my understanding, MPL-2.0 provides better protection against patent trolls and is a reasonable license. Again, IANAL and we're not having a legal debate here. More importantly, we're not debating the license. If you are a contributor, we've asked that you consent to the new license. Anyone is free to contribute or not based on their understanding of the license.\n\nThanks for taking the time to express your concern.\n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "It's not a big deal.  I'm just one disappointed guy.  While many consider it a \"perfectly valid/fine license\", it does have some license incompatibility issues, and that's a big chunk of the reason I'm disappointed -- but that's surely of no concern to the larger project or community.\n\n> I'm not seeing any solid arguments\n\nI'm not making arguments.  I'm explaining why I'm disappointed by the news, because someone responded to my comment and asked.\n\n> vague statements about compatibility (which isn't even relevant since we're fully swapping over the license with permission of past contributors)\n\nThey are not vague; I gave some rather specific explanation.  They're not a problem for the project relicensing per se: they're a problem for what would have been my potential use of the software, and may affect other users, in possible future edge cases (such as, perhaps, certain techniques in language design that might aim to take advantage of the unique design of Rubinius itself).\n\nPlease don't take this as some kind of campaign to change your mind or make you look bad.  I made a somewhat spontaneous noise of dismay, and replied as fully and politely as I could to requests for clarification.  That is all.\n",
                "path": "",
                "user": {
                    "name": "apotheon",
                    "email": ""
                }
            },
            {
                "body": "I'm not 100% sure if this is safe. I messed around with something similar myself (though I think I used `rb_id2name` or something) and it kept segfaulting.\n",
                "path": "vm/capi/class.cpp",
                "user": {
                    "name": "YorickPeterse",
                    "email": ""
                }
            },
            {
                "body": "This should be safe right now because we pass through `Symbol*` directly without a Handle, see the definition for [ID2SYM](https://github.com/rubinius/rubinius/blob/master/vm/include/capi/ruby/ruby.h#L638) (and the definition for SYM2ID is basically the same).\n",
                "path": "vm/capi/class.cpp",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "Sad you had to revert this commit but yeah, Bundler was completely broken with the previous commit. Thanks for working on that anyway, that's not an easy one ! :heart:\n",
                "path": "",
                "user": {
                    "name": "robin850",
                    "email": ""
                }
            },
            {
                "body": "No problem :smile: , I'll try working on it again in a couple of days.\n",
                "path": "",
                "user": {
                    "name": "ahmadsherif",
                    "email": ""
                }
            },
            {
                "body": "Awesome ! :+1:\n",
                "path": "",
                "user": {
                    "name": "robin850",
                    "email": ""
                }
            },
            {
                "body": "@evanphx You need newlines.\n\n![2016-07-05_13-51-07](https://cloud.githubusercontent.com/assets/14947/16594246/882f5912-42b7-11e6-8a0e-97c3bd34b5b0.png)\n",
                "path": "lib/baker_gc.rb",
                "user": {
                    "name": "ernie",
                    "email": ""
                }
            },
            {
                "body": "This is the type of bike shedding I expect from the ruby community.\n",
                "path": "lib/baker_gc.rb",
                "user": {
                    "name": "blowmage",
                    "email": ""
                }
            },
            {
                "body": ":heart: @blowmage \n",
                "path": "lib/baker_gc.rb",
                "user": {
                    "name": "ernie",
                    "email": ""
                }
            },
            {
                "body": "![bitmoji](https://render.bitstrips.com/v2/cpanel/9998079-118866928_5-s1-v1.png?palette=1&width=246)\n",
                "path": "",
                "user": {
                    "name": "jc00ke",
                    "email": ""
                }
            },
            {
                "body": "@jc00ke ❤️ \n",
                "path": "",
                "user": {
                    "name": "brixen",
                    "email": ""
                }
            },
            {
                "body": "Wow, great find!\n",
                "path": "",
                "user": {
                    "name": "chuckremes",
                    "email": ""
                }
            }
        ],
        "issue": [
            {
                "state": "open",
                "title": "Error loading glib2 gem - works under MRI",
                "body": "## Problem\n\n```\nCould not open library ~/.gem/rbx/2.3.1/gems/glib2-3.0.8/lib/glib2.bundle - dlopen(~/.gem/rbx/2.3.1/gems/glib2-3.0.8/lib/glib2.bundle, 10): Symbol not found: _CONST_ID (LoadError::InvalidExtensionError)\n```\n## How to Reproduce\n\n```\ngem install glib2\nruby -e \"require 'glib2'\"\n```\n## Configuration Details\n- Installed using ruby-install\n- Output of `rbx -v`: rubinius 3.62 (2.3.1 65e96fba 2016-10-14 3.9.0) [x86_64-darwin16.0.0]\n- Output of `uname -a`: Darwin AikiBook 16.0.0 Darwin Kernel Version 16.0.0: Mon Aug 29 17:56:20 PDT 2016; root:xnu-3789.1.32~3/RELEASE_X86_64 x86_64\n## Stack Trace\n\nhttps://gist.github.com/harukizaemon/51ae0d1112093eceac0191faf89e23fb\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Error is being re-raised after being handled, sort of",
                "body": "## Problem\n\nFiber.yield -> error raised -> catch error -> \\\nFiber.resume -> re-raise error -> handle error -> Fiber ends\nFiber that yielded has the error raised on it\n\nSomething like that anyway. I have it captured in a test case.\n## How to Reproduce\n\nProbably easiest to do on ubuntu linux\n1. Clone: https://github.com/cotag/libcouchbase/ ([commit](https://github.com/cotag/libcouchbase/tree/28993c306c72c97246bf63fed920a16d2ebedfe2))\n2. Run the pre-script steps in `.travis.yml`\n3. `rspec ./spec/bucket_spec.rb:62` and `rspec ./spec/bucket_spec.rb:101` (the two tests that catch errors)\n\nIf I modify bucket_spec.rb:62 to be:\n\n``` ruby\n        it \"should retry when performing a CAS operation\" do\n            @reactor.run { |reactor|\n                begin\n                    @bucket.set('somekey', 'woop woop')\n                    result = @bucket.cas('somekey', retry: 2) do |current|\n                        @log << current\n                        # This ensures the operation fails\n                        @bucket.set('somekey', 'woop woop1')\n                        \"current #{current}\"\n                    end\n                    @log << result.value\n                rescue Libcouchbase::Error::KeyExists\n                    # Error handled here\n                    @log << :error\n                end\n                @reactor.stop # Added, this shouldn't be required either\n            }\n            # Error re-raised here - if you catch it, like above, and add @log << :error\n            # then @log == ['woop woop', :error, :error]\n            expect(@log).to eq(['woop woop', 'woop woop1', 'woop woop1', :error])\n        end\n```\n\nThis is where the error is originally handled: https://github.com/cotag/libcouchbase/blob/28993c306c72c97246bf63fed920a16d2ebedfe2/lib/libcouchbase/bucket.rb#L246\n\nThat code sort of functions properly too, however it also seems to suffer from error replay stemming from: https://github.com/cotag/libuv/blob/f4d5d2467452f3c9d157a5d25ab3214e26a15d86/lib/libuv/coroutines.rb#L45 which is re-raised on the new fiber at L59\n\nBasically the error seems to be handled fine however when re-raised on a new fiber it seems to raise itself on the old fiber?\nIt's reasonably confusing. I'll try and write a more compact piece of code so it's easier to replicate and follow.\n## Configuration Details\n\nI'm running rubinius installed on OSX - version rbx-3.62\nAlso occurs on travis: https://travis-ci.org/cotag/libcouchbase/jobs/170357082\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Use newer version of rake",
                "body": "",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Can't install/upgrade through RVM",
                "body": "## Problem\n\nI'm trying to upgrade rbx-3.30 to rbx-3.60 through the latest RVM (both stable and head) on a Debian machine.\n\nI had three errors related to missing gems (iirc they were redcard, rubinius/code/trigger and melbourne) that I solved by installing them in ruby-2.3.1.\n\nBut still, after these errors went away, the installation didn't proceed because of an error by melbourne.\n## How to Reproduce\n\n`$ rvm upgrade rbx-3.30 rbx-3.60`\n\nBut right now I can't even run `$ rvm install rbx-3.60` as I get the same error every time.\n## Configuration Details\n\n```\n▶ uname -a\nLinux ns319168.ip-91-121-209.eu 3.14.32-xxxx-grs-ipv6-64 #1 SMP Sat Feb 7 11:35:27 CET 2015 x86_64 GNU/Linux\n```\n\n```\n▶ rvm -v\nrvm 1.27.0 (master) by Wayne E. Seguin <wayneeseguin@gmail.com>, Michal Papis <mpapis@gmail.com> [https://rvm.io/]\n\n```\n\n```\n▶ rvm list\n\nrvm rubies\n\n   rbx-2.5.8 [ x86_64 ]\n=* rbx-3.30 [ x86_64 ]\n   ruby-2.2.0 [ x86_64 ]\n   ruby-2.3.1 [ x86_64 ]\n```\n## Stack Trace\n\nhttps://gist.github.com/RoxasShadow/f28cfb9269b41c49456c4dee163e8b71\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Add regex style PEG flags to rubinius.",
                "body": "Add regex style PEG flags to rubinius so we can do PEG parsing in the style of regex.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "RPI suppport",
                "body": "Please add raspberry pi (which is a computer) support by letting it be compiled using gcc instead of clang because raspbian (the OS) dosen't support llvm or clang.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Subset of tests known to fail when run with root privileges",
                "body": "## Problem\n\nSome of the tests fail when building Rubinius with root privileges.\n## How to Reproduce\n\nFollow the setup instructions, as a superuser. After running `rake`, observe the test failures.\n## The following tests pass as a non-privileged user, and fail as root:\n\n```\nDir.delete raises an Errno::EACCES if lacking adequate permissions to remove the directory FAILED\nDir.mkdir raises a SystemCallError when lacking adequate permissions in the parent dir FAILED\nDir.rmdir raises an Errno::EACCES if lacking adequate permissions to remove the directory FAILED\nDir.unlink raises an Errno::EACCES if lacking adequate permissions to remove the directory FAILED\nFile#chmod with '0111' makes file executable but not readable or writable FAILED\nFile#chmod with '0222' makes file writable but not readable or executable FAILED\nFile#chmod with '0444' makes file readable but not writable or executable FAILED\nFile#chmod with '0666' makes file readable and writable but not executable FAILED\nFile.chmod with '0111' makes file executable but not readable or writable FAILED\nFile.chmod with '0222' makes file writable but not readable or executable FAILED\nFile.chmod with '0444' makes file readable but not writable or executable FAILED\nFile.chmod with '0666' makes file readable and writable but not executable FAILED\nFile.executable? returns true if named file is executable by the effective user id of the process, otherwise false FAILED\nFile.executable? returns true if the argument is an executable file FAILED\nFile.executable_real? returns true if the file its an executable FAILED\nFile.open creates a new write-only file when invoked with 'w' and '0222' FAILED\nFile.open raises an Errno::EACCES when opening non-permitted file FAILED\nFile.open raises an Errno::EACCES when opening read-only file FAILED\nFile.owned? returns false when the file is not owned by the user FAILED\nFile.writable? returns true if named file is writable by the effective user id of the process, otherwise false FAILED\nFile::Stat#executable? returns true if named file is executable by the effective user id of the process, otherwise false FAILED\nFile::Stat#executable? returns true if the argument is an executable file FAILED\nFile::Stat#executable_real? returns true if the file its an executable FAILED\nFile::Stat#owned? returns false if the file is not owned by the user FAILED\nFile::Stat#writable? returns true if named file is writable by the effective user id of the process, otherwise false FAILED\nFileTest.executable? returns true if named file is executable by the effective user id of the process, otherwise false FAILED\nFileTest.executable? returns true if the argument is an executable file FAILED\nFileTest.executable_real? returns true if the file its an executable FAILED\nFileTest.writable? returns true if named file is writable by the effective user id of the process, otherwise false FAILED\nKernel#exec raises Errno::EACCES when the file does not have execute permissions FAILED\nKernel#load (path resolution) with an unreadable file raises a LoadError FAILED\nKernel#require (path resolution) with an unreadable file raises a LoadError FAILED\nKernel.exec raises Errno::EACCES when the file does not have execute permissions FAILED\nKernel.load (path resolution) with an unreadable file raises a LoadError FAILED\nKernel.require (path resolution) with an unreadable file raises a LoadError FAILED\nProcess.exec raises Errno::EACCES when the file does not have execute permissions FAILED\n```\n\nPer discussion on Gitter, this is a known issue, and the test suite is not expected to pass as a superuser.\n\nDocumenting this issue here, because I didn't find an issue explaining this when I looked for one, but now the next adventurer will. ^_^\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Rubinius is working  in Windows 10 Bash",
                "body": "Rubinius 3.48 is working in Windows 10 Bash.\nSome extensions when I try to update by gem command show \"Cannot allocate memory - error forking - fork(2)\". They are json and psych. \ngem-rehash have the same error. \n\nSimple methods are working. \n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "RSpec segfaults on it's own specs",
                "body": "## Problem\n\nI tried to run the rspec-core test suite and I got a segfault.\n## How to Reproduce\n\nClone rspec-core from master and run `rake specs`.\n## Configuration Details\n- Output of `rbx -v`: rubinius 3.51 (2.3.1 b3a77ad4 2016-07-27 3.8.1) [x86_64-darwin15.6.0]\n- Output of `uname -a`: Darwin OmerK.local 15.6.0 Darwin Kernel Version 15.6.0: Thu Jun 23 18:25:34 PDT 2016; root:xnu-3248.60.10~1/RELEASE_X86_64 x86_64\n## Stack Trace\n\nhttps://gist.github.com/thedrow/0ae645e9490bfb2bbef226d720e1c21a\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Uncaught C++ exception on Rails 5.0",
                "body": "I'm getting this exception at seemingly odd intervals while testing my site (development mode) after an update to Rails 5. The site is very simple, and it sometimes happens when I visit a page I've already visited (just as much as visiting a new page). If a fix doesn't spring to mind immediately by the backtrace I'll go back and try to narrow things down.\n\nEdit: Rubinius 3.47, from Homebrew, OSX 10.11.5.\n\n```\n[BUG: Uncaught C++ exception]\nPlease report this with the following backtrace to https://github.com/rubinius/rubinius/issues\nThe Rubinius process is aborting\n2   rbx  0x000000010bcf060c rubinius::abort() + 28\n3   rbx  0x000000010bce0d75 rubinius::cpp_exception_bug() + 37\n4   libc++abi.dylib  0x00007fff8563019e std::__terminate(void (*)()) + 8\n5   libc++abi.dylib  0x00007fff85630213 std::terminate() + 51\n6   rbx  0x000000010bd7457d rubinius::Park::park_timed(rubinius::State*, timespec*) + 589\n7   rbx  0x000000010be0c816 rubinius::System::vm_sleep(rubinius::State*, rubinius::Object*) + 198\n8   rbx  0x000000010bd55701 rubinius::Primitives::vm_sleep(rubinius::State*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) + 49\n9   rbx  0x000000010bcf544c rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*) + 7148\n10  rbx  0x000000010bdbb381 rubinius::BlockEnvironment::execute_interpreter(rubinius::State*, rubinius::BlockEnvironment*, rubinius::Arguments&, rubinius::BlockInvocation&) + 481\n11  rbx  0x000000010bdbb4ce rubinius::BlockEnvironment::call(rubinius::State*, rubinius::Arguments&, int) + 126\n12  rbx  0x000000010bdff1ff rubinius::Proc::call(rubinius::State*, rubinius::Arguments&) + 655\n13  rbx  0x000000010bd4c55f rubinius::Primitives::proc_call(rubinius::State*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) + 63\n14  rbx  0x000000010bcf5704 rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*) + 7844\n15  rbx  0x000000010bd2f200 rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::SplatOnlyArgument>(rubinius::State*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) + 464\n16  rbx  0x000000010bdf4e8b rubinius::Object::send(rubinius::State*, rubinius::Symbol*, rubinius::Array*, rubinius::Object*, bool) + 219\n17  rbx  0x000000010be0f5c1 rubinius::run_instance(rubinius::State*) + 129\n18  rbx  0x000000010be10a83 rubinius::Thread::run(void*) + 275\n19  libsystem_pthread.dylib  0x00007fff8d2a999d _pthread_body + 131\n20  libsystem_pthread.dylib  0x00007fff8d2a991a _pthread_body + 0\n21  libsystem_pthread.dylib  0x00007fff8d2a7351 thread_start + 13\nThe Rubinius process is aborting with signal: SIGABRT\n--- begin system info ---\nnode info: alice.local Darwin Kernel Version 15.5.0: Tue Apr 19 18:36:36 PDT 2016; root:xnu-3248.50.21~8/RELEASE_X86_64\n--- end system info ---\n--- begin rubinius info ---\nprocess info: acsmith rbx 72583 3.47 2.3.1 2016-07-15 43e411b2 3.8.0 JIT disabled\n--- end rubinius info ---\n--- begin system backtrace ---\n0   rbx                                 0x000000010bd7f018 _ZN8rubiniusL20abandon_ship_handlerEi + 248\n1   libsystem_platform.dylib            0x00007fff8f04052a _sigtramp + 26\n2   ???                                 0x0000000000000001 0x0 + 1\n3   libsystem_c.dylib                   0x00007fff8d5f66e7 abort + 129\n4   rbx                                 0x000000010bcf0611 _ZN8rubinius5abortEv + 33\n5   rbx                                 0x000000010bce0d75 _ZN8rubinius17cpp_exception_bugEv + 37\n6   libc++abi.dylib                     0x00007fff8563019e _ZSt11__terminatePFvvE + 8\n7   libc++abi.dylib                     0x00007fff85630213 _ZSt9terminatev + 51\n8   rbx                                 0x000000010bd7457d _ZN8rubinius4Park10park_timedEPNS_5StateEP8timespec + 589\n9   rbx                                 0x000000010be0c816 _ZN8rubinius6System8vm_sleepEPNS_5StateEPNS_6ObjectE + 198\n10  rbx                                 0x000000010bd55701 _ZN8rubinius10Primitives8vm_sleepEPNS_5StateEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 49\n11  rbx                                 0x000000010bcf544c _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_ + 7148\n12  rbx                                 0x000000010bdbb381 _ZN8rubinius16BlockEnvironment19execute_interpreterEPNS_5StateEPS0_RNS_9ArgumentsERNS_15BlockInvocationE + 481\n13  rbx                                 0x000000010bdbb4ce _ZN8rubinius16BlockEnvironment4callEPNS_5StateERNS_9ArgumentsEi + 126\n14  rbx                                 0x000000010bdff1ff _ZN8rubinius4Proc4callEPNS_5StateERNS_9ArgumentsE + 655\n15  rbx                                 0x000000010bd4c55f _ZN8rubinius10Primitives9proc_callEPNS_5StateEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 63\n16  rbx                                 0x000000010bcf5704 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_ + 7844\n17  rbx                                 0x000000010bd2f200 _ZN8rubinius11MachineCode19execute_specializedINS_17SplatOnlyArgumentEEEPNS_6ObjectEPNS_5StateEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 464\n18  rbx                                 0x000000010bdf4e8b _ZN8rubinius6Object4sendEPNS_5StateEPNS_6SymbolEPNS_5ArrayEPS0_b + 219\n19  rbx                                 0x000000010be0f5c1 _ZN8rubinius12run_instanceEPNS_5StateE + 129\n20  rbx                                 0x000000010be10a83 _ZN8rubinius6Thread3runEPv + 275\n21  libsystem_pthread.dylib             0x00007fff8d2a999d _pthread_body + 131\n22  libsystem_pthread.dylib             0x00007fff8d2a991a _pthread_body + 0\n23  libsystem_pthread.dylib             0x00007fff8d2a7351 thread_start + 13\n--- end system backtrace ---\n--- begin Ruby backtraces ---\n--- Thread 1 backtrace ---\nThread#join in core/thread.rb:191 (+46)\nPuma::Single#run in /Users/acsmith/.rbenv/versions/rbx-3.47/lib/rubinius/3.47/gems/gems/puma-3.4.0/lib/puma/single.rb:101 (+186)\nPuma::Launcher#run in /Users/acsmith/.rbenv/versions/rbx-3.47/lib/rubinius/3.47/gems/gems/puma-3.4.0/lib/puma/launcher.rb:172 (+24)\nRack::Handler::Puma.run in /Users/acsmith/.rbenv/versions/rbx-3.47/lib/rubinius/3.47/gems/gems/puma-3.4.0/lib/rack/handler/puma.rb:51 (+156)\nRack::Server#start in /Users/acsmith/.rbenv/versions/rbx-3.47/lib/rubinius/3.47/gems/gems/rack-2.0.1/lib/rack/server.rb:296 (+293)\nRails::Server#start in /Users/acsmith/.rbenv/versions/rbx-3.47/lib/rubinius/3.47/gems/gems/railties-5.0.0/lib/rails/commands/server.rb:79 (+44)\n__block__ in /Users/acsmith/.rbenv/versions/rbx-3.47/lib/rubinius/3.47/gems/gems/railties-5.0.0/lib/rails/commands/commands_tasks.rb:90 (+24)\nKernel#tap in core/kernel.rb:920 (+3)\nRails::CommandsTasks#server in /Users/acsmith/.rbenv/versions/rbx-3.47/lib/rubinius/3.47/gems/gems/railties-5.0.0/lib/rails/commands/commands_tasks.rb:85 (+41)\nRails::CommandsTasks#run_command! in /Users/acsmith/.rbenv/versions/rbx-3.47/lib/rubinius/3.47/gems/gems/railties-5.0.0/lib/rails/commands/commands_tasks.rb:49 (+26)\nObject#__script__ in /Users/acsmith/.rbenv/versions/rbx-3.47/lib/rubinius/3.47/gems/gems/railties-5.0.0/lib/rails/commands.rb:18 (+171)\nRubinius::CodeLoader.require in core/code_loader.rb:233 (+76)\nKernel#require in core/kernel.rb:856 (+9)\nObject#__script__ in /Users/acsmith/workspaces/indexical.org/indexical-app/bin/rails:4 (+35)\nRubinius::CodeLoader#load_script in core/code_loader.rb:505 (+48)\nRubinius::CodeLoader.load_script in core/code_loader.rb:590 (+39)\nRubinius::Loader#script in core/loader.rb:679 (+208)\nRubinius::Loader#main in core/loader.rb:862 (+64)\n--- Thread 5 backtrace ---\nTimeout.watch_channel in /Users/acsmith/.rbenv/versions/rbx-3.47/lib/rubinius/3.47/gems/gems/rubysl-timeout-2.0.0/lib/rubysl/timeout/timeout.rb:90 (+25)\n__block__ in /Users/acsmith/.rbenv/versions/rbx-3.47/lib/rubinius/3.47/gems/gems/rubysl-timeout-2.0.0/lib/rubysl/timeout/timeout.rb:125 (+2)\nProc#call in core/proc.rb:0 (+198)\n--- Thread 6 backtrace ---\n__block__ in core/io.rb:954 (+70)\nKernel#loop in core/kernel.rb:590 (+29)\nIO::Select.select in core/io.rb:951 (+645)\nIO.select in core/io.rb:1645 (+152)\nPuma::Reactor#run_internal in /Users/acsmith/.rbenv/versions/rbx-3.47/lib/rubinius/3.47/gems/gems/puma-3.4.0/lib/puma/reactor.rb:29 (+26)\n__block__ in /Users/acsmith/.rbenv/versions/rbx-3.47/lib/rubinius/3.47/gems/gems/puma-3.4.0/lib/puma/reactor.rb:144 (+16)\nProc#call in core/proc.rb:0 (+198)\n--- Thread 7 backtrace ---\n__block__ in /Users/acsmith/.rbenv/versions/rbx-3.47/lib/rubinius/3.47/gems/gems/puma-3.4.0/lib/puma/thread_pool.rb:227 (+16)\nProc#call in core/proc.rb:0 (+198)\n--- Thread 8 backtrace ---\n__block__ in /Users/acsmith/.rbenv/versions/rbx-3.47/lib/rubinius/3.47/gems/gems/puma-3.4.0/lib/puma/thread_pool.rb:198 (+16)\nProc#call in core/proc.rb:0 (+198)\n--- Thread 9 backtrace ---\n__block__ in core/io.rb:954 (+70)\nKernel#loop in core/kernel.rb:590 (+29)\nIO::Select.select in core/io.rb:951 (+645)\nIO.select in core/io.rb:1645 (+152)\nPuma::Server#handle_servers in /Users/acsmith/.rbenv/versions/rbx-3.47/lib/rubinius/3.47/gems/gems/puma-3.4.0/lib/puma/server.rb:323 (+126)\n__block__ in /Users/acsmith/.rbenv/versions/rbx-3.47/lib/rubinius/3.47/gems/gems/puma-3.4.0/lib/puma/server.rb:297 (+2)\nProc#call in core/proc.rb:0 (+198)\n--- Thread 10 backtrace ---\n__block__ in core/io.rb:954 (+70)\nKernel#loop in core/kernel.rb:590 (+29)\nIO::Select.select in core/io.rb:951 (+645)\nIO.select in core/io.rb:1645 (+152)\nPuma::Reactor#run_internal in /Users/acsmith/.rbenv/versions/rbx-3.47/lib/rubinius/3.47/gems/gems/puma-3.4.0/lib/puma/reactor.rb:29 (+26)\n__block__ in /Users/acsmith/.rbenv/versions/rbx-3.47/lib/rubinius/3.47/gems/gems/puma-3.4.0/lib/puma/reactor.rb:144 (+16)\nProc#call in core/proc.rb:0 (+198)\n--- Thread 11 backtrace ---\n__block__ in /Users/acsmith/.rbenv/versions/rbx-3.47/lib/rubinius/3.47/gems/gems/puma-3.4.0/lib/puma/thread_pool.rb:227 (+16)\nProc#call in core/proc.rb:0 (+198)\n--- Thread 12 backtrace ---\n__block__ in /Users/acsmith/.rbenv/versions/rbx-3.47/lib/rubinius/3.47/gems/gems/puma-3.4.0/lib/puma/thread_pool.rb:198 (+16)\nProc#call in core/proc.rb:0 (+198)\n--- Thread 13 backtrace ---\n__block__ in core/io.rb:954 (+70)\nKernel#loop in core/kernel.rb:590 (+29)\nIO::Select.select in core/io.rb:951 (+645)\nIO.select in core/io.rb:1645 (+152)\nPuma::Server#handle_servers in /Users/acsmith/.rbenv/versions/rbx-3.47/lib/rubinius/3.47/gems/gems/puma-3.4.0/lib/puma/server.rb:323 (+126)\n__block__ in /Users/acsmith/.rbenv/versions/rbx-3.47/lib/rubinius/3.47/gems/gems/puma-3.4.0/lib/puma/server.rb:297 (+2)\nProc#call in core/proc.rb:0 (+198)\n--- end Ruby backtraces ---\nAbort trap: 6\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Can't build EM 1.2.0.1 on OSX w/ macports openssl 1.0.2h on RBX 2.5.8 or 3.39; can on ruby 2.3.1",
                "body": "See: https://github.com/eventmachine/eventmachine/issues/722\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Date.parse performance is very slow",
                "body": "## Problem\n\nDate.parse is extremely slow.\n## How to Reproduce\n\n```\nrequire 'benchmark'\nrequire 'date'\n\n# number of iterations\nn = 100_000\nnumber_array = []\nstring_array = []\n\nBenchmark.bmbm(22) do |x|\n\n  x.report('parse date from string') do\n    year = \"2016\"\n    month = \"5\"\n    day = \"13\"\n\n    n.times do \n      date = Date.parse(\"#{year}-#{month}-#{day}\")\n    end\n  end\n\n  x.report('parse date from integers') do\n    year = \"2016\"\n    month = \"5\"\n    day = \"13\"\n\n    n.times do \n      date = Date.new(year.to_i, month.to_i, day.to_i)\n    end\n  end\n\nend\n```\n\nResults for rbx 3.39 vs mri 2.3.0 vs jruby 9.1.2.0\n\n```\nGuestOSX:perf cremes$ ruby date_new_vs_parse.rb \nRehearsal ------------------------------------------------------------\nparse date from string    34.606713   0.507244  35.113957 ( 39.503984)\nparse date from integers   1.913109   0.028055   1.941164 (  1.941169)\n-------------------------------------------------- total: 37.055121sec\n\n                               user     system      total        real\nparse date from string    34.386707   0.422091  34.808798 ( 39.904808)\nparse date from integers   1.887001   0.022574   1.909575 (  1.909600)\nGuestOSX:perf cremes$ chruby 2.3.0\nGuestOSX:perf cremes$ ruby date_new_vs_parse.rb \nRehearsal ------------------------------------------------------------\nparse date from string     0.810000   0.010000   0.820000 (  2.217753)\nparse date from integers   0.080000   0.000000   0.080000 (  0.216256)\n--------------------------------------------------- total: 0.900000sec\n\n                               user     system      total        real\nparse date from string     0.810000   0.000000   0.810000 (  2.241786)\nparse date from integers   0.050000   0.000000   0.050000 (  0.053039)\nGuestOSX:perf cremes$ chruby jruby\nGuestOSX:perf cremes$ ruby date_new_vs_parse.rb \nRehearsal ------------------------------------------------------------\nparse date from string     8.780000   0.520000   9.300000 (  4.003426)\nparse date from integers   0.370000   0.000000   0.370000 (  0.121136)\n--------------------------------------------------- total: 9.670000sec\n\n                               user     system      total        real\nparse date from string     3.530000   0.610000   4.140000 (  3.282722)\nparse date from integers   0.070000   0.000000   0.070000 (  0.067120)\n```\n## Configuration Details\n- Output of `rbx -v`: 3.39\n- Output of `uname -a`: darwin\n- Distribution name (in case of Linux/BSD): OSX\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Performance - #sprintf causes internal mutex/lock contention on Date#to_s calls",
                "body": "## Problem\n\nWhen calling `to_s` on a Date object we end up calling this code:\n\n```\ndef to_s() format('%.4d-%02d-%02d', year, mon, mday) end\n```\n\nIn a multi-threaded program that is calling this method a lot, the threads all end up contending for the lock on the cache entry for that format string.\n\nSee backtrace below.\n## How to Reproduce\n\n```\nrequire 'date'\n\ndate = Date.today\n\n(0..100).to_a.map do\n  Thread.new { puts date.to_s }\nend.join\n```\n## Configuration Details\n- Output of `rbx -v`:\n  `rubinius 3.37.c3 (2.2.2 d49a89ad 2016-06-07 3.8.0) [x86_64-darwin14.5.0]`\n- Output of `uname -a`: OS X 10.10.5\n- Distribution name (in case of Linux/BSD): OS X 10.10\n## Stack Trace\n\nhttps://gist.github.com/chuckremes/23f101b0e78c38865e7e74eeb3bd21be\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Timeout: One thread per Timeout instance; consolidate.",
                "body": "Per recent discovery/realization while debugging: `Timeout` is taking up one thread per instance.\n- [ ] Refactor to share one thread across all timeouts.\n- [ ] With monotonic counters.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "The sudden-death round-up.",
                "body": "This is a catch-all ticket to include #3658, but more specifically enumerate root causes of that ticket and other associated issues, per @brixen's research, after `3.36`... tracing through `2.5gb+` core-dump's, etc.\n\nCopied summaries from gitter:\n- [ ] Managed finalizer on halt aborting in the global method cache.\n- [ ] Fiber messing up switching stacks.\n- [ ] A corrupt CallSite/InlineCache.\n\nSome associated debug data:\n- https://gist.github.com/brixen/fd860e823d5ab1b6420a6ddae2083087#file-gistfile3-txt\n- https://gist.github.com/brixen/fd860e823d5ab1b6420a6ddae2083087#file-gistfile2-txt-L72\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Issue installing guard and running specs",
                "body": "Tracking this issue here https://github.com/guard/listen/issues/400\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Segfault while running the tests for the mysql2 gem",
                "body": "## Problem\n\nI run the test suite for mysql2 and got a segfault.\n## How to Reproduce\n\nPlease keep this as simple as possible and provide either a set of steps or a\nscript/application to reproduce this problem (and remove this sentence).\n## Configuration Details\n- Output of `rbx -v`: rubinius 3.36 (2.2.2 f23df637 2016-06-05 3.6.2) [x86_64-darwin13.4.0]\n- Output of `uname -a`: Darwin OmerK.local 15.5.0 Darwin Kernel Version 15.5.0: Tue Apr 19 18:36:36 PDT 2016; root:xnu-3248.50.21~8/RELEASE_X86_64 x86_64\n- Distribution name (in case of Linux/BSD): OSX\n## Stack Trace\n\nhttps://gist.github.com/thedrow/64e4739383b8bcf23bc7ff714a27c8b8\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Memory corruption causing sudden death of processes.",
                "body": "Seems to be similar error output to: #2674 \n\n---\n\nAt seemingly random points, one of the following errors will output to the _calling terminal_ ( not `STDOUT` or `STDERR` ) ... and there could be more:\n\n```\n*** Error in `ruby': free(): corrupted unsorted chunks: 0x00007fb21c000c20 ***\n*** Error in `ruby': malloc(): memory corruption: 0x00007fb21c001040 ***\n*** Error in `ruby': corrupted double-linked list: 0x00007fe72dbd6250 ***\n*** Error in `ruby': double free or corruption (!prev): 0x00007f19a448a930 ***\n*** Error in `ruby': malloc(): memory corruption: 0x00007f38beb4b888 ***\n*** Error in `ruby': double free or corruption (out): 0x00007f2740001070 ***\n```\n#### No discernable way to reproduce.\n## Configuration Details\n- `rubinius 3.33 (2.2.2 db6f477e 2016-05-23 3.6.0) [x86_64-linux-gnu]`\n- `Linux #80-Ubuntu SMP Thu Mar 12 11:16:15 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux`\n- `Ubuntu 14.04.4 LTS`\n#### No stacktrace; sudden death.\n\nSeems related to the thread context issue @brixen is already aware of. Have experienced in `3.33` as reporting here, as well as `3.32`, and `3.31` but cannot verify the exact messages produced by those.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Remove Ruby from the build system.",
                "body": "The use of Ruby in the build sytem severely complicates building and packaging\nRubinius and has resulted in Rubinius either not getting packaged for various\nplatforms or even removed from existing packages like Homebrew.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "WIP Fix #parameters for Method, Proc, and UnboundMethod.",
                "body": "Fixes #3538.\n\nI still need to finish the specs, but I wanted to see if anyone has feedback.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "WIP: Fix range of Fixnum. Closes #3636.",
                "body": "",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Inconsistent class with negative integer constant",
                "body": "## Problem\n\n`(-0x4000_0000_0000_0000).class` becomes Bignum, which can be stored in Fixnum.\n\nExisting two representations for the same integer value may cause unexpected behaviors.\n## How to Reproduce\n\n``` rb\nval = -0x4000_0000_0000_0000\np val.class # => Bignum (unexpected)\np (~~val).class #=> Fixnum (expected)\np val.equal?(~~val) # => false (unexpected)\n```\n## Configuration Details\n- Output of `rbx -v`:\n  `rubinius 3.27 (2.2.2 628fe1c2 2016-04-15 3.4.2) [x86_64-linux-gnu]` : installed from ruby-build & rbenv\n- Output of `uname -a`:\n  `Linux localhost.localdomain 3.10.0-327.10.1.el7.x86_64 #1 SMP Tue Feb 16 17:03:50 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux`\n- Distribution name (in case of Linux/BSD): CentOS 7\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Errors using Marshal.load",
                "body": "## Problem\n\nWhen using `Marshal.load` to load certain marshalled data structures, I am seeing `ArgumentError` exceptions and occasional segfaults.  I do not have the issue in 3.14; from my tests it seems to have started with 3.15.  I've tested 3.19, but not git master.\n## How to Reproduce\n\nThe following script usually produces the issue for me.  Sometimes I have to run it more than once.\n\n``` ruby\n100.times do\n  marshalled = Marshal.dump((1..100).map{ \"hi\" })\n  Marshal.load(marshalled)\nend\n```\n## Configuration Details\n- Output of `rbx -v`: `rubinius 3.19 (2.2.2 1cc41ddc 2016-02-27 3.5.2 JI) [x86_64-linux-gnu]`\n- Output of `uname -a`: `Linux managua 4.1.19-1-lts #1 SMP Sun Mar 6 09:23:49 CET 2016 x86_64 GNU/Linux`\n- Distribution name (in case of Linux/BSD): Archlinux\n  - NB. I have also had the same problem on Debian 8\n\nI've not tried building from source (have used ruby-build), so I don't have the following:\n- Contents of `config.rb` (as a Gist link): \n- Contents of `configure.log` (as a Gist link):\n## Stack Trace\n\nThe error is not always the same, so I've included a couple of different examples.  I've also included a gdb log showing a segfault.\n\nhttps://gist.github.com/asppsa/5f97af3a55950a7841be\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Process.clock_gettime and related Process::CLOCK_* not yet implemented",
                "body": "I was trying to execute code that uses `Process.clock_gettime(Process::CLOCK_MONOTONIC, :nanosecond)` on rbx 3.14, but this does not yet seem to be implement.\n\nMy current work around is to use `Time.new`, which is fine for the amount of precision I need. So, not urgent, just wanted to document it.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Regexp/String: Updated Unicode version from 7.0.0 to 8.0.0",
                "body": "Ruby 2.3 applied this, unsure how this affects us. Noting it here so we don't lose track of it.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Add rb_timespec_now and rb_time_timespec_new to the C API",
                "body": "Redmine ticket: https://bugs.ruby-lang.org/issues/11558\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Update Array packing/String unpacking for new j/J directives",
                "body": "Redmine ticket: https://bugs.ruby-lang.org/issues/11215\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Hash#inspect doesn't raise error even if its content returns a string which is not compatible with Encoding.default_external as inspected result",
                "body": "Redmine ticket: https://bugs.ruby-lang.org/issues/11801\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Array#inspect doesn't raise error even if its content returns a string which is not compatible with Encoding.default_external as inspected result",
                "body": "Redmine ticket: https://bugs.ruby-lang.org/issues/11801\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Thread#name, Thread#name= are added to handle thread names",
                "body": "Redmine ticket: https://bugs.ruby-lang.org/issues/11251\n\nNotes from what I found: \n- `pthread_setname_np` on OSX only allows setting the name of the calling thread from what I could find.\n- ASCII incompatible names should raise an ArgumentError\n- Names are stored inside a thread as well as being used to set the OS thread name\n- If a name is longer than 16 characters (the maximum length for POSIX thread names) only the first 16 characters are used for the native thread. Calling `Thread#name` however _does_ return the full name (so basically we'd just store/read from an instance variable when calling `Thread#name`)\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Add support for Module#deprecate_constant",
                "body": "Redmine ticket: https://bugs.ruby-lang.org/issues/11398\n\nI'm not sure how we'd tag a constant as deprecated in our current system, or how useful it is in the first place.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "IO#advise no longer raises Errno::ENOSYS in cases where it was detected at build time but not available at runtime",
                "body": "Redmine ticket: https://bugs.ruby-lang.org/issues/11806\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Add IO flags keyword",
                "body": "Redmine ticket: https://bugs.ruby-lang.org/issues/11253\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Add support for Encoding::IBM037",
                "body": "The only reference I can find to this encoding in Redmine is this commit: https://bugs.ruby-lang.org/projects/ruby-trunk/repository/revisions/53124. This encoding is aliased as `Encoding::EBCDIC_CP_US`.\n\nExtracted from https://github.com/rubinius/rubinius/issues/3559\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Update parser for another heredoc literal",
                "body": "The parser should be updated to allow _another_ heredoc literal: `<<~`.\n\nExtracted from https://github.com/rubinius/rubinius/issues/3559\nRedmine ticket: https://bugs.ruby-lang.org/issues/9098\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Update parser for lonely/nil-anti-pattern operator",
                "body": "The parser should be updated to allow syntax such as:\n\n```\nobject&.foo', method #foo is called on\n```\n\nExtracted from https://github.com/rubinius/rubinius/issues/3559.\n\nRedmine ticket: https://bugs.ruby-lang.org/issues/11537\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Symbol Garbage Collection",
                "body": "Extracting this feature from https://github.com/rubinius/rubinius/issues/3264 as it's one that probably needs quite some thought/work/changes. Rails already stated that at some point they'll depend on Symbols being GC'd. MRI does some hack where certain `to_sym` methods return Symbols that can be collected, but I think we can just collect any non literal Symbols and be done with it.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Changing license from BSD 3-clause to MPL 2.0: Extra Notification",
                "body": "To reduce the amount of notifications sent out whenever replying to https://github.com/rubinius/rubinius/issues/3550 I'll be using this issue to ping contributors regarding the license change.\n\nTo the contributors on the list below, please reply to the above issue _or_ send me an Email (following the instructions in said issue). Thank you.\n\nScript to check who has not yet replied:\n\n``` javascript\n$('.task-list-item input[type=\"checkbox\"]:not(:checked)').map(function(i, el) { return $(el).next()[0].innerText; });\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "BasicObject#instance_exec does not allow return in lambda",
                "body": "The following code raises LocalJumpError.\n\n```\nirb(main):001:0> p = -> { return 1 }\n=> #<Proc:0x15ec@(irb):1 (lambda)>\nirb(main):002:0> instance_exec &p\nLocalJumpError: unexpected return\n    from (irb):1\n    from kernel/common/eval.rb:104:in `instance_exec'\n```\n\nWhile MRI 2.2.2 can pass\n\n```\nirb(main):001:0> p = -> { return 1 }\n=> #<Proc:0x007fef745f8140@(irb):1 (lambda)>\nirb(main):002:0> instance_exec &p\n=> 1\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "GitLab test suite segfaults Rubinius",
                "body": "Running the gitlab-ce test suite using `bundle exec rspec -fp spec/models` results in the following segfault (from the logs): https://gist.github.com/YorickPeterse/f066b9427086fd8a1902\n\nGDB output: https://gist.github.com/YorickPeterse/0c3bb0442c4e51acd046\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "First GitLab request is extremely slow",
                "body": "Booting up GitLab CE and using my local database results in the first request taking around 137 seconds. Quickly scanning through the Rails logs seems to indicate a lot of time being spent in rendering views (or running code present in said views). Since GitLab uses HAML I wouldn't be surprised if it's partially to blame.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Booting GitLab is around 2x slower than MRI",
                "body": "Booting GitLab on MRI 2.1.7 (the version GitLab currently uses) takes about 11-12 seconds (as measured using `time -f '%E' rails r ''`. \n\nOn Rubinius the timings are as following:\n- cold bootup (boot without the `~/.rbx` directory existing): ~50 seconds\n- regular bootup: ~25 seconds\n\nProfiler output (`rbx -Xprofile -S rails r ''`): https://gist.github.com/YorickPeterse/0715ced873746ea8e2ef\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "\"Invalid byte sequence in US-ASCII\" when LANG, etc. set to en_US.UTF-8",
                "body": "RuboCop's `rbx-2` build has been failing for quite some time, and upon trying to patch it up, I discovered what appears to be a bug in Rubinius.\n\nEven with `LANG=en_US.UTF-8`, `LANGUAGE=en_US.UTF-8`, and `LC_ALL=en_US.UTF-8`, I'm seeing an `invalid byte sequence in US-ASCII` error. [Relevant lines from recent build failure](https://travis-ci.org/bbatsov/rubocop/jobs/100991199#L241-L245).\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Changing license from BSD 3-clause to MPL 2.0",
                "body": "We (Rubinius) would like to change the license from the [BSD 3-clause license](https://github.com/rubinius/rubinius/blob/6b35d17975333f3059913cc2ec4586df1cd07825/BSD_LICENSE) to the [MPL 2.0](https://github.com/rubinius/rubinius/blob/6b35d17975333f3059913cc2ec4586df1cd07825/LICENSE). Because the BSD license makes no mention of who owns the copyright to changes we're forced to request permission from all contributors regarding the license change.\n\nThe list of authors below is based on the contributors as listed in the GitHub API. The list of authors in Git consists out of a variety of valid, bullshit, or unused Emails; making it impossible to rely upon. Since Rubinius has been using GitHub since at least 2009 I'm fairly confident all contributors have a GitHub account.\n\nShould you have contributed to Rubinius and are _not_ on the list below please send an Email to yorickpeterse+rubinius@gmail.com _or_ join the rubinius/rubinius Gitter channel and make a mention of this (Email is highly preferred as it's easier for me to keep track of).\n\nI apologize for the noise this will introduce, but this is the most reliable way of contacting everybody. Contributors on the list below are adviced to reply and then unsubscribe from this issue (using the button on the right).\n## Reason for Changing\n\nThe most important reason for switching to the MPL 2.0 is that it's more explicit in terms of who owns what, what happens to patents, and so forth. The BSD 3-clause license leaves far too much up to interpretation. In general it's a license we feel is better at protecting both the Rubinius project and its contributors.\n## Contributors\n\nIf you're on the list below please reply with \"OK\" if you're OK with this license change and \"not OK\" if you're not OK with it. Should you not be OK with the change please do me a favour and provide a short explanation as to why.  You're also free to send said explanation to the above Email address.\n\nPlease refrain from posting any other comments on this issue as doing so makes it harder to keep track of things. Any comments other than \"OK\" or \"not OK\" will be removed.\n\nIf you happen to have access to this issue feel free to check-off your own username, but **please** still leave a comment saying you're OK with the change.\n\nNote that due to GitHub limiting the amount of mentioned users to 50 I'll be splitting the list of usernames to 50 names per comment.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Keyword arguments sometimes are ignored, sometimes segfault",
                "body": "On rbx 2.5.8:\n\n```\nchris@lovelace ~ $ irb\nrbx-2.5.8 :001 > class Reproduction\nrbx-2.5.8 :002?>     attr_reader :arg\nrbx-2.5.8 :003?>   \nrbx-2.5.8 :004 >       def initialize(arg:)\nrbx-2.5.8 :005?>         @arg = arg\nrbx-2.5.8 :006?>       end\nrbx-2.5.8 :007?>   end\n => :initialize \nrbx-2.5.8 :008 > \nrbx-2.5.8 :009 >   10000.times do\nrbx-2.5.8 :010 >       r = Reproduction.new(arg: 1)\nrbx-2.5.8 :011?>     puts \"yes!\" if r.arg.nil?\nrbx-2.5.8 :012?>   end\nyes!\n => 10000 \n```\n\nSo the instance variable isn't set every once in a while. If I push the loop even further I get:\n\n```\nchris@lovelace ~ $ irb\nrbx-2.5.8 :001 > class Reproduction\nrbx-2.5.8 :002?>     attr_reader :arg\nrbx-2.5.8 :003?>   \nrbx-2.5.8 :004 >       def initialize(arg:)\nrbx-2.5.8 :005?>         @arg = arg\nrbx-2.5.8 :006?>       end\nrbx-2.5.8 :007?>   end\n => :initialize \nrbx-2.5.8 :008 > \nrbx-2.5.8 :009 >   100000.times do\nrbx-2.5.8 :010 >       r = Reproduction.new(arg: 1)\nrbx-2.5.8 :011?>     puts \"yes!\" if r.arg.nil?\nrbx-2.5.8 :012?>   end\nyes!\nThe Rubinius process is aborting with signal: SIGSEGV\n--- begin system info ---\nnode info: lovelace #52~14.04.1-Ubuntu SMP Fri May 8 09:43:57 UTC 2015\n--- end system info ---\n--- begin rubinius info ---\nprocess info: chris rbx 18285 2.5.8 2.1.0 2015-12-23 bef51ae3 3.4 JIT\n--- end rubinius info ---\n--- begin system backtrace ---\nirb() [0x688f84]\n/lib/x86_64-linux-gnu/libpthread.so.0(+0x10340) [0x7ff6856b8340]\nirb(_ZN8rubinius11MachineCode19execute_specializedINS_16GenericArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x1ca) [0x61ad4a]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x201c) [0x5c491c]\nirb(_ZN8rubinius16BlockEnvironment19execute_interpreterEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE+0x352) [0x6c6e22]\nirb(_ZN8rubinius16BlockEnvironment6invokeEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE+0x20b) [0x6c6a5b]\nirb(_ZN8rubinius16BlockEnvironment4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsEi+0x3d) [0x6c70cd]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x2d54) [0x5c5654]\nirb(_ZN8rubinius11MachineCode19execute_specializedINS_11NoArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x324) [0x61b414]\nirb(_ZN8rubinius8CallSite11empty_cacheEPNS_5StateEPS0_PNS_9CallFrameERNS_9ArgumentsE+0x160) [0x6c8f90]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x2101) [0x5c4a01]\nirb(_ZN8rubinius16BlockEnvironment19execute_interpreterEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE+0x352) [0x6c6e22]\nirb(_ZN8rubinius16BlockEnvironment6invokeEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE+0x20b) [0x6c6a5b]\nirb(_ZN8rubinius16BlockEnvironment10call_underEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0xe8) [0x6c72e8]\nirb(_ZN8rubinius10Primitives16block_call_underEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x4f) [0x624baf]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x227e) [0x5c4b7e]\nirb(_ZN8rubinius11MachineCode19execute_specializedINS_16GenericArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x39d) [0x61af1d]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x201c) [0x5c491c]\nirb(_ZN8rubinius11MachineCode19execute_specializedINS_16GenericArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x39d) [0x61af1d]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x201c) [0x5c491c]\nirb(_ZN8rubinius11MachineCode19execute_specializedINS_16GenericArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x39d) [0x61af1d]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x201c) [0x5c491c]\nirb(_ZN8rubinius11MachineCode19execute_specializedINS_12TwoArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x35d) [0x61c3dd]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x201c) [0x5c491c]\nirb(_ZN8rubinius16BlockEnvironment19execute_interpreterEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE+0x352) [0x6c6e22]\nirb(_ZN8rubinius16BlockEnvironment6invokeEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE+0x20b) [0x6c6a5b]\nirb(_ZN8rubinius16BlockEnvironment4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsEi+0x3d) [0x6c70cd]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x2d54) [0x5c5654]\nirb(_ZN8rubinius11MachineCode19execute_specializedINS_11OneArgumentEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x34d) [0x61be8d]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x2101) [0x5c4a01]\nirb(_ZN8rubinius16BlockEnvironment19execute_interpreterEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE+0x352) [0x6c6e22]\nirb(_ZN8rubinius16BlockEnvironment6invokeEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE+0x20b) [0x6c6a5b]\nirb(_ZN8rubinius16BlockEnvironment4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsEi+0x3d) [0x6c70cd]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x2d54) [0x5c5654]\nirb(_ZN8rubinius16BlockEnvironment19execute_interpreterEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE+0x352) [0x6c6e22]\nirb(_ZN8rubinius16BlockEnvironment6invokeEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE+0x20b) [0x6c6a5b]\nirb(_ZN8rubinius16BlockEnvironment4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsEi+0x3d) [0x6c70cd]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x2d54) [0x5c5654]\nirb(_ZN8rubinius11MachineCode19execute_specializedINS_11NoArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x324) [0x61b414]\nirb(_ZN8rubinius12CompiledCode16default_executorEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x1a5) [0x6cd5b5]\nirb(_ZN8rubinius8CallSite19empty_cache_privateEPNS_5StateEPS0_PNS_9CallFrameERNS_9ArgumentsE+0x160) [0x6c97e0]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x2101) [0x5c4a01]\nirb(_ZN8rubinius16BlockEnvironment19execute_interpreterEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE+0x352) [0x6c6e22]\nirb(_ZN8rubinius16BlockEnvironment6invokeEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE+0x20b) [0x6c6a5b]\nirb(_ZN8rubinius16BlockEnvironment4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsEi+0x3d) [0x6c70cd]\nirb(_ZN8rubinius4Proc4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsE+0x267) [0x70b307]\nirb(_ZN8rubinius10Primitives9proc_callEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x4f) [0x643d2f]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x227e) [0x5c4b7e]\nirb(_ZN8rubinius11MachineCode19execute_specializedINS_17SplatOnlyArgumentEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x35c) [0x61b94c]\nirb(_ZN8rubinius8Dispatch4sendEPNS_5StateEPNS_9CallFrameERNS_10LookupDataERNS_9ArgumentsENS_19MethodMissingReasonE+0xb9) [0x5b4019]\nirb(_ZN8rubinius6System8vm_catchEPNS_5StateEPNS_6ObjectES4_PNS_9CallFrameE+0x123) [0x719013]\nirb(_ZN8rubinius10Primitives8vm_catchEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x66) [0x64d106]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x201c) [0x5c491c]\nirb(_ZN8rubinius16BlockEnvironment19execute_interpreterEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE+0x352) [0x6c6e22]\nirb(_ZN8rubinius16BlockEnvironment6invokeEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE+0x20b) [0x6c6a5b]\nirb(_ZN8rubinius16BlockEnvironment4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsEi+0x3d) [0x6c70cd]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x2d54) [0x5c5654]\nirb(_ZN8rubinius11MachineCode19execute_specializedINS_11OneArgumentEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x34d) [0x61be8d]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x2101) [0x5c4a01]\nirb(_ZN8rubinius11MachineCode19execute_specializedINS_16GenericArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x39d) [0x61af1d]\nirb(_ZN8rubinius8CallSite19empty_cache_privateEPNS_5StateEPS0_PNS_9CallFrameERNS_9ArgumentsE+0x160) [0x6c97e0]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x2101) [0x5c4a01]\nirb(_ZN8rubinius11MachineCode19execute_specializedINS_11NoArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x324) [0x61b414]\nirb(_ZN8rubinius12CompiledCode16default_executorEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x1a5) [0x6cd5b5]\nirb(_ZN8rubinius8CallSite11empty_cacheEPNS_5StateEPS0_PNS_9CallFrameERNS_9ArgumentsE+0x160) [0x6c8f90]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x2101) [0x5c4a01]\nirb(_ZN8rubinius11MachineCode19execute_specializedINS_11NoArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x324) [0x61b414]\nirb(_ZN8rubinius12CompiledCode16default_executorEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x1a5) [0x6cd5b5]\nirb(_ZN8rubinius8CallSite11empty_cacheEPNS_5StateEPS0_PNS_9CallFrameERNS_9ArgumentsE+0x160) [0x6c8f90]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x201c) [0x5c491c]\nirb(_ZN8rubinius16BlockEnvironment19execute_interpreterEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE+0x352) [0x6c6e22]\nirb(_ZN8rubinius16BlockEnvironment6invokeEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE+0x20b) [0x6c6a5b]\nirb(_ZN8rubinius16BlockEnvironment4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsEi+0x3d) [0x6c70cd]\nirb(_ZN8rubinius4Proc4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsE+0x267) [0x70b307]\nirb(_ZN8rubinius10Primitives9proc_callEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x4f) [0x643d2f]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x227e) [0x5c4b7e]\nirb(_ZN8rubinius11MachineCode19execute_specializedINS_17SplatOnlyArgumentEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x35c) [0x61b94c]\nirb(_ZN8rubinius8Dispatch4sendEPNS_5StateEPNS_9CallFrameERNS_10LookupDataERNS_9ArgumentsENS_19MethodMissingReasonE+0xb9) [0x5b4019]\nirb(_ZN8rubinius6System8vm_catchEPNS_5StateEPNS_6ObjectES4_PNS_9CallFrameE+0x123) [0x719013]\nirb(_ZN8rubinius10Primitives8vm_catchEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x66) [0x64d106]\nirb(_ZN8rubinius12CompiledCode16default_executorEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x1a5) [0x6cd5b5]\nirb(_ZN8rubinius8CallSite11empty_cacheEPNS_5StateEPS0_PNS_9CallFrameERNS_9ArgumentsE+0x160) [0x6c8f90]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x201c) [0x5c491c]\nirb(_ZN8rubinius16BlockEnvironment19execute_interpreterEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE+0x352) [0x6c6e22]\nirb(_ZN8rubinius16BlockEnvironment6invokeEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE+0x20b) [0x6c6a5b]\nirb(_ZN8rubinius16BlockEnvironment4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsEi+0x3d) [0x6c70cd]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x2d54) [0x5c5654]\nirb(_ZN8rubinius11MachineCode19execute_specializedINS_11OneArgumentEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x34d) [0x61be8d]\nirb(_ZN8rubinius12CompiledCode16default_executorEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x1a5) [0x6cd5b5]\nirb(_ZN8rubinius8CallSite11empty_cacheEPNS_5StateEPS0_PNS_9CallFrameERNS_9ArgumentsE+0x160) [0x6c8f90]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x2101) [0x5c4a01]\nirb(_ZN8rubinius11MachineCode19execute_specializedINS_16GenericArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x39d) [0x61af1d]\nirb(_ZN8rubinius12CompiledCode16default_executorEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x1a5) [0x6cd5b5]\nirb(_ZN8rubinius8CallSite19empty_cache_privateEPNS_5StateEPS0_PNS_9CallFrameERNS_9ArgumentsE+0x160) [0x6c97e0]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x2101) [0x5c4a01]\nirb(_ZN8rubinius11MachineCode19execute_specializedINS_16GenericArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x39d) [0x61af1d]\nirb(_ZN8rubinius12CompiledCode16default_executorEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x1a5) [0x6cd5b5]\nirb(_ZN8rubinius8CallSite11empty_cacheEPNS_5StateEPS0_PNS_9CallFrameERNS_9ArgumentsE+0x160) [0x6c8f90]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x201c) [0x5c491c]\nirb(_ZN8rubinius11MachineCode17execute_as_scriptEPNS_5StateEPNS_12CompiledCodeEPNS_9CallFrameE+0x22c) [0x61a91c]\nirb(_ZN8rubinius6System13vm_run_scriptEPNS_5StateERNS_11GCTokenImplEPNS_12CompiledCodeEPNS_9CallFrameE+0xbd) [0x719e5d]\nirb(_ZN8rubinius10Primitives13vm_run_scriptEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x67) [0x6520c7]\nirb(_ZN8rubinius8CallSite11empty_cacheEPNS_5StateEPS0_PNS_9CallFrameERNS_9ArgumentsE+0x160) [0x6c8f90]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x201c) [0x5c491c]\nirb(_ZN8rubinius11MachineCode19execute_specializedINS_16GenericArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x39d) [0x61af1d]\nirb(_ZN8rubinius8CallSite19empty_cache_privateEPNS_5StateEPS0_PNS_9CallFrameERNS_9ArgumentsE+0x160) [0x6c97e0]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x201c) [0x5c491c]\nirb(_ZN8rubinius16BlockEnvironment19execute_interpreterEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE+0x352) [0x6c6e22]\nirb(_ZN8rubinius16BlockEnvironment6invokeEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE+0x20b) [0x6c6a5b]\nirb(_ZN8rubinius16BlockEnvironment10call_underEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0xe8) [0x6c72e8]\nirb(_ZN8rubinius10Primitives16block_call_underEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x4f) [0x624baf]\nirb(_ZN8rubinius8CallSite19empty_cache_privateEPNS_5StateEPS0_PNS_9CallFrameERNS_9ArgumentsE+0x160) [0x6c97e0]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x227e) [0x5c4b7e]\nirb(_ZN8rubinius11MachineCode19execute_specializedINS_16GenericArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x39d) [0x61af1d]\nirb(_ZN8rubinius8CallSite11empty_cacheEPNS_5StateEPS0_PNS_9CallFrameERNS_9ArgumentsE+0x160) [0x6c8f90]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x201c) [0x5c491c]\nirb(_ZN8rubinius11MachineCode19execute_specializedINS_16GenericArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x39d) [0x61af1d]\nirb(_ZN8rubinius8CallSite19empty_cache_privateEPNS_5StateEPS0_PNS_9CallFrameERNS_9ArgumentsE+0x160) [0x6c97e0]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x201c) [0x5c491c]\nirb(_ZN8rubinius11MachineCode17execute_as_scriptEPNS_5StateEPNS_12CompiledCodeEPNS_9CallFrameE+0x22c) [0x61a91c]\nirb(_ZN8rubinius6System13vm_run_scriptEPNS_5StateERNS_11GCTokenImplEPNS_12CompiledCodeEPNS_9CallFrameE+0xbd) [0x719e5d]\nirb(_ZN8rubinius10Primitives13vm_run_scriptEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x67) [0x6520c7]\nirb(_ZN8rubinius8CallSite11empty_cacheEPNS_5StateEPS0_PNS_9CallFrameERNS_9ArgumentsE+0x160) [0x6c8f90]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x201c) [0x5c491c]\nirb(_ZN8rubinius11MachineCode19execute_specializedINS_11OneArgumentEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x34d) [0x61be8d]\nirb(_ZN8rubinius12CompiledCode16default_executorEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x1a5) [0x6cd5b5]\nirb(_ZN8rubinius8CallSite11empty_cacheEPNS_5StateEPS0_PNS_9CallFrameERNS_9ArgumentsE+0x160) [0x6c8f90]\nirb(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x201c) [0x5c491c]\n--- end system backtrace ---\n--- begin Ruby backtraces ---\n--- Thread 1 backtrace ---\nSegmentation fault\nchris@lovelace ~ $ \n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "`Method#parameters` fail with kwargs",
                "body": "Hello,\n\nProblem:\n`Method#parameters` outputs wrong on a method with defined kwargs.\n\nCode sample:\n\n``` ruby\ndef foo(a, b = nil, c:, d: nil)\nend\n\nputs \"#{RUBY_ENGINE} #{RUBY_VERSION}\"\np method(:foo).parameters\n```\n\nRuby output\n\n```\nruby 2.2.3\n[[:req, :a], [:opt, :b], [:keyreq, :c], [:key, :d]]\n```\n\nRubinius output\n\n```\nrbx 2.1.0\n[[:req, :a], [:opt, :b], [:opt, :\"_:1\"]]\n```\n\nVersions:\n\n```\nruby -v: rubinius 2.6 (2.1.0 cdcec7e8 2015-12-20 3.5.1 JI) [x86_64-darwin15.0.0]\nchruby: 0.3.9\nuname -a: Darwin localhost 15.0.0 Darwin Kernel Version 15.0.0: Sat Sep 19 15:53:46 PDT 2015; root:xnu-3247.10.11~1/RELEASE_X86_64 x86_64\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "CVE-2015-7551 / CVE-2009-5147 ",
                "body": "Ruby core was just updated (e.g. 2.2.4) to address these CVEs. Do they apply to Rubinius?\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Threading issues under heavy concurrency",
                "body": "I'm running into the following error dump in RBX 2.5.8 running a simple Sinatra/Sequel application on Puma under high concurrency (eight workers, 32 threads per worker, 256 threads total):\n\n```\nThe Rubinius process is aborting with signal: SIGSEGV\n--- begin system info ---\nnode info: TFB-all #111-Ubuntu SMP Fri Nov 6 18:17:06 UTC 2015\n--- end system info ---\n--- begin rubinius info ---\nprocess info: testrunner rbx 10952 2.5.8 2.1.0 2015-07-30 bef51ae3 3.4 JIT\n--- end rubinius info ---\n--- begin system backtrace ---\npuma: cluster worker 4: 10836 [sinatra-sequel]() [0x68ca54]\n/lib/x86_64-linux-gnu/libpthread.so.0(+0x10340) [0x7fda8a626340]\npuma: cluster worker 4: 10836 [sinatra-sequel](_ZN8rubinius15MonoInlineCache11check_cacheEPNS_5StateEPNS_8CallSiteEPNS_9CallFrameERNS_9ArgumentsE+0x19) [0x6f3e69]\npuma: cluster worker 4: 10836 [sinatra-sequel](_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x201c) [0x5c83ec]\npuma: cluster worker 4: 10836 [sinatra-sequel](_ZN8rubinius11MachineCode19execute_specializedINS_12TwoArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_\npuma: cluster worker 4: 10836 [sinatra-sequel](_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x201c) [0x5c83ec]\npuma: cluster worker 4: 10836 [sinatra-sequel](_ZN8rubinius11MachineCode19execute_specializedINS_12TwoArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_\npuma: cluster worker 4: 10836 [sinatra-sequel](_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x201c) [0x5c83ec]\npuma: cluster worker 4: 10836 [sinatra-sequel](_ZN8rubinius16BlockEnvironment19execute_interpreterEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE+0x352)\npuma: cluster worker 4: 10836 [sinatra-sequel](_ZN8rubinius16BlockEnvironment6invokeEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE+0x20b) [0x6ca52b]\npuma: cluster worker 4: 10836 [sinatra-sequel](_ZN8rubinius16BlockEnvironment4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsEi+0x3d) [0x6cab9d]\npuma: cluster worker 4: 10836 [sinatra-sequel](_ZN8rubinius4Proc4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsE+0x267) [0x70edd7]\npuma: cluster worker 4: 10836 [sinatra-sequel](_ZN8rubinius10Primitives9proc_callEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x4f) [0x6477ff]\npuma: cluster worker 4: 10836 [sinatra-sequel](rbx_splat_send_private+0x87) [0x7a22a7]\n[0x7fda8408c947]\n--- end system backtrace ---\n--- begin Ruby backtraces ---\n--- Thread 1 backtrace ---\nThread#join in kernel/bootstrap/thread.rb:209 (+46)\nPuma::Cluster#worker in /FrameworkBenchmarks/frameworks/Ruby/sinatra-sequel/vendor/bundle/rbx/2.1/gems/puma-2.15.3/lib/puma/cluster.rb:238 (+308)\n__block__ in /FrameworkBenchmarks/frameworks/Ruby/sinatra-sequel/vendor/bundle/rbx/2.1/gems/puma-2.15.3/lib/puma/cluster.rb:109 (+11)\nProcess.fork in kernel/common/process.rb:95 (+31)\nKernel#fork in kernel/common/kernel.rb:339 (+22)\n__block__ in /FrameworkBenchmarks/frameworks/Ruby/sinatra-sequel/vendor/bundle/rbx/2.1/gems/puma-2.15.3/lib/puma/cluster.rb:109 (+26)\nInteger#times in kernel/common/integer.rb:196 (+33)\nPuma::Cluster#spawn_workers in /FrameworkBenchmarks/frameworks/Ruby/sinatra-sequel/vendor/bundle/rbx/2.1/gems/puma-2.15.3/lib/puma/cluster.rb:105 (+33)\nPuma::Cluster#run in /FrameworkBenchmarks/frameworks/Ruby/sinatra-sequel/vendor/bundle/rbx/2.1/gems/puma-2.15.3/lib/puma/cluster.rb:387 (+684)\nPuma::CLI#run in /FrameworkBenchmarks/frameworks/Ruby/sinatra-sequel/vendor/bundle/rbx/2.1/gems/puma-2.15.3/lib/puma/cli.rb:215 (+222)\nObject#__script__ in /FrameworkBenchmarks/frameworks/Ruby/sinatra-sequel/vendor/bundle/rbx/2.1/gems/puma-2.15.3/bin/puma:10 (+46)\nKernel#load in kernel/common/kernel.rb:498 (+58)\nObject#__script__ in /FrameworkBenchmarks/frameworks/Ruby/sinatra-sequel/vendor/bundle/rbx/2.1/bin/puma:23 (+148)\nRubinius::CodeLoader#load_script in kernel/delta/code_loader.rb:66 (+52)\nRubinius::CodeLoader.load_script in kernel/delta/code_loader.rb:152 (+40)\nRubinius::Loader#script in kernel/loader.rb:656 (+214)\nRubinius::Loader#main in kernel/loader.rb:842 (+77)\n--- Thread 15 backtrace ---\nIO.select in kernel/common/io.rb:931 (+218)\n__block__ in /FrameworkBenchmarks/frameworks/Ruby/sinatra-sequel/vendor/bundle/rbx/2.1/gems/puma-2.15.3/lib/puma/cluster.rb:200 (+9)\nProc#call in kernel/bootstrap/proc.rb:20 (+201 jit)\nThread#__run__ in kernel/bootstrap/thread.rb:352 (+117)\n--- Thread 16 backtrace ---\n__block__ in /FrameworkBenchmarks/frameworks/Ruby/sinatra-sequel/vendor/bundle/rbx/2.1/gems/puma-2.15.3/lib/puma/cluster.rb:233 (+27)\nProc#call in kernel/bootstrap/proc.rb:0 (+204)\nThread#__run__ in kernel/bootstrap/thread.rb:352 (+117)\n--- Thread 17 backtrace ---\nMutex#lock in kernel/common/mutex.rb:41 (+38)\nMutex#synchronize in kernel/common/mutex.rb:60 (+3)\nSequel::ThreadedConnectionPool#sync in /FrameworkBenchmarks/frameworks/Ruby/sinatra-sequel/vendor/bundle/rbx/2.1/gems/sequel-4.28.0/lib/sequel/connection_pool/threaded.rb:26\n2015-12-03 04:45:02 +0000: Read error\n\n    Data object has already been freed (ArgumentError)\n\nBacktrace:\n\n          Puma::Server#handle_request at vendor/bundle/rbx/2.1/gems/puma-2.15.3\n                                         /lib/puma/server.rb:582\n          Puma::Server#process_client at vendor/bundle/rbx/2.1/gems/puma-2.15.3\n                                         /lib/puma/server.rb:388\n              { } in Puma::Server#run at vendor/bundle/rbx/2.1/gems/puma-2.15.3\n                                         /lib/puma/server.rb:270\n                             Proc#call at kernel/bootstrap/proc.rb:20\n { } in Puma::ThreadPool#spawn_thread at vendor/bundle/rbx/2.1/gems/puma-2.15.3\n                                         /lib/puma/thread_pool.rb:106\n                             Proc#call at kernel/bootstrap/proc.rb:20\n                        Thread#__run__ at kernel/bootstrap/thread.rb:352\n```\n\nThe last error repeats ad infinitum, presumably because one cluster worker went haywire and requests dispatched to it are not being handled correctly. \n\nDropping down to seven workers at 32 threads each (and 15 workers at 16 threads each) seems to be fine so I must be hitting some kind of limit. I'm just a simple country programmer but I'm guessing this is going to be tricky to debug; let me know what kind of detailed debugging information would be helpful here. \n\nFor context, I'm working on test cases for the [FrameworkBenchmarks](https://github.com/TechEmpower/FrameworkBenchmarks) effort, which attempts to pit different web frameworks against each other for performance analysis. [The code I'm using](https://github.com/mwpastore/FrameworkBenchmarks/tree/sinatra-sequel-rbx/frameworks/Ruby/sinatra-sequel) runs under YARV and JRuby so I'd like to get it running under Rubinius for comparison. I'm having a separate issue with Rubinius and this code base that is resulting in responses coming back malformed under load, so I'm looking into that now. Thanks in advance for any help you can provide.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Marshaling difference between Rubinius and other Rubies",
                "body": "A marshalled custom object fails to unmarshal on Rubinius 2.5.8, but it works on JRuby and MRI Ruby.\n\nMinimal test case is here: https://github.com/philipmw/rubinius-issue-3527. Please refer to the README in that project.\n\nAn excerpt from that README:\n\n A _Promise_ object wraps an _InnerClass_ object and delegates all unrecognized method calls to it.  _Promise_ inherits from _BasicObject_, so it's effectively a transparent wrapper around _InnerClass_.\n\nWhen marshaling on Rubinius, the _Promise_ object is called with `#__class__`.  By default, this method is delegated to _InnerClass_ like all others.  As a result, the marshal string looks like `InnerClass > InnerClass`, which fails when unmarshaling.\n\nIn contrast, in Rubies, the _Promise_ object knows its class name, the `#__class__` method is never called, so it does not get delegated to the inner class.  The marshal string looks like `Promise > InnerClass` and correctly unmarshals.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "autoload chaining broken in 2.5.8 cf. MRI 2.1.7",
                "body": "Consider a main script `main.rb` that autoloads `:Foo` from `foo_extended.rb`. `foo_extended.rb` in turn autoloads `:Foo` from `foo_base.rb` and subsequently reopens the class `Foo` to extend it. In MRI 2.1.7, `main.rb` can see the composite class `Foo`, but in rbx 2.5.8, `main.rb` can only see the definition of `Foo` from `foo_extended.rb`; the base class is neither loaded nor extended. \n- Doing `Foo.class_eval` in `foo_extended.rb` instead of `class Foo` does not affect the behavior described above. \n- Subclassing `Foo` in `foo_extended.rb` instead of monkeypatching `Foo` works in both MRI 2.1.7 and rbx 2.5.8. \n- `require`'ing `foo_extended.rb` instead of autoloading it also works in both. \n#### `rbx -v` (built from source using `ruby-build`)\n\n```\nrubinius 2.5.8 (2.1.0 bef51ae3 2015-09-28 3.4 JI) [x86_64-linux-gnu]\n```\n#### `ruby -v` (built from source using `ruby-build`)\n\n```\nruby 2.1.7p400 (2015-08-18 revision 51632) [x86_64-linux]\n```\n#### `uname -a`\n\n```\nLinux aphrodite 4.1.5-x86_64-linode61 #7 SMP Mon Aug 24 13:46:31 EDT 2015 x86_64 x86_64 x86_64 GNU/Linux\n```\n\nI can't find `config.rb` or `configure.log` but if you can give me a hint where to locate them I will upload them as a Gist. \n\n```\nmwp@aphrodite:~/.rbenv/versions$ find rbx-2.5.8/ -name config.rb\nrbx-2.5.8/gems/gems/i18n-0.7.0/lib/i18n/config.rb\nrbx-2.5.8/gems/gems/rubysl-webrick-2.0.0/lib/webrick/config.rb\nrbx-2.5.8/gems/gems/rack-1.6.4/lib/rack/config.rb\nrbx-2.5.8/gems/gems/http-0.9.8/spec/support/servers/config.rb\nrbx-2.5.8/gems/gems/bundler-1.10.6/lib/bundler/cli/config.rb\nrbx-2.5.8/gems/gems/bundler-1.10.5/lib/bundler/cli/config.rb\nrbx-2.5.8/gems/gems/rubysl-openssl-2.3.0/lib/openssl/config.rb\nrbx-2.5.8/gems/gems/rubysl-xmlrpc-2.0.0/lib/xmlrpc/config.rb\nmwp@aphrodite:~/.rbenv/versions$ find rbx-2.5.8/ -name configure.log\nmwp@aphrodite:~/.rbenv/versions$\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Statically allocating unmodified string literals",
                "body": "Currently all strings, including literals, are allocated on the fly. For example, this will allocate a string for every iteration:\n\n``` ruby\nloop { 'Ruby' }\n```\n\nA more realistic example is the following:\n\n``` ruby\nsome_list.map do |value|\n  {'some_key' => value}\nend\n```\n\nHere every iteration would allocate a String for the Hash key, a Hash and whatever comes along with a Hash. In both cases (and many other real world scenarios) these Strings are not modified, or at least very rarely.\n\nMRI offers a workaround by calling `.freeze` on a String, turning it into an immutable statically allocated String. The obvious downside of this approach is having to call `.freeze` (or use the `f` suffix) on every darn String.\n\nThe solution I propose (and I'm just throwing this over the fence so I don't forget about it) is some heuristic that:\n1. Determines if a String _literal_ is used in a mutable way or not\n2. If the String is not mutated it's allocated statically and re-used\n\nWhether this can be done during compilation remains to be seen. While the compiler _can_ know if a method mutates any instance variables, it _doesn't_ know what any primitives might do. One solution to this would be to just statically allocate literals right off the bat and copy them whenever mutated. Because this would be a runtime check we can handle primitives mutating Strings.\n\nA compile time check would be most ideal as it removes any runtime overhead. What we could do is the following:\n1. If a String method mutates an instance variable, tag the method as a \"mutator\" \n2. if a String method calls a primitive, also tag it as a \"mutator\"\n3. If a method is called that calls a mutator method, also tag the method as a mutator (recursive)\n4. If a mutator method is called on a String, allocate it as usual (`push_literal` + `string_dup`), if not we can skip the `string_dup`)\n\nRegardless of whether we go with handling this during compilation or during runtime (or maybe in the JIT?), it would in theory led to far fewer String allocations _without_ having to use `.freeze` or the `f` suffix.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Rubinius doesn't implement ARGFClass#inplace_mode or #inplace_mode=",
                "body": "http://ruby-doc.org/core-1.9.3/ARGF.html#method-i-inplace_mode\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "rbx-2.5.8 crash with Postgres and SQLite",
                "body": "I've such a rather strange crash (SIGSEGV) on rbx-2.5.8:\n\n1) For one of my projects (https://travis-ci.org/korobkov/perth)\nit fails only with Postgres (via `pg` gem): https://travis-ci.org/korobkov/perth/jobs/78735784\nbut works well with SQLite (via `sqlite3` gem): https://travis-ci.org/korobkov/perth/jobs/78735787\n\n2) But for another my project (https://travis-ci.org/korobkov/fremantle)\nit fails both with Postgres (via `pg` gem): https://travis-ci.org/korobkov/fremantle/jobs/78737238\nand with SQLite (via `sqlite3` gem): https://travis-ci.org/korobkov/fremantle/jobs/78737241\n\nFor comparison: the same project code being tested on different other ruby implementations (MRI 2.1 and 2.2) works pretty well (you could see green marks on their tests in Travis).\n\nBoth projects are Free Software and fully available in source to clone and reproduce the issue.\nI hope these backtraces will be useful for searching and fixing the issue.\nI'm also open and could provide some additional debug info should you say it's needed.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Segfault running rubocop against AMS on Rails 4.0/4.2",
                "body": "- https://github.com/rails-api/active_model_serializers/pull/1106\n  - https://travis-ci.org/rails-api/active_model_serializers/jobs/78695535\n  - https://travis-ci.org/rails-api/active_model_serializers/jobs/78695537\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "rbx 2.5.8 + celluloid (?) + rspec",
                "body": "I'm getting a segfault with \"invalid handle usage detected\" when I'm trying to run tests. Will be chasing down the exact cause today, but I figured I'd open an issue here while I looked at narrowing it down.\n\nThe stack dump and the bundle list is here:\nhttps://gist.github.com/kayakyakr/bce313661c3fc4bd6890\n\nPeculiarly, it does not fail with an error if I only run a single file. Only errors on a full suite.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Build failure on Alpine Linux (in Docker)",
                "body": "Had to install LLVM/clang 3.5.1 (by building the older .apk packages in their aports repo) due to https://github.com/rubinius/rubinius/pull/3367 not being ready, but running on Alpine 3.2, getting the following:\n\n```\n4: CXX vm/util/file.cpp\n4: CXX vm/util/logger.cpp\nvm/util/logger.cpp:386:54: error: use of undeclared identifier 'LOCK_EX'\n        utilities::file::LockGuard guard(logger_fd_, LOCK_EX);\n                                                     ^\n1 error generated.\nrake aborted!\nError compiling\n\nTasks: TOP => install => build:build => vm/vm\n(See full trace by running task with --trace)\nError: clang++ -I/usr/src/rubinius-2.5.8/vm -I/usr/src/rubinius-2.5.8/vm/include -I/usr/src/rubinius-2.5.8/vm/builtin -I. -Ivm/test/cxxtest -I/usr/src/rubinius-2.5.8/vendor/libsodium/src/libsodium/include -I/usr/src/rubinius-2.5.8/vendor/udis86 -I/usr/src/rubinius-2.5.8/vendor/libffi/include -Ivendor/double-conversion/src -DHAVE_CONFIG_H -I/usr/src/rubinius-2.5.8/vm/include/capi -I/usr/src/rubinius-2.5.8/vendor/oniguruma -I/usr/src/rubinius-2.5.8/vendor/libtommath -pipe -Wall -fno-omit-frame-pointer -g -mno-omit-leaf-frame-pointer -fPIC  -O2 -DHAVE_SPT_REUSEARGV -DHAVE_CLOCK_GETTIME -DHAVE_NL_LANGINFO -DHAVE_POSIX_FADVISE -DHAVE_STRNLEN -DHAVE_TIMERFD -DHAVE_INOTIFY -DHAVE_TM_GMTOFF -DHAVE_TM_ZONE -DHAVE_TIMEZONE -DHAVE_TZNAME -DHAVE_DAYLIGHT -DHAVE_ALLOCA_H -DHAVE_STRING_H -DHAVE_SYS_TIME_H -DHAVE_SYS_TIMES_H -DHAVE_SYS_TYPES_H -DHAVE_UNISTD_H -DHAVE_STDARG_H -I/usr/include -I/usr/include -D_DEBUG -D_GNU_SOURCE -fPIC -DENABLE_LLVM -Wno-unused-function -Werror -DRBX_PROFILER -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -fno-rtti -fvisibility-inlines-hidden    -std=c++11 -c -o vm/util/artifacts/logger.cpp.o vm/util/logger.cpp\nThe command '/bin/sh -c cd \"/usr/src/rubinius-${RUBINIUS_VERSION}\" && gem install bundler && bundle install && ./configure --llvm-config=/usr/bin/llvm-config --libc=musl && rake install' returned a non-zero code: 1\n```\n\nHopefully all of the required debug info is available above (including the clang++ command), let me know if you need anything else.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Arity not consistent on rbx vs. CRuby, JRuby",
                "body": "e.g. https://travis-ci.org/rails-api/active_model_serializers/jobs/77546313 in https://github.com/rails-api/active_model_serializers/pull/1004 where \n\n``` ruby\nclass Foo\n  def my_method(name)\n    # something\n  end\nend\n```\n\nhas an arity of 1 on CRuby and JRub and rbx\n\nwhereas\n\n``` ruby\nclass Foo\n  alias :my_method, :send\nend\n```\n\nhas an arity of -1 on CRuby and JRuby, but appears to have an arity of -2 on rbx\n\n(note: details may be inexact as I haven't been able to install rbx on any of my machines for a long while. So, just trying to be helpful)\n\nThis is a new rbx-only failure on this PR. Previously it was https://github.com/rails-api/active_model_serializers/pull/1004#issuecomment-121141494\n\nRbx is a drop-in replacement for CRuby except when it isn't :)\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "VM event loop for dispatching events such as cache resets, object allocations and more",
                "body": "Currently the VM has a bunch of places where based on a certain condition an extra \"event\" is triggered. For example, whenever `System::vm_inc_global_serial()` is called it will log whenever `-Xserial.debug` is set. Another example is the object allocation code emitting dtrace/systemtap events. A third example would be signal handlers. In almost all (if not all) cases this logic is hardcoded in the C++ side of things. This means that there's no way to subscribe to these events from Ruby. \n\nIdeally there's some sort of event loop to which the C++ VM publishes events. Ruby code in turn can subscribe and act upon these events. Such a system could then be used as the building blocks for #3488 . @brixen and I have discussed this on a few occasions in the past, but to date no concrete proposal has been drafted.\n\nAs a mockup I'd envision usage of this system to be something along the lines of the following:\n\n``` ruby\nRubinius.events.subscribe(:signal) do |signal_name|\n  case signal_name\n  when 'USR1'\n    ...\n  when 'TERM'\n    ...\n  end\nend\n\nRubinius.events.publish(:signal, 'TERM')\n```\n\nThere are a few tricky things here to consider:\n1. VM code would have to call back in Ruby. Since VM code can run before Ruby code is fully set up this could mean that events are fired before `Rubinius.events` ever exists. \n2. To not degrade performance the subscribers should be executed in a single background thread. Using one thread per handler is also an option, but this could put too much strain on the system.\n3. When passing objects from a producer to the subscribers, said objects should be visible to the GC. We don't want junk to be passed around because the GC accidentally collected an object.\n\nA bunch of use cases for this that I can think of from the top of my head:\n- Tracking object allocations\n- Tracking method cache resets\n- Tracking constant cache resets \n- Emitting events to statsd and friends (this might even allow us to move this logic from C++ to Ruby)\n- Signal handling\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Enhance method/constant cache invalidation tracking",
                "body": "Currently there's the VM option `ic.debug` that can be used to display when method/constant caches are being invalidated. There are a few problems with this option:\n1. It controls printing of both method _and_ constant cache (well, global serial increases to be exact) invalidations.\n2. Because it's set as a VM option there will be a lot of noise generated by code loaded during boot (e.g. RubyGems). For many users this won't be useful.\n3. To the best of my knowledge we don't expose any interface to Ruby to see where invalidations happen.\n\nTo solve this I'd like to propose 2 changes:\n1. Two VM options to control printing of method/constant cache invalidations separately (e.g. `-Xmethod_cache.debug` and `-Xconstant_cache.debug`)\n2. A Ruby interface similar to the profiler (used by the above option)\n\nI envision the Ruby interface would look something like this:\n\n``` ruby\nrequire 'rubinius/cache-tracer' # or whatever we'd call it\n\nresults = Rubinius::CacheTracer.trace do\n  # some code here\nend\n\nresults.each do |result|\n  p result.location # => #<Rubinius::Location 0x00......>\n  p result.type # => :constant\n  p result.receiver # => #<Object 0x0 ...>\n  p result.method => # :extend\nend\n```\n\nFor global tracing there would be `Rubinius::CacheTracer.start` and `Rubinius::CacheTracer.stop`, which would be used by the block form.\n\nThere is one tricky thing here: would tracing samples be collected thread-local, or globally? If they were to be collected globally (probably the easiest) we should _at least_ include the thread IDs/Objects in the result entries. This would allow application code to filter out traces from certain threads.\n\nIssue that inspired this request: https://gitlab.com/gitlab-org/gitlab-ce/issues/2343\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Process.fork appears to be broken when used within Fiber.",
                "body": "With the following test case:\n\n```\npid = nil\n\n$stderr.puts \"I'm parent #{Process.pid}\"\n\nFiber.new do\n    pid = fork do\n        $stderr.puts \"I'm forked #{Process.pid}\"\n        exit(2)\n    end\nend.resume\n\nputs \"Hello from #{Process.pid}\"\n\nProcess.waitpid(pid) if pid\n```\n\nI get the following behaviour:\n\n```\n^_^ > rvm use default\nUsing /Users/samuel/.rvm/gems/ruby-2.1.2\n^_^ > ruby test.rb   \nI'm parent 81016\nHello from 81016\nI'm forked 81017\n^_^ > rvm use rbx    \nUsing /Users/samuel/.rvm/gems/rbx-2.5.2\n^_^ > ruby test.rb\nI'm parent 81122\nHello from 81122\nI'm forked 81123\nHello from 81123\n```\n\nIn the case of rbx, it appears that somehow the forked process resumes at the end of the fiber. Even after reading through the rubinius code it's not immediately obvious how this happens.\n\nThanks for all your hard work on Rubinius.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "2.5.8 fails rake's test suite",
                "body": "```\nExpected \"rbx: vm/linkedlist.cpp:38: void LinkedList::remove(LinkedList::Node*): Assertion `!head_->prev()' failed.\\n\" to be empty.\n```\n\n```\nhttps://travis-ci.org/ruby/rake/jobs/76136658\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "2.5.8 crashes running Rubocop",
                "body": "`rubinius 2.5.8 (2.1.0 bef51ae3 2015-07-14 3.4 JI) [x86_64-linux-gnu]`\n\nSide note: JRuby 1.7.21 and 9.0.0.0 both hang on rubocop 0.33.0 installation.\n\n```\nbundle exec rubocop --display-cop-names\nwarning: parser/current is loading parser/ruby21, which recognizes\nwarning: 2.1.6-compliant syntax, but you are running 2.1.0.\nwarning: please see https://github.com/whitequark/parser#compatibility-with-ruby-mri.\nInspecting 410 files\n..............The Rubinius process is aborting with signal: SIGSEGV\n--- begin system info ---\nnode info: testing-worker-linux-docker-fa820351-3357-linux-16 #69-Ubuntu SMP Thu Nov 13 17:53:56 UTC 2014\n--- end system info ---\n--- begin rubinius info ---\nprocess info: travis rbx 4765 2.5.8 2.1.0 2015-07-14 bef51ae3 3.4 JIT\n--- end rubinius info ---\n--- begin system backtrace ---\nrbx() [0x69956a]\n/lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7ff08a9c2cb0]\nrbx(_ZN8rubinius15MonoInlineCache11check_cacheEPNS_5StateEPNS_8CallSiteEPNS_9CallFrameERNS_9ArgumentsE+0x58) [0x6f88b8]\nrbx(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x1740) [0x5f1b40]\nrbx(_ZN8rubinius11MachineCode19execute_specializedINS_11NoArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x21a) [0x63588a]\nrbx(_ZN8rubinius8CallSite17empty_cache_vcallEPNS_5StateEPS0_PNS_9CallFrameERNS_9ArgumentsE+0x14d) [0x6cadbd]\nrbx(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x166e) [0x5f1a6e]\nrbx(_ZN8rubinius11MachineCode19execute_specializedINS_14ThreeArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x242) [0x6345a2]\nrbx(_ZN8rubinius8CallSite19empty_cache_privateEPNS_5StateEPS0_PNS_9CallFrameERNS_9ArgumentsE+0x146) [0x6cafc6]\nrbx(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x1740) [0x5f1b40]\nrbx(_ZN8rubinius11MachineCode19execute_specializedINS_11OneArgumentEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE+0x232) [0x634f72]\nrbx(_ZN8rubinius8CallSite11empty_cacheEPNS_5StateEPS0_PNS_9CallFrameERNS_9ArgumentsE+0x146) [0x6cb1d6]\nrbx(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x1740) [0x5f1b40]\nrbx(_ZN8rubinius16BlockEnvironment19execute_interpreterEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE+0x268) [0x6c6f48]\nrbx(_ZN8rubinius16BlockEnvironment6invokeEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE+0x85) [0x6c7e15]\nrbx(_ZN8rubinius16BlockEnvironment4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsEi+0x3d) [0x6c803d]\nrbx(_ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE+0x43ab) [0x5f47ab]\nrbx(_ZN8rubinius16BlockEnvironment19execute_interpreterEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE+0x268) [0x6c6f48]\nrbx(_ZN8rubinius16BlockEnvironment6invokeEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE+0x85) [0x6c7e15]\nrbx(_ZN8rubinius16BlockEnvironment4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsEi+0x3d) [0x6c803d]\nrbx(rbx_yield_stack+0xb2) [0x7be132]\n[0x7ff08b34439b]\n--- end system backtrace ---\n--- begin Ruby backtraces ---\n--- Thread 1 backtrace ---\nRuboCop::Cop::Cop#cop_config in /home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/rubocop-0.33.0/lib/rubocop/cop/cop.rb:123 (+6)\nRuboCop::Cop::Cop#file_name_matches_any? in /home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/rubocop-0.33.0/lib/rubocop/cop/cop.rb:223 (+3)\nRuboCop::Cop::Cop#relevant_file? in /home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/rubocop-0.33.0/lib/rubocop/cop/cop.rb:197 (+11)\n__block__ in /home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/rubocop-0.33.0/lib/rubocop/cop/commissioner.rb:56 (+19)\n__block__ in kernel/common/enumerable.rb:83 (+11)\nArray#each in kernel/bootstrap/array.rb:76 (+53 jit)\nEnumerable#each_with_object in kernel/common/enumerable.rb:81 (+26)\nRuboCop::Cop::Commissioner#investigate in /home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/rubocop-0.33.0/lib/rubocop/cop/commissioner.rb:53 (+62)\nRuboCop::Cop::Team#inspect_file in /home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/rubocop-0.33.0/lib/rubocop/cop/team.rb:33 (+66)\nRuboCop::Runner#inspect_file in /home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/rubocop-0.33.0/lib/rubocop/runner.rb:135 (+70)\n__block__ in /home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/rubocop-0.33.0/lib/rubocop/runner.rb:106 (+40)\nKernel#loop in kernel/common/kernel.rb:511 (+29)\nRuboCop::Runner#do_inspection_loop in /home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/rubocop-0.33.0/lib/rubocop/runner.rb:100 (+17)\nRuboCop::Runner#process_file in /home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/rubocop-0.33.0/lib/rubocop/runner.rb:78 (+117)\n__block__ in /home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/rubocop-0.33.0/lib/rubocop/runner.rb:53 (+20)\nArray#each in kernel/bootstrap/array.rb:76 (+53 jit)\nRuboCop::Runner#inspect_files in /home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/rubocop-0.33.0/lib/rubocop/runner.rb:51 (+32)\nRuboCop::Runner#run in /home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/rubocop-0.33.0/lib/rubocop/runner.rb:30 (+17)\nRuboCop::CLI#run in /home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/rubocop-0.33.0/lib/rubocop/cli.rb:26 (+227)\n__block__ in /home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/rubocop-0.33.0/bin/rubocop:13 (+6)\nBenchmark.realtime in /home/travis/.rvm/rubies/rbx-2.5.8/gems/gems/rubysl-benchmark-2.0.1/lib/rubysl/benchmark/benchmark.rb:294 (+10)\nObject#__script__ in /home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/rubocop-0.33.0/bin/rubocop:12 (+89)\nKernel#load in kernel/common/kernel.rb:498 (+58)\nObject#__script__ in /home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/bin/rubocop:23 (+148)\nRubinius::CodeLoader#load_script in kernel/delta/code_loader.rb:66 (+52)\nRubinius::CodeLoader.load_script in kernel/delta/code_loader.rb:152 (+40)\nRubinius::Loader#script in kernel/loader.rb:656 (+214)\nRubinius::Loader#main in kernel/loader.rb:842 (+77)\n--- Thread 7 backtrace ---\nTimeout.watch_channel in /home/travis/.rvm/rubies/rbx-2.5.8/gems/gems/rubysl-timeout-2.0.0/lib/rubysl/timeout/timeout.rb:90 (+27)\n__block__ in /home/travis/.rvm/rubies/rbx-2.5.8/gems/gems/rubysl-timeout-2.0.0/lib/rubysl/timeout/timeout.rb:125 (+3)\nProc#call in kernel/bootstrap/proc.rb:0 (+204)\nThread#__run__ in kernel/bootstrap/thread.rb:352 (+117)\n--- end Ruby backtraces ---\nrake aborted!\nCommand failed with status (): [bundle exec rubocop --display-cop-names...]\nkernel/bootstrap/proc.rb:20:in `call'\n/home/travis/build/subledger/v3/tasks/lint.rake:14:in `__script__'\nkernel/bootstrap/proc.rb:20:in `call'\nkernel/bootstrap/array.rb:76:in `each'\n/home/travis/.rvm/rubies/rbx-2.5.8/gems/gems/rubysl-monitor-2.0.0/lib/rubysl/monitor/monitor.rb:211:in `synchronize (mon_synchronize)'\nkernel/bootstrap/array.rb:76:in `each'\n/home/travis/.rvm/rubies/rbx-2.5.8/gems/gems/rubysl-monitor-2.0.0/lib/rubysl/monitor/monitor.rb:211:in `synchronize (mon_synchronize)'\nkernel/bootstrap/array.rb:76:in `each'\nkernel/common/kernel.rb:498:in `load'\nkernel/delta/code_loader.rb:66:in `load_script'\nkernel/delta/code_loader.rb:152:in `load_script'\nkernel/loader.rb:656:in `script'\nkernel/loader.rb:842:in `main'\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Wrong result from proxy'd method (using method_missing) after JIT  ",
                "body": "Originally caught on rbx-1.8.7 + ActiveRecord, but reproducible on master without ActiveRecord:\n\n``` ruby\nclass A\n  def self.===(object)\n    object.is_a?(self)\n  end\nend\n\nclass Proxy\n  instance_methods.each { |m| undef_method m unless m =~ /(^__|^nil\\?$|^send$|proxy_)/ }\n\n  def initialize(c)\n    @target = c\n  end\n\n  def method_missing(method, *args, &block)\n    @target.send(method, *args, &block)\n  end\nend\n\na_obj = A.new\np_obj = Proxy.new(a_obj)\n\nputs \"Before A#=== is jitted:\"\nputs \"A === a_obj: #{A === a_obj}\" # returns true\nputs \"A === p_obj: #{A === p_obj}\" # returns true\n\nwhile !A.method(:===).executable.jitted? do\n  A === a_obj\nend\n\nputs \"\\nAfter A#=== is jitted:\"\nputs \"A === a_obj: #{A === a_obj}\" # returns true -- ok\nputs \"A === p_obj: #{A === p_obj}\" # returns false -- wrong\n```\n\n``` shell\n$ ruby -v\nrubinius 2.5.8.c16 (2.1.0 32b4d39f 2015-07-31 3.5.1 JI) [x86_64-darwin13.4.0]\n$ ruby repro.rb \nBefore A#=== is jitted:\nA === a_obj: true\nA === p_obj: true\n\nAfter A#=== is jitted:\nA === a_obj: true\nA === p_obj: false\n```\n\nI'm already working on this one.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Random crash report",
                "body": "This has just failed and I have no idea why. It succeeded after I run it the next time immediately.\nUnfortunately, I cannot reproduce the crash, but will update this issue if it happens again.\n\nHere is my system info:\n\n```\n$ rbx -v\nrubinius 2.5.8 (2.1.0 bef51ae3 2015-08-04 3.5.0 JI) [x86_64-linux-gnu]\n$ uname -a\nLinux localhost 3.18.7-gentoo #1 SMP Tue Feb 24 14:34:07 CET 2015 x86_64 Intel(R) Core(TM) i7-4820K CPU @ 3.70GHz GenuineIntel GNU/Linux\n\n```\n\n```\n$ rake db:migrate\nruby: vm/llvm/jit_memory_manager.cpp:142: rubinius::jit::FreeRangeHeader* rubinius::jit::MemoryRangeHeader::FreeBlock(rubinius::jit::FreeRangeHeader*): Assertion `FollowingBlock->ThisAllocated && \"Missed coalescing?\"' failed.\nThe Rubinius process is aborting with signal: SIGABRT\n--- begin system info ---\nnode info: localhost #1 SMP Tue Feb 24 14:34:07 CET 2015\n--- end system info ---\n--- begin rubinius info ---\nprocess info: mak rbx 1224 2.5.8 2.1.0 2015-08-04 bef51ae3 3.5.0 JIT\n--- end rubinius info ---\n--- begin system backtrace ---\n/home/mak/.rbenv/versions/rbx-2.5.8/bin/ruby() [0x6b7d69]\n/lib64/libpthread.so.0(+0x101c0) [0x7f0bb70511c0]\n/lib64/libc.so.6(gsignal+0x37) [0x7f0bb5e44287]\n/lib64/libc.so.6(abort+0x148) [0x7f0bb5e45668]\n/lib64/libc.so.6(+0x2e3a6) [0x7f0bb5e3d3a6]\n/lib64/libc.so.6(+0x2e452) [0x7f0bb5e3d452]\n/home/mak/.rbenv/versions/rbx-2.5.8/bin/ruby(_ZN8rubinius3jit17MemoryRangeHeader9FreeBlockEPNS0_15FreeRangeHeaderE+0x16f) [0x7c56ff]\n/home/mak/.rbenv/versions/rbx-2.5.8/bin/ruby(_ZN8rubinius9LLVMState6removeEPv+0x7d) [0x7d79dd]\n/home/mak/.rbenv/versions/rbx-2.5.8/bin/ruby(_ZN8rubinius11CodeManager5sweepEv+0xa0) [0x766a90]\n/home/mak/.rbenv/versions/rbx-2.5.8/bin/ruby(_ZN8rubinius12ObjectMemory21collect_mature_finishEPNS_5StateEPNS_6GCDataE+0x2b) [0x6a3ebb]\n/home/mak/.rbenv/versions/rbx-2.5.8/bin/ruby(_ZN8rubinius11ImmixMarker3runEPNS_5StateE+0x1ac) [0x76eadc]\n/home/mak/.rbenv/versions/rbx-2.5.8/bin/ruby(_ZN8rubinius14InternalThread3runEPv+0x9d) [0x60ed4d]\n/lib64/libpthread.so.0(+0x8213) [0x7f0bb7049213]\n/lib64/libc.so.6(clone+0x6d) [0x7f0bb5ef74ad]\n--- end system backtrace ---\n--- begin Ruby backtraces ---\n--- Thread 1 backtrace ---\nRubinius::CodeLoader#check_path in kernel/common/code_loader.rb:322 (+0)\n__block__ in kernel/common/code_loader.rb:358 (+37)\nArray#each in kernel/bootstrap/array.rb:76 (+53 jit)\nRubinius::CodeLoader#search_require_path in kernel/common/code_loader.rb:355 (+17)\nRubinius::CodeLoader#verify_require_path in kernel/common/code_loader.rb:396 (+82)\nRubinius::CodeLoader#resolve_require_path in kernel/common/code_loader.rb:420 (+114)\n__block__ in kernel/common/code_loader.rb:103 (+3)\nRubinius.synchronize in kernel/bootstrap/rubinius.rb:132 (+17)\nRubinius::CodeLoader#require in kernel/common/code_loader.rb:102 (+25)\nRubinius::CodeLoader.require in kernel/common/code_loader.rb:241 (+35)\nKernel#require in kernel/common/kernel.rb:756 (+9)\n__block__ in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/activesupport-4.2.0/lib/active_support/dependencies.rb:274 (+3)\nActiveSupport::Dependencies::Loadable#load_dependency in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/activesupport-4.2.0/lib/active_support/dependencies.rb:0 (+41)\nActiveSupport::Dependencies::Loadable#require in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/activesupport-4.2.0/lib/active_support/dependencies.rb:274 (+13)\n__block__ in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/railties-4.2.0/lib/rails/application/bootstrap.rb:0 (+22)\nBasicObject#instance_exec in kernel/common/eval.rb:101 (+267)\nRails::Initializable::Initializer#run in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/railties-4.2.0/lib/rails/initializable.rb:30 (+98)\n__block__ in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/railties-4.2.0/lib/rails/initializable.rb:55 (+96)\n__block__ in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/rubysl-tsort-2.0.1/lib/rubysl/tsort/tsort.rb:150 (+18)\n__block__ in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/rubysl-tsort-2.0.1/lib/rubysl/tsort/tsort.rb:183 (+4)\nTSort#each_strongly_connected_component_from in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/rubysl-tsort-2.0.1/lib/rubysl/tsort/tsort.rb:219 (+115)\n__block__ in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/rubysl-tsort-2.0.1/lib/rubysl/tsort/tsort.rb:0 (+28)\nArray#tsort_each_node in kernel/bootstrap/array.rb:76 (+55)\nTSort#each_strongly_connected_component in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/rubysl-tsort-2.0.1/lib/rubysl/tsort/tsort.rb:180 (+22)\nTSort#tsort_each in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/rubysl-tsort-2.0.1/lib/rubysl/tsort/tsort.rb:148 (+7)\nRails::Initializable#run_initializers in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/railties-4.2.0/lib/rails/initializable.rb:54 (+32)\nRails::Application#initialize! in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/railties-4.2.0/lib/rails/application.rb:352 (+33)\nRails::Railtie.initialize! in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/railties-4.2.0/lib/rails/railtie.rb:194 (+114)\nObject#__script__ in /home/mak/projects/choirStats/config/environment.rb:6 (+25)\nRubinius::CodeLoader.require in kernel/common/code_loader.rb:247 (+80)\nKernel#require in kernel/common/kernel.rb:756 (+9)\n__block__ in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/activesupport-4.2.0/lib/active_support/dependencies.rb:274 (+3)\nActiveSupport::Dependencies::Loadable#load_dependency in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/activesupport-4.2.0/lib/active_support/dependencies.rb:0 (+41)\nActiveSupport::Dependencies::Loadable#require in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/activesupport-4.2.0/lib/active_support/dependencies.rb:274 (+13)\nRails::Application#require_environment! in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/railties-4.2.0/lib/rails/application.rb:328 (+29)\n__block__ in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/railties-4.2.0/lib/rails/application.rb:443 (+15)\nProc#call in kernel/bootstrap/proc.rb:0 (+204)\n__block__ in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/rake-10.4.2/lib/rake/task.rb:0 (+32)\nArray#each in kernel/bootstrap/array.rb:76 (+55)\nRake::Task#execute in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/rake-10.4.2/lib/rake/task.rb:235 (+111)\n__block__ in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/rake-10.4.2/lib/rake/task.rb:179 (+80)\nMonitorMixin#synchronize in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/rubysl-monitor-2.0.0/lib/rubysl/monitor/monitor.rb:211 (+13)\nRake::Task#invoke_with_call_chain in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/rake-10.4.2/lib/rake/task.rb:172 (+25)\n__block__ in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/rake-10.4.2/lib/rake/task.rb:201 (+24)\nArray#each in kernel/bootstrap/array.rb:76 (+55)\nRake::Task#invoke_prerequisites in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/rake-10.4.2/lib/rake/task.rb:0 (+30)\n__block__ in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/rake-10.4.2/lib/rake/task.rb:178 (+64)\nMonitorMixin#synchronize in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/rubysl-monitor-2.0.0/lib/rubysl/monitor/monitor.rb:211 (+13)\nRake::Task#invoke_with_call_chain in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/rake-10.4.2/lib/rake/task.rb:172 (+25)\nRake::Task#invoke in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/rake-10.4.2/lib/rake/task.rb:165 (+47)\nRake::Application#invoke_task in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/rake-10.4.2/lib/rake/application.rb:150 (+232)\n__block__ in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/rake-10.4.2/lib/rake/application.rb:106 (+7)\nArray#each in kernel/bootstrap/array.rb:76 (+55)\n__block__ in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/rake-10.4.2/lib/rake/application.rb:0 (+34)\nRake::Application#run_with_threads in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/rake-10.4.2/lib/rake/application.rb:115 (+25)\nRake::Application#top_level in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/rake-10.4.2/lib/rake/application.rb:100 (+7)\n__block__ in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/rake-10.4.2/lib/rake/application.rb:78 (+11)\nRake::Application#standard_exception_handling in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/rake-10.4.2/lib/rake/application.rb:176 (+9)\nRake::Application#run in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/rake-10.4.2/lib/rake/application.rb:75 (+7)\nObject#__script__ in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/rake-10.4.2/bin/rake:33 (+74)\nKernel#load in kernel/common/kernel.rb:498 (+58)\nObject#__script__ in /home/mak/.rbenv/versions/rbx-2.5.8/bin/rake:23 (+148)\nRubinius::CodeLoader#load_script in kernel/delta/code_loader.rb:66 (+52)\nRubinius::CodeLoader.load_script in kernel/delta/code_loader.rb:152 (+40)\nRubinius::Loader#script in kernel/loader.rb:656 (+214)\nRubinius::Loader#main in kernel/loader.rb:842 (+77)\n--- Thread 8 backtrace ---\nTimeout.watch_channel in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/rubysl-timeout-2.0.0/lib/rubysl/timeout/timeout.rb:90 (+27)\n__block__ in /home/mak/.rbenv/versions/rbx-2.5.8/gems/gems/rubysl-timeout-2.0.0/lib/rubysl/timeout/timeout.rb:125 (+3)\nProc#call in kernel/bootstrap/proc.rb:0 (+204)\nThread#__run__ in kernel/bootstrap/thread.rb:352 (+117)\n--- end Ruby backtraces ---\nAborted\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Scheduling Features for Threads",
                "body": "It would be helpful to be able to adjust thread scheduling\n\n1.) policy  eg SCHED_FIFO\n2.) core affinity\n3.) priority\n\nfor a running thread. \n\nOf course this would only apply for OS's (such as Linux) that have the needed system call support.\n\nMotivation:  I find that I can't always parallelize all the work and have one(two) thread(s) that provides a service that supports a ton of user threads.  In that case I would like the one (or two) thread(s) to have its own core(s) and the user threads to be corralled only to the other cores.  In this way I won't lose time to context switching on the relatively more sensitive (and higher priority) thread(s).\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Immix crash in the AWS grinder",
                "body": "This time running the script from #3461 resulted in a crash in Immix: https://gist.github.com/YorickPeterse/959032063fa19c83e230\n\nNote the last bit of the GDB log, it seems the variable Immix is trying to GC is a NULL pointer. While the code below it checks for NULL pointers (https://github.com/rubinius/rubinius/blob/aa7814191b3cff9e20169361f34ee2c34d9d6345/vm/gc/gc.cpp#L367) it appears to crash before the process can even reach that code.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "MonoInline crash in the AWS grinder",
                "body": "_Another_ crash caused by running the script from #3461: https://gist.github.com/YorickPeterse/717ea7072bb21011e217\n\nNot sure yet if this is related to #3464 or if it's an entirely separate issue.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "JIT crash in the AWS grinder",
                "body": "Another crash I experienced when running the script from #3461: https://gist.github.com/YorickPeterse/2d485203986dc227ccf2\n\nThis appears to be a JIT crash, though I'm not sure if the origin of the crash is in the JIT or if that is simply a byproduct of something else breaking first.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "NilMethod error in Oga where it's impossible to arise",
                "body": "Running the script mentioned in #3461 can in rare cases lead to the following error:\n\n```\nAn exception occurred running populate_queue.rb\n\nundefined method `empty?' on nil:NilClass. (NoMethodError)\n\nBacktrace:\n\n                      Kernel(NilClass)#empty? (method_missing) at kernel/delta/kernel.rb:78\n                                       Oga::XML::Lexer#advance at /home/yorickpeterse/.gem/rbx/2.1.0/gems/oga-1.2.1/lib/oga/xml/lexer.rb:208\n              Oga::XML::Parser(Oga::XML::SaxParser)#each_token at /home/yorickpeterse/.gem/rbx/2.1.0/gems/oga-1.2.1/lib/oga/xml/parser.rb:245\n                         LL::Driver(Oga::XML::SaxParser)#parse at driver.c\n                   Oga::XML::Parser(Oga::XML::SaxParser)#parse at /home/yorickpeterse/.gem/rbx/2.1.0/gems/oga-1.2.1/lib/oga/xml/parser.rb:282\n                                             Oga.sax_parse_xml at /home/yorickpeterse/.gem/rbx/2.1.0/gems/oga-1.2.1/lib/oga/oga.rb:41\n                             Aws::Xml::Parser::OgaEngine#parse at /home/yorickpeterse/.gem/rbx/2.1.0/gems/aws-sdk-core-2.1.7/lib/aws-sdk-core/xml/parser/engines/oga.rb:14\n                                        Aws::Xml::Parser#parse at /home/yorickpeterse/.gem/rbx/2.1.0/gems/aws-sdk-core-2.1.7/lib/aws-sdk-core/xml/parser.rb:29\n                                 Aws::Query::Handler#parse_xml at /home/yorickpeterse/.gem/rbx/2.1.0/gems/aws-sdk-core-2.1.7/lib/aws-sdk-core/query/handler.rb:53\n                               { } in Aws::Query::Handler#call at /home/yorickpeterse/.gem/rbx/2.1.0/gems/aws-sdk-core-2.1.7/lib/aws-sdk-core/query/handler.rb:29\n                                                     Proc#call at kernel/bootstrap/proc.rb:20\n                          { } in Seahorse::Client::Response#on at /home/yorickpeterse/.gem/rbx/2.1.0/gems/aws-sdk-core-2.1.7/lib/seahorse/client/response.rb:43\n            { } in Seahorse::Client::Http::Response#on_success at /home/yorickpeterse/.gem/rbx/2.1.0/gems/aws-sdk-core-2.1.7/lib/seahorse/client/http/response.rb:139\n                                                     Proc#call at kernel/bootstrap/proc.rb:20\n              { } in Seahorse::Client::Http::Response#listener at /home/yorickpeterse/.gem/rbx/2.1.0/gems/aws-sdk-core-2.1.7/lib/seahorse/client/http/response.rb:166\n                                                     Proc#call at kernel/bootstrap/proc.rb:20\n                      Seahorse::Client::Http::Response#on_done at /home/yorickpeterse/.gem/rbx/2.1.0/gems/aws-sdk-core-2.1.7/lib/seahorse/client/http/response.rb:130\n                   Seahorse::Client::Http::Response#on_success at /home/yorickpeterse/.gem/rbx/2.1.0/gems/aws-sdk-core-2.1.7/lib/seahorse/client/http/response.rb:137\n                                 Seahorse::Client::Response#on at /home/yorickpeterse/.gem/rbx/2.1.0/gems/aws-sdk-core-2.1.7/lib/seahorse/client/response.rb:42\n                         Seahorse::Client::Response#on_success at /home/yorickpeterse/.gem/rbx/2.1.0/gems/aws-sdk-core-2.1.7/lib/seahorse/client/response.rb:51\n                                      Aws::Query::Handler#call at /home/yorickpeterse/.gem/rbx/2.1.0/gems/aws-sdk-core-2.1.7/lib/aws-sdk-core/query/handler.rb:27\n                         Aws::Plugins::UserAgent::Handler#call at /home/yorickpeterse/.gem/rbx/2.1.0/gems/aws-sdk-core-2.1.7/lib/aws-sdk-core/plugins/user_agent.rb:12\n             Seahorse::Client::Plugins::Endpoint::Handler#call at /home/yorickpeterse/.gem/rbx/2.1.0/gems/aws-sdk-core-2.1.7/lib/seahorse/client/plugins/endpoint.rb:34\n                    Aws::Plugins::ParamValidator::Handler#call at /home/yorickpeterse/.gem/rbx/2.1.0/gems/aws-sdk-core-2.1.7/lib/aws-sdk-core/plugins/param_validator.rb:21\n  Seahorse::Client::Plugins::RaiseResponseErrors::Handler#call at /home/yorickpeterse/.gem/rbx/2.1.0/gems/aws-sdk-core-2.1.7/lib/seahorse/client/plugins/raise_response_errors.rb:14\n                    Aws::Plugins::ParamConverter::Handler#call at /home/yorickpeterse/.gem/rbx/2.1.0/gems/aws-sdk-core-2.1.7/lib/aws-sdk-core/plugins/param_converter.rb:21\n       Seahorse::Client::Plugins::ResponseTarget::Handler#call at /home/yorickpeterse/.gem/rbx/2.1.0/gems/aws-sdk-core-2.1.7/lib/seahorse/client/plugins/response_target.rb:21\n                        Seahorse::Client::Request#send_request at /home/yorickpeterse/.gem/rbx/2.1.0/gems/aws-sdk-core-2.1.7/lib/seahorse/client/request.rb:70\n              { } in Aws::SQS::Client#define_operation_methods at /home/yorickpeterse/.gem/rbx/2.1.0/gems/aws-sdk-core-2.1.7/lib/seahorse/client/base.rb:207\n                                      { } in Object#__script__ at populate_queue.rb:58\n                                           Kernel(Object)#loop at kernel/common/kernel.rb:511\n                                      { } in Object#__script__ at populate_queue.rb:56\n                                           Kernel(Object)#loop at kernel/common/kernel.rb:511\n                                      { } in Object#__script__ at populate_queue.rb:51\n                                                     Proc#call at kernel/bootstrap/proc.rb:20\n                                                Thread#__run__ at kernel/bootstrap/thread.rb:352\n```\n\nThe code in question is at https://github.com/YorickPeterse/oga/blob/5d0e8c99af86dab9f4d1840f37625bf6b964c379/lib/oga/xml/lexer.rb#L208. Here `@elements.empty?` is apparently `nil.empty?`. Unless I'm blind this is _impossible_ because `@elements` is ever only assigned an empty Array (https://github.com/YorickPeterse/oga/blob/5d0e8c99af86dab9f4d1840f37625bf6b964c379/lib/oga/xml/lexer.rb#L132) and instances of this class are not shared between threads (the lexer is deliberately set up to promote against this by passing the input in `#initialize` rather than a separate method). The only theory I can think of is that somehow the GC sets the `@elements` variable to nil.\n\nLog output: https://gist.github.com/YorickPeterse/b72b65c4e650d7d807bf\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Possible segmentation fault in the pg Gem",
                "body": "Using the script from #3461 I now bumped into a segmentation fault in the pg Gem. GDB logs: https://gist.github.com/YorickPeterse/badd558a8799585a8ff3\n\nSadly I have no standalone way to reproduce this just yet.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "AWS SDK segmentation fault in Encoding#find_non_ascii_index",
                "body": "Logs: https://gist.github.com/YorickPeterse/0d5cfef61583eccbaf7b\n\nCode that triggered it:\n\n``` ruby\nrequire 'thread'\nrequire 'sequel'\nrequire 'progress_bar'\nrequire 'aws-sdk'\nrequire 'json'\nrequire 'oga'\nrequire 'securerandom'\n\nThread.abort_on_exception = true\n\nputs 'Connecting...'\n\nDB = Sequel.connect(\n  :adapter         => 'postgres',\n  :encoding        => 'UTF8',\n  :test            => true,\n  :host            => ENV['DB_HOST'],\n  :database        => ENV['DB_NAME'],\n  :user            => ENV['DB_USER'],\n  :password        => ENV['DB_PASSWORD'],\n  :max_connections => 60\n)\n\nqueue_url = 'https://this-is-kinda-private'\n\nreviews = DB[:reviews]\n  .where('reviewer_origin IS NOT NULL OR travel_type IS NOT NULL or travel_composition IS NOT NULL')\n  .count\n\nlast_id  = 0\niterated = 0\nqueue    = Queue.new\noutput   = Queue.new\ncontrol  = Queue.new\nprogress = ProgressBar.new(reviews)\nsqs_lock = Mutex.new\n\nputs 'Starting threads...'\n\nthreads = 10.times.map do\n  Thread.new do\n    thread_sqs = Aws::SQS::Client.new\n\n    loop do\n      entries = queue.pop.map do |review|\n        {:id => SecureRandom.hex, :message_body => JSON.dump(review)}\n      end\n\n      #sqs_lock.synchronize do\n        thread_sqs.send_message_batch(:queue_url => queue_url, :entries => entries)\n      #end\n\n      output << entries.length\n    end\n  end\nend\n\nfiller = Thread.new do\n  while iterated < reviews\n    reviews_page = DB[:reviews]\n      .select(:id, :reviewer_origin, :travel_type, :travel_composition)\n      .where('reviewer_origin IS NOT NULL OR travel_type IS NOT NULL or travel_composition IS NOT NULL')\n      .where { id > last_id }\n      .order(:id)\n      .limit(5_000)\n      .to_a\n\n    reviews_page.each_slice(10) do |slice|\n      queue << slice\n    end\n\n    last_id = reviews_page.last[:id]\n  end\n\n  control << :terminate\nend\n\nloop do\n  terminate = !control.empty? && control.pop == :terminate\n\n  break if terminate && queue.empty? && output.empty?\n\n  progress.increment!(output.pop)\nend\n\nfiller.join\n```\n\nNot sure how to actually reproduce this outside of using the above script.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Syntax error using def as argument",
                "body": "`private(def foo; bar.each do; end; end)` works in both MRI 2.2.2 and Rubinius 2.5.7.\n\n`private def foo; bar.each do; end; end` works in MRI but causes a syntax error in Rubinius.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Matrix math is 2x slower that MRI",
                "body": "I'm trying to get more or less stable readings from my cheap ultrasonic range sensor, to measure a level of the water in my well. \n\nSensor is constantly producing range readings, at rate about 7Hz, and writes readings to the CVS file. \n\nThere a lot of noise in the data, so I've decided to use Kalman Filter. Filtering involves a lot of matrix math. You can watch this [video](https://www.udacity.com/course/artificial-intelligence-for-robotics--cs373) (Lesson 2), where this filter is explained. \n\nYou can find my implementation [here](https://gist.github.com/y8/fea3892507db7bf3d1d0). There a very poor model of process, so output is still affected by measurement errors. \n\nDownload the sample CSV file and run the filter: \n\n`ruby filter.rb 2015-06-22.csv`\n\nIt will output filtered CSV, and the total runtime. \n\nMy tests results with different rubies:\n\n```\n; Runtime: 4.33\n; ruby 2.2.2p95 (2015-04-13 revision 50295) [x86_64-darwin15]\n\n; Runtime: 9.24\n; rubinius 2.5.5 (2.1.0 433d9b8c 2015-05-15 3.5.1 JI) [x86_64-darwin14.4.0]\n\n; Runtime: 10.82\n; jruby 1.7.20.1 (1.9.3p551) 2015-06-10 d7c8c27 on Java HotSpot(TM) 64-Bit Server VM 1.7.0_67-b01 +jit [darwin-x86_64]\n```\n\nAs you can see, rbx and jruby are way slower than MRI.\n\n[Here](https://gist.github.com/y8/d211a0b48002e2941c1f) the `benchmark/ips` for my Kalman filter implementation:\n\n```\nruby 2.2.2p95 (2015-04-13 revision 50295) [x86_64-darwin15]\nCalculating -------------------------------------\n              kalman   787.000  i/100ms\n-------------------------------------------------\n              kalman      8.024k (± 5.6%) i/s -     80.274k\n\nrubinius 2.5.5 (2.1.0 433d9b8c 2015-05-15 3.5.1 JI) [x86_64-darwin14.4.0]\nCalculating -------------------------------------\n              kalman       283 i/100ms\n-------------------------------------------------\n              kalman     5026.3 (±15.5%) i/s -      48959 in  10.034451s\n\njruby 1.7.20.1 (1.9.3p551) 2015-06-10 d7c8c27 on Java HotSpot(TM) 64-Bit Server VM 1.7.0_67-b01 +jit [darwin-x86_64]\nCalculating -------------------------------------\n              kalman       184 i/100ms\n-------------------------------------------------\n              kalman    11554.6 (±19.1%) i/s -     109296 in   9.975000s\n\njruby 9.0.0.0.pre1 (2.2.0p0) 2015-01-20 d537cab Java HotSpot(TM) 64-Bit Server VM 24.65-b04 on 1.7.0_67-b01 +jit [darwin-x86_64]\nCalculating -------------------------------------\n              kalman     6.000  i/100ms\n-------------------------------------------------\n              kalman      5.646k (±18.7%) i/s -     48.456k\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "rbx-2.5.5 can't read xml text value in psql db column that rbx-2.2.10 could",
                "body": "I'm using Rails 4.1.6 with rbx 2.5.7 and psql db\n\nI have a text field where xml strings are stored. I do not know why, but looking at these strings in pgadmin3 I see that they start with `---` or `--- |` or `--- |+` then following this is the xml. (these prefixes seem to have been added automatically)\n\nWhen I use rbx 2.2.10 - I can retrieve all of these fields easily through a rails console.\n\nWhen I switch to rbx 2.5.5 the value returned for the ones which have a prefix with a `|` is a blank string, even though there is a long xml there, as I can see with pgadmin3. I have also tried rbx-2.5.7 to no avail.\n\nHere are some examples:\n\nexample value which can be read by both 2.2.10 and 2.5.5\n\n```\n--- \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>...\"\n```\n\nin rails console returns\n\n```\n\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>...\"\n```\n\nexample values which return blank string in rails console for 2.5.5:\n\n```\n--- |\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>...\n```\n\nand\n\n```\n--- |+\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>...\n```\n\nIf I switch back to rbx 2.2.10 then it all works fine.\n\nAny idea what the issue is - I don't even know why the `---`'s are there.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Proc#curry on lambda with optional param",
                "body": "Just opening for reference:\n\n```\nrubinius ➤ ruby -v                                                                                                                                                                                        git:2.2*\nruby 2.2.2p95 (2015-04-13 revision 50295) [x86_64-linux]\nrubinius ➤ irb                                                                                                                                                                                            git:2.2*\nirb(main):001:0> lambda {|a,*b|}.arity\n=> -2\nirb(main):002:0> lambda {|a,*b|}.curry(3)\n=> #<Proc:0x007fdac5168710 (lambda)>\nirb(main):003:0> lambda {|a,b=nil|}.arity\n=> -2\nirb(main):004:0> lambda {|a,b=nil|}.curry(3)\nArgumentError: wrong number of arguments (3 for 1..2)\n        from (irb):4:in `curry'\n        from (irb):4\n        from /home/benny/.rubies/2.2.2/bin/irb:11:in `<main>'\n\n\nrubinius ➤ bin/ruby -v                                                                                                                                                                                    git:2.2*\nrubinius 2.5.5.c97 (2.1.0 4b922b0e 2015-06-02 3.5.0 JI) [x86_64-linux-gnu]\nrubinius ➤ bin/irb                                                                                                                                                                                        git:2.2*\nirb(main):001:0> lambda {|a,*b|}.arity\n=> -2\nirb(main):002:0> lambda {|a,*b|}.curry(3)\n=> #<Proc:0x2da0 (lambda)>\nirb(main):003:0> lambda {|a,b=nil|}.arity\n=> -2\nirb(main):004:0> lambda {|a,b=nil|}.curry(3)\n=> #<Proc:0x2fc4 (lambda)>\n```\n\nJruby has the same bug: https://github.com/jruby/jruby/issues/3011\n\nThis also affects `Method#curry` with optional params: #3264 \n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "compile fails on oniguruma",
                "body": "I'm trying to compile rubinius 2.5.3 on windows.  \nI'm building it with:\nruby 2.0.0p645 (2015-04-13) [i386-mingw32]\ngcc\\g++ - gcc (rubenvb-4.7.2-release) 4.7.2 => 686-w64-mingw32\n\nThe compile fails on oniguruma:\n\nthe rake install --trace produces:\n1: LDSHARED enc/trans/big5.so\nenc/trans/artifacts/big5.c.o: In function `Init_big5':\nC:\\prg_build_env\\ruby\\rubinius-2.5.3\\vendor\\oniguruma/enc/trans/big5.c:68953: un\ndefined reference to`rb_register_transcoder'\nC:\\prg_build_env\\ruby\\rubinius-2.5.3\\vendor\\oniguruma/enc/trans/big5.c:68954: un\ndefined reference to `rb_register_transcoder'\nC:\\prg_build_env\\ruby\\rubinius-2.5.3\\vendor\\oniguruma/enc/trans/big5.c:68955: un\ndefined reference to`rb_register_transcoder'\nC:\\prg_build_env\\ruby\\rubinius-2.5.3\\vendor\\oniguruma/enc/trans/big5.c:68956: un\ndefined reference to `rb_register_transcoder'\nC:\\prg_build_env\\ruby\\rubinius-2.5.3\\vendor\\oniguruma/enc/trans/big5.c:68957: un\ndefined reference to`rb_register_transcoder'\nenc/trans/artifacts/big5.c.o:C:\\prg_build_env\\ruby\\rubinius-2.5.3\\vendor\\oniguru\nma/enc/trans/big5.c:68958: more undefined references to `rb_register_transcoder'\n follow\ncollect2.exe: error: ld returned 1 exit status\nError: g++ -shared enc/trans/artifacts/big5.c.o -o enc/trans/big5.so\nrake aborted!\nError compiling\n\nDo you have any idea how to solve the \"undefined reference error?  (I have found the rb_register_transcoder in the MRI - http://rxr.whitequark.org/mri/source/transcode.c?v=1.9.2-p381#199)\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "rbx consumes 100% of CPU when use FFI",
                "body": "sleep.c\n\n``` c\n#include <unistd.h>\n#include <stdio.h>\n\nvoid mysleep()\n{\n        while( 1 ) sleep( 1000 );\n}\n```\n\nsleep.rb\n\n``` ruby\nrequire 'ffi'\nrequire 'irb'\n\nmodule MYFFI\n  extend FFI::Library\n  ffi_lib 'c'\n  ffi_lib './libsleep.so'\n\n  attach_function :mysleep, [], :void\nend\n\nThread.new do\n        MYFFI.mysleep()\nend\n\nIRB.start\n```\n\nHow to reproduce :\n\n```\n$ gcc -c -fpic sleep.c\n$ gcc -shared -o libsleep.so sleep.o\n$ rbx -v\nrubinius 2.5.2 (2.1.0 7a5b05b1 2015-01-30 3.5.1 JI) [x86_64-freebsd10.1]\n$ rbx sleep.rb\n(display nothing and rbx consumes 100% of CPU)\n```\n\njruby works well.\n\n```\n$ jruby -v\njruby 1.7.15 (1.9.3p392) 2014-09-03 82b5cc3 on OpenJDK 64-Bit Server VM 1.7.0_80-b15 +jit [FreeBSD-amd64]\n$ jruby sleep.rb\nirb(main):001:0>\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Building rubinius fails when locale is set to \"C\"",
                "body": "With locale \"C\" (LANG=\"C\" and LC_ALL=\"C\"), building rubinius 2.5.3 and 2.5.2 fail during preinstalling gems for 2.1.0 with message:\n\n``` text\n[BUG: Control flow error in interpreter]\n```\n\nFull build log is here: [gist link](https://gist.github.com/nidev/c1d4cfc60d2c0ced755a)\n\nActual 'rbx' executable file is built successfully though, It behaves weirdly.\n\nSystem Information:\n\n``` text\nLinux lrig-hanayo 4.0.1-gentoo #1 SMP Fri May 1 13:01:07 KST 2015 x86_64 Intel(R) Core(TM) i5-4210U CPU @ 1.70GHz GenuineIntel GNU/Linux\nrbenv 0.4.0-146-g7ad01b2\nclang version 3.5.2 (tags/RELEASE_352/final)\nTarget: x86_64-pc-linux-gnu\nThread model: posix\n\nnidev@lrig-hanayo /tmp/rubinius-2.5.3 % llvm-config --version                                                                                                                                                 \n3.5.2\n\nnidev@lrig-hanayo /tmp/rubinius-2.5.3 % /lib/libc.so.6                                                                                                                                                      \nGNU C Library (Gentoo 2.20-r2 p4) stable release version 2.20, by Roland McGrath et al.\nCopyright (C) 2014 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.\nThere is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A\nPARTICULAR PURPOSE.\nCompiled by GNU CC version 4.8.4.\nAvailable extensions:\n    C stubs add-on version 2.1.2\n    crypt add-on version 2.1 by Michael Glad and others\n    GNU Libidn by Simon Josefsson\n    Native POSIX Threads Library by Ulrich Drepper et al\n    BIND-8.2.3-T5B\nlibc ABIs: UNIQUE IFUNC\nFor bug reporting instructions, please see:\n<http://bugs.gentoo.org/>.\n```\n\nI found similar build log from issue #2691. But this one seems different from #2691. I could resolve this problem by changing LANG to 'en_US.UTF-8'. and rebuilding rubinius cleanly. However, this error seems weird and I finally open this issue.\n\nProcedure to reproduce this issue:\n1. set LANG=\"C\"\n2. set LC_ALL=\"C\"\n3. unpack rubinius source\n4. do ./configure\n5. rake build\n6. error occurs while preinstalling 2.1.0 gems\n\nI couldn't find a word related to system locale on [rubinius build guide](http://rubini.us/doc/en/getting-started/building/). However, by setting LANG=\"en_US.UTF-8\" and LC_ALL=\"en_US.UTF-8\", 'rake build' worked fine.\n\nI've checked this can be reproduced in Archlinux and Debian jessie. If I find simpler procedure, I will update it here.\n\nIs there any special reason for this problem? Thanks.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Rubinius Time issues with timezone changes on Europe/Lisbon and Europe/Istanbul",
                "body": "Hi everyone,\n\nWhile playing around with rubinius, I noticed that Time#new, Time#mktime and Time#local failed the 'handles years from 0 as such' test on spec/ruby/core/time/shared/time_params.rb. It was weird because the tests weren't failing on rubinius test system. I asked @ruipserra if these issues were happening to him, and he confirmed it. Soon after we confirmed that this is an issue related to our Timezone (Europe/Lisbon).\n\nYou can check the issue while running:\n\n```\nTZ='Europe/Lisbon' bin/mspec ci core/time\n```\n\nThe date failing, 1912/01/01, represents the date where the timezone being used in Portugal changed.\nAfter a quick C refresh (last time I've touch it was > 10 years ago) and some hours of debugging trying to track down where this was happening and found out that the cause of it is C mktime.\n\nI checked out [IANA TZData europe source file](https://github.com/eggert/tz/blob/master/europe) and confirmed that the timezone change is there and also found 2 other cases that seem similar, Europe/Istanbul on 1910/10/01 and Europe/Amsterdam on 1940/05/16.\n\nI tested these 2 cases and while it fails Europe/Istanbul it works correctly for Europe/Amsterdam on my local environment.\n\nYou can run [this](https://gist.github.com/fmfdias/a95b0d912bcb597e993b) to check it out.\n\nSince mktime depends on the system you run it, I also tried to check the behavior on an Ubuntu machine, and while the error is different, they still fail. In this case, it only fails until you create another time object. When you try to create the date again, you get the correct value.\n\n```\n$ TZ='Europe/Lisbon' rbx\nrbx-2.5.3 :001 > Time.new(1912,1,1)\n => 1911-12-31 23:23:28 -0036\nrbx-2.5.3 :002 > Time.new(1912,1,1)\n => 1911-12-31 23:23:28 -0036\nrbx-2.5.3 :003 > Time.new(1911,1,1)\n => 1911-01-01 00:00:00 -0036\nrbx-2.5.3 :004 > Time.new(1912,1,1)\n => 1912-01-01 00:36:32 +0000\nrbx-2.5.3 :005 > Time.new(1912,1,1)\n => 1912-01-01 00:36:32 +0000\n```\n\nOnce more, this behavior doesn't happen for 'Europe/Amsterdam'\n\nI wrote some C gists that prove that C mktime is showing this same behavior on each of the systems.\nYou can check them out here:\n[Ubuntu glibc](https://gist.github.com/fmfdias/5c7c36726ff3cce12ead)\n[OSX libc](https://gist.github.com/fmfdias/66aee626cf0d174a6de4)\n\nI opened a [bug report](https://bugs.launchpad.net/ubuntu/+source/glibc/+bug/1437534) for ubuntu glibc. I'm planning to do the same for Apple libc but still didn't found the place where to open bug reports for Apple opensource projects :/\n\nI don't know what might the best solution for Rubinius, if it's waiting for this issue to get fixed on these systems, if it's building it's own time library or if there's an easy fix for it. I would like to help out more, but I don't have much time available and my C is very very rusty.\n\n**OSX System (Yosemite 10.10.3)**\n\nrubinius 2.5.3 (2.1.0 2482b093 2015-05-01 3.5.1 JI) [x86_64-darwin14.3.0]\nlocal build of current master\n\nDarwin Filipes-MBP-2.home 14.3.0 Darwin Kernel Version 14.3.0: Mon Mar 23 11:59:05 PDT 2015; root:xnu-2782.20.48~5/RELEASE_X86_64 x86_64 \n\nrubinius chruby\n\n**Ubuntu System (Ubuntu 12.04.5 LTE)**\n\nrubinius 2.5.3 (2.1.0 2482b093 2015-04-28 3.4 JI) [x86_64-linux-gnu]\n\nLinux shtrubymac 3.2.0-60-generic #91-Ubuntu SMP Wed Feb 19 03:54:44 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux\n\nrvm 1.25.27\n\nThanks\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "crash report",
                "body": "Rails app just idling overnight\n\n```\nThe Rubinius process is aborting with signal: SIGSEGV\n--- begin system info ---\nsysname: Darwin\nnodename: jupiter.local.pantheon.net\nrelease: 13.2.0\nversion: Darwin Kernel Version 13.2.0: Thu Apr 17 23:03:13 PDT 2014; root:xnu-2422.100.13~1/RELEASE_X86_64\nmachine: x86_64\n--- end system info ---\n--- begin system backtrace ---\n0   ruby                                0x000000010018a82c _ZN8rubiniusL12segv_handlerEi + 220\n1   libsystem_platform.dylib            0x00007fff949d05aa _sigtramp + 26\n2   ???                                 0x0000000000000000 0x0 + 0\n3   ruby                                0x00000001000c9354 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8260\n4   ruby                                0x000000010011eb95 _ZN8rubinius11MachineCode19execute_specializedINS_16GenericArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 821\n5   ruby                                0x00000001000c9354 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8260\n6   ruby                                0x000000010011eb95 _ZN8rubinius11MachineCode19execute_specializedINS_16GenericArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 821\n7   ruby                                0x00000001000c9354 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8260\n8   ruby                                0x000000010011eb95 _ZN8rubinius11MachineCode19execute_specializedINS_16GenericArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 821\n9   ruby                                0x00000001000c9439 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8489\n10  ruby                                0x000000010011f0a4 _ZN8rubinius11MachineCode19execute_specializedINS_11NoArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 788\n11  ruby                                0x00000001000c9439 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8489\n12  ruby                                0x000000010011f0a4 _ZN8rubinius11MachineCode19execute_specializedINS_11NoArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 788\n13  ruby                                0x00000001000c9439 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8489\n14  ruby                                0x00000001001c7b68 _ZN8rubinius16BlockEnvironment19execute_interpreterEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE + 792\n15  ruby                                0x00000001001c77d0 _ZN8rubinius16BlockEnvironment6invokeEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE + 512\n16  ruby                                0x00000001001c7e2d _ZN8rubinius16BlockEnvironment4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsEi + 61\n17  ruby                                0x00000001000ca0b6 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 11686\n18  ruby                                0x00000001001c7b68 _ZN8rubinius16BlockEnvironment19execute_interpreterEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE + 792\n19  ruby                                0x00000001001c77d0 _ZN8rubinius16BlockEnvironment6invokeEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE + 512\n20  ruby                                0x00000001001c7e2d _ZN8rubinius16BlockEnvironment4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsEi + 61\n21  ruby                                0x00000001000ca0b6 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 11686\n22  ruby                                0x00000001001c7b68 _ZN8rubinius16BlockEnvironment19execute_interpreterEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE + 792\n23  ruby                                0x00000001001c77d0 _ZN8rubinius16BlockEnvironment6invokeEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE + 512\n24  ruby                                0x00000001001c7e2d _ZN8rubinius16BlockEnvironment4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsEi + 61\n25  ruby                                0x00000001000ca08c _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 11644\n26  ruby                                0x000000010011eb95 _ZN8rubinius11MachineCode19execute_specializedINS_16GenericArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 821\n27  ruby                                0x00000001000c9439 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8489\n28  ruby                                0x000000010011eb95 _ZN8rubinius11MachineCode19execute_specializedINS_16GenericArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 821\n29  ruby                                0x00000001000c9439 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8489\n30  ruby                                0x000000010011eb95 _ZN8rubinius11MachineCode19execute_specializedINS_16GenericArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 821\n31  ruby                                0x00000001000c9439 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8489\n32  ruby                                0x000000010011fabc _ZN8rubinius11MachineCode19execute_specializedINS_11OneArgumentEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 796\n33  ruby                                0x00000001000c9439 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8489\n34  ruby                                0x00000001001c7b68 _ZN8rubinius16BlockEnvironment19execute_interpreterEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE + 792\n35  ruby                                0x00000001001c77d0 _ZN8rubinius16BlockEnvironment6invokeEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE + 512\n36  ruby                                0x00000001001c7e2d _ZN8rubinius16BlockEnvironment4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsEi + 61\n37  ruby                                0x0000000100208637 _ZN8rubinius4Proc4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsE + 615\n38  ruby                                0x000000010014759f _ZN8rubinius10Primitives9proc_callEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 79\n39  ruby                                0x000000010029bba7 rbx_splat_send_private + 135\n40  ???                                 0x0000000109c8c793 0x0 + 4459120531\n41  ruby                                0x00000001000c9354 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8260\n42  ruby                                0x00000001001c7b68 _ZN8rubinius16BlockEnvironment19execute_interpreterEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE + 792\n43  ruby                                0x00000001001c77d0 _ZN8rubinius16BlockEnvironment6invokeEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE + 512\n44  ruby                                0x00000001001c7e2d _ZN8rubinius16BlockEnvironment4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsEi + 61\n45  ruby                                0x00000001000ca08c _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 11644\n46  ruby                                0x00000001001c7b68 _ZN8rubinius16BlockEnvironment19execute_interpreterEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE + 792\n47  ruby                                0x00000001001c77d0 _ZN8rubinius16BlockEnvironment6invokeEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE + 512\n48  ruby                                0x00000001001c7e2d _ZN8rubinius16BlockEnvironment4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsEi + 61\n49  ruby                                0x00000001000ca08c _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 11644\n50  ruby                                0x000000010011eb95 _ZN8rubinius11MachineCode19execute_specializedINS_16GenericArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 821\n51  ruby                                0x00000001000c9439 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8489\n52  ruby                                0x000000010011eb95 _ZN8rubinius11MachineCode19execute_specializedINS_16GenericArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 821\n53  ruby                                0x00000001000c9439 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8489\n54  ruby                                0x000000010011fabc _ZN8rubinius11MachineCode19execute_specializedINS_11OneArgumentEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 796\n55  ruby                                0x00000001000c9439 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8489\n56  ruby                                0x000000010011eb95 _ZN8rubinius11MachineCode19execute_specializedINS_16GenericArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 821\n57  ruby                                0x00000001000c9354 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8260\n58  ruby                                0x000000010011fabc _ZN8rubinius11MachineCode19execute_specializedINS_11OneArgumentEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 796\n59  ruby                                0x00000001000c9439 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8489\n60  ruby                                0x000000010011fabc _ZN8rubinius11MachineCode19execute_specializedINS_11OneArgumentEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 796\n61  ruby                                0x00000001000c9354 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8260\n62  ruby                                0x000000010011fabc _ZN8rubinius11MachineCode19execute_specializedINS_11OneArgumentEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 796\n63  ruby                                0x00000001000c9354 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8260\n64  ruby                                0x000000010011eb95 _ZN8rubinius11MachineCode19execute_specializedINS_16GenericArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 821\n65  ruby                                0x00000001000c9354 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8260\n66  ruby                                0x00000001001c7b68 _ZN8rubinius16BlockEnvironment19execute_interpreterEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE + 792\n67  ruby                                0x00000001001c77d0 _ZN8rubinius16BlockEnvironment6invokeEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE + 512\n68  ruby                                0x00000001001c7e2d _ZN8rubinius16BlockEnvironment4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsEi + 61\n69  ruby                                0x00000001000ca0b6 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 11686\n70  ruby                                0x00000001001c7b68 _ZN8rubinius16BlockEnvironment19execute_interpreterEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE + 792\n71  ruby                                0x00000001001c77d0 _ZN8rubinius16BlockEnvironment6invokeEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE + 512\n72  ruby                                0x00000001001c7e2d _ZN8rubinius16BlockEnvironment4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsEi + 61\n73  ruby                                0x00000001000ca08c _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 11644\n74  ruby                                0x00000001001c7b68 _ZN8rubinius16BlockEnvironment19execute_interpreterEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE + 792\n75  ruby                                0x00000001001c77d0 _ZN8rubinius16BlockEnvironment6invokeEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE + 512\n76  ruby                                0x00000001001c7e2d _ZN8rubinius16BlockEnvironment4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsEi + 61\n77  ruby                                0x00000001000ca08c _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 11644\n78  ruby                                0x000000010011fabc _ZN8rubinius11MachineCode19execute_specializedINS_11OneArgumentEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 796\n79  ruby                                0x00000001000c9439 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8489\n80  ruby                                0x000000010011f0a4 _ZN8rubinius11MachineCode19execute_specializedINS_11NoArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 788\n81  ruby                                0x00000001000c9439 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8489\n82  ruby                                0x000000010011f0a4 _ZN8rubinius11MachineCode19execute_specializedINS_11NoArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 788\n83  ruby                                0x00000001000c9439 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8489\n84  ruby                                0x00000001001c7b68 _ZN8rubinius16BlockEnvironment19execute_interpreterEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE + 792\n85  ruby                                0x00000001001c77d0 _ZN8rubinius16BlockEnvironment6invokeEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE + 512\n86  ruby                                0x00000001001c7e2d _ZN8rubinius16BlockEnvironment4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsEi + 61\n87  ruby                                0x0000000100208637 _ZN8rubinius4Proc4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsE + 615\n88  ruby                                0x000000010014759f _ZN8rubinius10Primitives9proc_callEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 79\n89  ruby                                0x000000010029bba7 rbx_splat_send_private + 135\n90  ???                                 0x0000000109c8c793 0x0 + 4459120531\n91  ruby                                0x00000001000c9354 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8260\n92  ruby                                0x000000010011eb95 _ZN8rubinius11MachineCode19execute_specializedINS_16GenericArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 821\n93  ruby                                0x00000001000c9439 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8489\n94  ruby                                0x000000010011fabc _ZN8rubinius11MachineCode19execute_specializedINS_11OneArgumentEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 796\n95  ruby                                0x00000001000c9439 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8489\n96  ruby                                0x000000010011f0a4 _ZN8rubinius11MachineCode19execute_specializedINS_11NoArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 788\n97  ruby                                0x00000001000cbd2d _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 18973\n98  ruby                                0x00000001001c7b68 _ZN8rubinius16BlockEnvironment19execute_interpreterEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE + 792\n99  ruby                                0x00000001001c77d0 _ZN8rubinius16BlockEnvironment6invokeEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE + 512\n100 ruby                                0x00000001001c7e2d _ZN8rubinius16BlockEnvironment4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsEi + 61\n101 ruby                                0x00000001000ca08c _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 11644\n102 ruby                                0x000000010011eb95 _ZN8rubinius11MachineCode19execute_specializedINS_16GenericArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 821\n103 ruby                                0x00000001000c9439 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8489\n104 ruby                                0x000000010011f0a4 _ZN8rubinius11MachineCode19execute_specializedINS_11NoArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 788\n105 ruby                                0x00000001000c926a _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8026\n106 ruby                                0x000000010011f0a4 _ZN8rubinius11MachineCode19execute_specializedINS_11NoArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 788\n107 ruby                                0x00000001000c95b6 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8870\n108 ruby                                0x000000010011f5a6 _ZN8rubinius11MachineCode19execute_specializedINS_17SplatOnlyArgumentEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 774\n109 ruby                                0x00000001000c9439 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8489\n110 ruby                                0x000000010011f0a4 _ZN8rubinius11MachineCode19execute_specializedINS_11NoArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 788\n111 ruby                                0x00000001000c95b6 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8870\n112 ruby                                0x000000010011f5a6 _ZN8rubinius11MachineCode19execute_specializedINS_17SplatOnlyArgumentEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 774\n113 ruby                                0x00000001000c9439 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8489\n114 ruby                                0x00000001001c7b68 _ZN8rubinius16BlockEnvironment19execute_interpreterEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE + 792\n115 ruby                                0x00000001001c77d0 _ZN8rubinius16BlockEnvironment6invokeEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE + 512\n116 ruby                                0x00000001001c7e2d _ZN8rubinius16BlockEnvironment4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsEi + 61\n117 ruby                                0x000000010029ddcd rbx_yield_stack + 93\n118 ???                                 0x0000000114326b31 0x0 + 4633815857\n119 ruby                                0x00000001000c9439 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8489\n120 ruby                                0x000000010011fabc _ZN8rubinius11MachineCode19execute_specializedINS_11OneArgumentEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 796\n121 ruby                                0x00000001000c95b6 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8870\n122 ruby                                0x00000001001c7b68 _ZN8rubinius16BlockEnvironment19execute_interpreterEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE + 792\n123 ruby                                0x00000001001c77d0 _ZN8rubinius16BlockEnvironment6invokeEPNS_5StateEPNS_9CallFrameEPS0_RNS_9ArgumentsERNS_15BlockInvocationE + 512\n124 ruby                                0x00000001001c7e2d _ZN8rubinius16BlockEnvironment4callEPNS_5StateEPNS_9CallFrameERNS_9ArgumentsEi + 61\n125 ruby                                0x00000001000ca08c _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 11644\n126 ruby                                0x000000010011f5a6 _ZN8rubinius11MachineCode19execute_specializedINS_17SplatOnlyArgumentEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 774\n127 ruby                                0x00000001000c9439 _ZN8rubinius11MachineCode11interpreterEPNS_5StateEPS0_PNS_20InterpreterCallFrameE + 8489\n--- end system backtrace ---\n--- begin Ruby backtraces ---\n--- Thread 1 backtrace ---\nThread#join_inner in kernel/bootstrap/thread.rb:237 (+127)\nThread#join in kernel/bootstrap/thread.rb:210 (+17)\nPuma::Single#run in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/puma-2.9.2/lib/puma/single.rb:96 (+208)\nPuma::CLI#run in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/puma-2.9.2/lib/puma/cli.rb:506 (+334)\nObject#__script__ in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/puma-2.9.2/bin/puma:10 (+46)\nKernel#load in kernel/common/kernel.rb:497 (+58)\n__block__ in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/bin/puma:23 (+192)\nRubinius::BlockEnvironment#call_on_instance in kernel/common/block_environment.rb:53 (+90)\nKernel#eval in kernel/common/eval.rb:176 (+248)\nObject#__script__ in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/bin/ruby_executable_hooks:15 (+177)\nRubinius::CodeLoader#load_script in kernel/delta/code_loader.rb:66 (+52)\nRubinius::CodeLoader.load_script in kernel/delta/code_loader.rb:152 (+40)\nRubinius::Loader#script in kernel/loader.rb:655 (+214)\nRubinius::Loader#main in kernel/loader.rb:809 (+77)\n--- Thread 9 backtrace ---\nTimeout.watch_channel in /Users/washu/.rvm/rubies/rbx-2.5.1/gems/gems/rubysl-timeout-2.0.0/lib/rubysl/timeout/timeout.rb:100 (+93)\n__block__ in /Users/washu/.rvm/rubies/rbx-2.5.1/gems/gems/rubysl-timeout-2.0.0/lib/rubysl/timeout/timeout.rb:125 (+3)\nProc#call in kernel/bootstrap/proc.rb:20 (+201 jit)\nThread#__run__ in kernel/bootstrap/thread.rb:396 (+117)\n--- Thread 10 backtrace ---\nIO.select in kernel/common/io.rb:931 (+218)\nKernel#select in kernel/common/kernel.rb:766 (+85)\nNewRelic::Agent::EventLoop#wait_to_run in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/newrelic_rpm-3.9.9.275/lib/new_relic/agent/event_loop.rb:118 (+26)\nNewRelic::Agent::EventLoop#run_once in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/newrelic_rpm-3.9.9.275/lib/new_relic/agent/event_loop.rb:104 (+15)\nNewRelic::Agent::EventLoop#run in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/newrelic_rpm-3.9.9.275/lib/new_relic/agent/event_loop.rb:99 (+28)\nNewRelic::Agent::Agent::InstanceMethods::StartWorkerThread#create_and_run_event_loop in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/newrelic_rpm-3.9.9.275/lib/new_relic/agent/agent.rb:630 (+139)\n__block__ in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/newrelic_rpm-3.9.9.275/lib/new_relic/agent/agent.rb:690 (+19)\nNewRelic::Agent#disable_all_tracing in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/newrelic_rpm-3.9.9.275/lib/new_relic/agent.rb:453 (+17)\n__block__ in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/newrelic_rpm-3.9.9.275/lib/new_relic/agent/agent.rb:687 (+9)\nNewRelic::Agent::Agent::InstanceMethods::StartWorkerThread#catch_errors in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/newrelic_rpm-3.9.9.275/lib/new_relic/agent/agent.rb:667 (+9)\nNewRelic::Agent::Agent::InstanceMethods::StartWorkerThread#deferred_work! in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/newrelic_rpm-3.9.9.275/lib/new_relic/agent/agent.rb:686 (+7)\n__block__ in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/newrelic_rpm-3.9.9.275/lib/new_relic/agent/agent.rb:713 (+8)\nProc#call in kernel/bootstrap/proc.rb:0 (+204)\n__block__ in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/newrelic_rpm-3.9.9.275/lib/new_relic/agent/threading/agent_thread.rb:14 (+20)\nProc#call in kernel/bootstrap/proc.rb:0 (+204)\nThread#__run__ in kernel/bootstrap/thread.rb:396 (+117)\n--- Thread 11 backtrace ---\nRational#== in kernel/common/rational.rb:145 (+52 inline)\nNumeric#div in kernel/common/numeric.rb:194 (+0 inline)\nNumeric# 32n kernel/common/numeric.rb:209 (+0 inline)\nNumeric#divmod in kernel/common/numeric.rb:18 (+0 inline)\nTime#plus_without_duration in kernel/common/time.rb:154 (+0 inline)\nTime#+ in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/activesupport-4.1.9/lib/active_support/core_ext/time/calculations.rb:205 (+0 jit)\nConnectionPool::TimedStack#pop in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/connection_pool-2.0.0/lib/connection_pool/timed_stack.rb:32 (+19)\nConnectionPool#checkout in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/connection_pool-2.0.0/lib/connection_pool.rb:69 (+81)\nConnectionPool#with in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/connection_pool-2.0.0/lib/connection_pool.rb:56 (+21)\nMoped::Node#connection in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/moped-2.0.2/lib/moped/node.rb:114 (+8)\nMoped::Node#ensure_connected in /Users/washu/Projects/aztec-rails/config/initializers/monkey_patches.rb:184 (+51)\n__block__ in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/moped-2.0.2/lib/moped/node.rb:589 (+11)\n__block__ in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/moped-2.0.2/lib/moped/node.rb:617 (+5)\n__block__ in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/activesupport-4.1.9/lib/active_support/notifications.rb:159 (+8)\nActiveSupport::Notifications::Instrumenter#instrument in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/activesupport-4.1.9/lib/active_support/notifications/instrumenter.rb:20 (+42)\nActiveSupport::Notifications.instrument in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/activesupport-4.1.9/lib/active_support/notifications.rb:159 (+36)\nMoped::Instrumentable#instrument in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/moped-2.0.2/lib/moped/instrumentable.rb:31 (+41)\nMoped::Node#logging_without_newrelic_trace in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/moped-2.0.2/lib/moped/node.rb:616 (+45)\n__block__ in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/newrelic_moped-0.0.11/lib/newrelic_moped/instrumentation.rb:40 (+22)\nProc#call in kernel/bootstrap/proc.rb:20 (+201 jit)\n__block__ in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/newrelic_moped-0.0.11/lib/newrelic_moped/instrumentation.rb:49 (+21)\n__block__ in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/newrelic_rpm-3.9.9.275/lib/new_relic/agent/method_tracer.rb:69 (+2)\nNewRelic::Agent::MethodTracerHelpers#trace_execution_scoped in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/newrelic_rpm-3.9.9.275/lib/new_relic/agent/method_tracer_helpers.rb:82 (+111)\nNewRelic::Agent::MethodTracer#trace_execution_scoped in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/newrelic_rpm-3.9.9.275/lib/new_relic/agent/method_tracer.rb:67 (+29)\nNewRelic::Agent::Instrumentation::Moped#logging in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/newrelic_moped-0.0.11/lib/newrelic_moped/instrumentation.rb:46 (+335)\nMoped::Node#flush in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/moped-2.0.2/lib/moped/node.rb:587 (+161)\nMoped::Node#process in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/moped-2.0.2/lib/moped/node.rb:0 (+40)\nMoped::Operation::Read#execute in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/moped-2.0.2/lib/moped/operation/read.rb:48 (+10)\nMoped::Node#read in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/moped-2.0.2/lib/moped/node.rb:648 (+33)\nMoped::Node#query in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/moped-2.0.2/lib/moped/node.rb:411 (+60)\n__block__ in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/moped-2.0.2/lib/moped/cursor.rb:137 (+19)\n__block__ in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/moped-2.0.2/lib/moped/cluster.rb:249 (+5)\n__block__ in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/moped-2.0.2/lib/moped/node.rb:204 (+3)\nMoped::Executable#execute in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/moped-2.0.2/lib/moped/executable.rb:25 (+18)\nMoped::Node#ensure_primary in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/moped-2.0.2/lib/moped/node.rb:203 (+9)\nMoped::Cluster#with_primary in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/moped-2.0.2/lib/moped/cluster.rb:248 (+41)\n__block__ in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/moped-2.0.2/lib/moped/read_preference/primary.rb:55 (+20)\nProc#call in kernel/bootstrap/proc.rb:20 (+201 jit)\nMoped::ReadPreference::Selectable#with_retry in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/moped-2.0.2/lib/moped/read_preference/selectable.rb:65 (+28)\nMoped::ReadPreference::Primary#with_node in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/moped-2.0.2/lib/moped/read_preference/primary.rb:54 (+13)\nMoped::Cursor#load_docs in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/moped-2.0.2/lib/moped/cursor.rb:136 (+75)\n__block__ in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/bundler/gems/mongoid-c50c71f04749/lib/mongoid/query_cache.rb:230 (+3)\nMongoid::QueryCache::Cacheable#with_cache in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/bundler/gems/mongoid-c50c71f04749/lib/mongoid/query_cache.rb:135 (+25)\nMongoid::QueryCache::CachedCursor#load_docs in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/bundler/gems/mongoid-c50c71f04749/lib/mongoid/query_cache.rb:230 (+7)\nMoped::Cursor#each in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/moped-2.0.2/lib/moped/cursor.rb:27 (+3)\nMoped::Query#each in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/moped-2.0.2/lib/moped/query.rb:77 (+102)\nMongoid::Contextual::Mongo#each in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/bundler/gems/mongoid-c50c71f04749/lib/mongoid/contextual/mongo.rb:122 (+15)\nMongoid::Contextual#each in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/bundler/gems/mongoid-c50c71f04749/lib/mongoid/contextual.rb:20 (+116)\n__block__ in /Users/washu/Projects/aztec-rails/lib/aztec.rb:266 (+44)\nMutex#synchronize in kernel/common/mutex.rb:62 (+11 jit)\nAztec::AssetManager#sweep_sessions_without_newrelic_transaction_trace in /Users/washu/Projects/aztec-rails/lib/aztec.rb:264 (+7)\n__block__ in (eval):3 (+99)\nNewRelic::Agent::Instrumentation::ControllerInstrumentation#perform_action_with_newrelic_trace in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/newrelic_rpm-3.9.9.275/lib/new_relic/agent/instrumentation/controller_instrumentation.rb:366 (+259)\nAztec::AssetManager#sweep_sessions in (eval):2 (+37)\n__block__ in /Users/washu/Projects/aztec-rails/lib/aztec.rb:171 (+19)\nKernel#loop in kernel/common/kernel.rb:510 (+27)\n__block__ in /Users/washu/Projects/aztec-rails/lib/aztec.rb:169 (+7)\nProc#call in kernel/bootstrap/proc.rb:20 (+201 jit)\nThread#__run__ in kernel/bootstrap/thread.rb:396 (+117)\n--- Thread 12 backtrace ---\nIO.select in kernel/common/io.rb:931 (+218)\nPuma::Reactor#run_internal in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/puma-2.9.2/lib/puma/reactor.rb:28 (+26)\n__block__ in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/puma-2.9.2/lib/puma/reactor.rb:126 (+17)\nProc#call in kernel/bootstrap/proc.rb:20 (+201 jit)\nThread#__run__ in kernel/bootstrap/thread.rb:396 (+117)\n--- Thread 13 backtrace ---\n__block__ in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/puma-2.9.2/lib/puma/thread_pool.rb:151 (+17)\nProc#call in kernel/bootstrap/proc.rb:20 (+201 jit)\nThread#__run__ in kernel/bootstrap/thread.rb:396 (+117)\n--- Thread 14 backtrace ---\nIO.select in kernel/common/io.rb:931 (+218)\nPuma::Server#handle_servers in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/puma-2.9.2/lib/puma/server.rb:288 (+62)\n__block__ in /Users/washu/.rvm/gems/rbx-2.5.1@aztec-rails4/gems/puma-2.9.2/lib/puma/server.rb:273 (+3)\nProc#call in kernel/bootstrap/proc.rb:20 (+201 jit)\nThread#__run__ in kernel/bootstrap/thread.rb:396 (+117)\n--- end Ruby backtraces ---\nSegmentation fault: 11\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "CodeTools::CompileError on rspec-expectations-3.2.1 (on Travis)",
                "body": "I thought I'd report this:\n\n```\nCodeTools::CompileError:\n       Error trying to compile /home/travis/.rvm/gems/rbx-2.5.2/gems/rspec-expectations-3.2.1/lib/rspec/matchers/built_in/equal.rb\n```\n\nI'm testing rbx-head locally and I don't get this. Feel free to close this if it's known/fixed/etc.\n\nHere's the line in the build log (on Travis): https://travis-ci.org/celluloid/celluloid/jobs/58606387#L579\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "invalid multibyte char (UTF-8) in regular expression",
                "body": "I am experiencing this bug with 2.5.2. With this test script:\n\n``` ruby\n\"\".gsub(/\\•/, \"\")\n```\n\nI get this behavior:\n\n``` console\n➔ ruby --version\nruby 2.2.0p0 (2014-12-25 revision 49005) [x86_64-darwin14]\n➔ ruby bug.rb   \n➔ rbenv shell rbx-2.5.2 \n➔ ruby --version       \nrubinius 2.5.2 (2.1.0 7a5b05b1 2015-01-30 3.5.1 JI) [x86_64-darwin14.1.0]\n➔ ruby bug.rb          \nA syntax error has occurred:\n    invalid multibyte char (UTF-8): /Users/john/tmp/bug.rb:1:12\n\nCode:\n\"\".gsub(/\\•/, \"\")\n           ^\n\nBacktrace:\n\n    CodeTools::Melbourne#syntax_error at /Users/john/.rbenv/versions/rbx-2.5.2\n                                         /runtime/gems\n                                         /rubinius-melbourne-2.3.1.0/lib\n                                         /rubinius/melbourne.rbc:48\n      CodeTools::Melbourne#parse_file at /Users/john/.rbenv/versions/rbx-2.5.2\n                                         /runtime/gems\n                                         /rubinius-melbourne-2.3.1.0/lib\n                                         /rubinius/melbourne.rbc:61\n CodeTools::Compiler::FileParser#parse at /Users/john/.rbenv/versions/rbx-2.5.2\n                                          /runtime/gems/rubinius-compiler-2.3.1\n                                          /lib/rubinius/compiler/stages.rbc:225\n  CodeTools::Compiler::Parser(CodeTools::Compiler::FileParser)#run at \\\n          /Users/john/.rbenv/versions/rbx-2.5.2/runtime/gems/rubinius-compiler-2.3.1/lib/rubinius/compiler/stages.rbc:207\n              CodeTools::Compiler#run at /Users/john/.rbenv/versions/rbx-2.5.2\n                                         /runtime/gems/rubinius-compiler-2.3.1\n                                         /lib/rubinius/compiler/compiler.rbc:359\n          CodeTools::Compiler.compile at /Users/john/.rbenv/versions/rbx-2.5.2\n                                         /runtime/gems/rubinius-compiler-2.3.1\n                                         /lib/rubinius/compiler/compiler.rbc:89\n     Rubinius::CodeLoader#compile_file at kernel/delta/code_loader.rb:217\n        Rubinius::CodeLoader#load_file at kernel/delta/code_loader.rb:190\n      Rubinius::CodeLoader#load_script at kernel/delta/code_loader.rb:62\n      Rubinius::CodeLoader.load_script at kernel/delta/code_loader.rb:152\n               Rubinius::Loader#script at kernel/loader.rb:655\n                 Rubinius::Loader#main at kernel/loader.rb:809\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Uncaught C++ internal exception",
                "body": "```\n[BUG] Uncaught C++ internal exception\nSo sorry, it appears that you've encountered an internal\nbug. Please report this on the rubinius issue tracker.\nInclude the following backtrace in the issue:\n\nAbort!\n2   ruby  0x000000010ae06596 rubinius::abort() + 134\n3   ruby  0x000000010adff3a2 rubinius::cpp_exception_bug() + 98\n4   libc++abi.dylib  0x00007fff8ff330a1 std::__terminate(void (*)()) + 8\n5   libc++abi.dylib  0x00007fff8ff32b30 __cxxabiv1::exception_cleanup_func(_Unwind_Reason_Code, _Unwind_Exception*) + 0\n6   libc++.1.dylib  0x00007fff8a23d2d9 std::__1::__vector_base_common<true>::__throw_out_of_range() const + 71\n7   ruby  0x000000010afe917b rubinius::jit::InlineMethodBuilder::assign_fixed_arguments(std::__1::vector<llvm::Value*, std::__1::allocator<llvm::Value*> >&, int, int, int) + 299\n8   ruby  0x000000010afe76cc rubinius::jit::InlineMethodBuilder::assign_arguments(std::__1::vector<llvm::Value*, std::__1::allocator<llvm::Value*> >&) + 172\n9   ruby  0x000000010afe739a rubinius::jit::InlineMethodBuilder::setup_inline(llvm::Value*, llvm::Value*, std::__1::vector<llvm::Value*, std::__1::allocator<llvm::Value*> >&) + 2010\n10  ruby  0x000000010afa3f48 rubinius::Inliner::inline_generic_method(rubinius::Class*, rubinius::ClassData, rubinius::Module*, rubinius::CompiledCode*, rubinius::MachineCode*, int) + 952\n11  ruby  0x000000010afa1c32 rubinius::Inliner::inline_for_class(rubinius::Class*, rubinius::ClassData, int) + 3954\n12  ruby  0x000000010afa22a2 rubinius::Inliner::consider_poly() + 914\n13  ruby  0x000000010afcc9f7 rubinius::JITVisit::visit_send_stack(unsigned long&, unsigned long) + 631\n14  ruby  0x000000010afc2a28 rubinius::VisitInstructions<rubinius::JITVisit>::dispatch(int) + 1928\n15  ruby  0x000000010afc2225 rubinius::jit::Walker::call(rubinius::OpcodeIterator&) + 117\n16  ruby  0x000000010afc1efe void rubinius::jit::ControlFlowWalker::run<rubinius::jit::Walker>(rubinius::jit::Walker&) + 302\n17  ruby  0x000000010afc043a rubinius::jit::Builder::generate_body() + 362\n18  ruby  0x000000010afa70bb rubinius::Inliner::emit_inline_block(rubinius::JITInlineBlock*, llvm::Value*) + 667\n19  ruby  0x000000010afa6df1 rubinius::Inliner::inline_block(rubinius::JITInlineBlock*, llvm::Value*) + 193\n20  ruby  0x000000010afcfd42 rubinius::JITVisit::visit_yield_stack(unsigned long) + 386\n21  ruby  0x000000010afc2bda rubinius::VisitInstructions<rubinius::JITVisit>::dispatch(int) + 2362\n22  ruby  0x000000010afc2225 rubinius::jit::Walker::call(rubinius::OpcodeIterator&) + 117\n23  ruby  0x000000010afc1efe void rubinius::jit::ControlFlowWalker::run<rubinius::jit::Walker>(rubinius::jit::Walker&) + 302\n24  ruby  0x000000010afc043a rubinius::jit::Builder::generate_body() + 362\n25  ruby  0x000000010afa70bb rubinius::Inliner::emit_inline_block(rubinius::JITInlineBlock*, llvm::Value*) + 667\n26  ruby  0x000000010afa6df1 rubinius::Inliner::inline_block(rubinius::JITInlineBlock*, llvm::Value*) + 193\n27  ruby  0x000000010afcfd42 rubinius::JITVisit::visit_yield_stack(unsigned long) + 386\n28  ruby  0x000000010afc2bda rubinius::VisitInstructions<rubinius::JITVisit>::dispatch(int) + 2362\n29  ruby  0x000000010afc2225 rubinius::jit::Walker::call(rubinius::OpcodeIterator&) + 117\n30  ruby  0x000000010afc1efe void rubinius::jit::ControlFlowWalker::run<rubinius::jit::Walker>(rubinius::jit::Walker&) + 302\n31  ruby  0x000000010afc043a rubinius::jit::Builder::generate_body() + 362\n32  ruby  0x000000010afa3f57 rubinius::Inliner::inline_generic_method(rubinius::Class*, rubinius::ClassData, rubinius::Module*, rubinius::CompiledCode*, rubinius::MachineCode*, int) + 967\n33  ruby  0x000000010afa1c32 rubinius::Inliner::inline_for_class(rubinius::Class*, rubinius::ClassData, int) + 3954\n34  ruby  0x000000010afa0cb1 rubinius::Inliner::consider_mono() + 49\n35  ruby  0x000000010afcd0dd rubinius::JITVisit::visit_send_stack_with_block(unsigned long&, unsigned long) + 813\n36  ruby  0x000000010afc2a54 rubinius::VisitInstructions<rubinius::JITVisit>::dispatch(int) + 1972\n37  ruby  0x000000010afc2225 rubinius::jit::Walker::call(rubinius::OpcodeIterator&) + 117\n38  ruby  0x000000010afc1efe void rubinius::jit::ControlFlowWalker::run<rubinius::jit::Walker>(rubinius::jit::Walker&) + 302\n39  ruby  0x000000010afc043a rubinius::jit::Builder::generate_body() + 362\n40  ruby  0x000000010afa3f57 rubinius::Inliner::inline_generic_method(rubinius::Class*, rubinius::ClassData, rubinius::Module*, rubinius::CompiledCode*, rubinius::MachineCode*, int) + 967\n41  ruby  0x000000010afa1c32 rubinius::Inliner::inline_for_class(rubinius::Class*, rubinius::ClassData, int) + 3954\n42  ruby  0x000000010afa0cb1 rubinius::Inliner::consider_mono() + 49\n43  ruby  0x000000010afcd0dd rubinius::JITVisit::visit_send_stack_with_block(unsigned long&, unsigned long) + 813\n44  ruby  0x000000010afc2a54 rubinius::VisitInstructions<rubinius::JITVisit>::dispatch(int) + 1972\n45  ruby  0x000000010afc2225 rubinius::jit::Walker::call(rubinius::OpcodeIterator&) + 117\n46  ruby  0x000000010afc1efe void rubinius::jit::ControlFlowWalker::run<rubinius::jit::Walker>(rubinius::jit::Walker&) + 302\n47  ruby  0x000000010afc043a rubinius::jit::Builder::generate_body() + 362\n48  ruby  0x000000010afe15a4 rubinius::jit::Compiler::compile_method(rubinius::JITCompileRequest*) + 548\n49  ruby  0x000000010aff62a6 rubinius::LLVMState::perform(rubinius::State*) + 1126\n50  ruby  0x000000010aff5e1c rubinius::jit_llvm_trampoline(rubinius::State*) + 28\n51  ruby  0x000000010af678fa rubinius::Thread::execute_thread(rubinius::State*, rubinius::VM*) + 202\n52  ruby  0x000000010af673f2 rubinius::Thread::internal_thread(void*) + 50\n53  libsystem_pthread.dylib  0x00007fff88656268 _pthread_body + 131\n54  libsystem_pthread.dylib  0x00007fff886561e5 _pthread_body + 0\n55  libsystem_pthread.dylib  0x00007fff8865441d thread_start + 13\nThe Rubinius process is aborting with signal: SIGABRT\n--- begin system info ---\nsysname: Darwin\nnodename: Sair.local\nrelease: 14.1.0\nversion: Darwin Kernel Version 14.1.0: Thu Feb 26 19:26:47 PST 2015; root:xnu-2782.10.73~1/RELEASE_X86_64\nmachine: x86_64\n--- end system info ---\n--- begin rubinius info ---\nprogram name: rbx\nversion: 2.5.2\nruby version: 2.1.0\nrelease date: 2015-01-30\nbuild revision: 7a5b05b1a9aca87703ceb0bafe00b916b9510285\nllvm version: 3.4.2\n--- end rubinius info ---\n--- begin system backtrace ---\n0   ruby                                0x000000010aed2958 _ZN8rubiniusL12segv_handlerEi + 248\n1   libsystem_platform.dylib            0x00007fff84babf1a _sigtramp + 26\n2   ruby                                0x000000010b9cdf07 _ZN4llvm7hashing6detail19fixed_seed_overrideE + 55407\n3   ruby                                0x000000010b5dbfa5 abort + 22\n4   ruby                                0x000000010ae0659b _ZN8rubinius5abortEv + 139\n5   ruby                                0x000000010adff3a2 _ZN8rubinius17cpp_exception_bugEv + 98\n6   libc++abi.dylib                     0x00007fff8ff330a1 _ZSt11__terminatePFvvE + 8\n7   libc++abi.dylib                     0x00007fff8ff32b30 _ZN10__cxxabiv1L22exception_cleanup_funcE19_Unwind_Reason_CodeP17_Unwind_Exception + 0\n8   libc++.1.dylib                      0x00007fff8a23d2d9 _ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv + 71\n9   ruby                                0x000000010afe917b _ZN8rubinius3jit19InlineMethodBuilder22assign_fixed_argumentsERNSt3__16vectorIPN4llvm5ValueENS2_9allocatorIS6_EEEEiii + 299\n10  ruby                                0x000000010afe76cc _ZN8rubinius3jit19InlineMethodBuilder16assign_argumentsERNSt3__16vectorIPN4llvm5ValueENS2_9allocatorIS6_EEEE + 172\n11  ruby                                0x000000010afe739a _ZN8rubinius3jit19InlineMethodBuilder12setup_inlineEPN4llvm5ValueES4_RNSt3__16vectorIS4_NS5_9allocatorIS4_EEEE + 2010\n12  ruby                                0x000000010afa3f48 _ZN8rubinius7Inliner21inline_generic_methodEPNS_5ClassENS_9ClassDataEPNS_6ModuleEPNS_12CompiledCodeEPNS_11MachineCodeEi + 952\n13  ruby                                0x000000010afa1c32 _ZN8rubinius7Inliner16inline_for_classEPNS_5ClassENS_9ClassDataEi + 3954\n14  ruby                                0x000000010afa22a2 _ZN8rubinius7Inliner13consider_polyEv + 914\n15  ruby                                0x000000010afcc9f7 _ZN8rubinius8JITVisit16visit_send_stackERmm + 631\n16  ruby                                0x000000010afc2a28 _ZN8rubinius17VisitInstructionsINS_8JITVisitEE8dispatchEi + 1928\n17  ruby                                0x000000010afc2225 _ZN8rubinius3jit6Walker4callERNS_14OpcodeIteratorE + 117\n18  ruby                                0x000000010afc1efe _ZN8rubinius3jit17ControlFlowWalker3runINS0_6WalkerEEEvRT_ + 302\n19  ruby                                0x000000010afc043a _ZN8rubinius3jit7Builder13generate_bodyEv + 362\n20  ruby                                0x000000010afa70bb _ZN8rubinius7Inliner17emit_inline_blockEPNS_14JITInlineBlockEPN4llvm5ValueE + 667\n21  ruby                                0x000000010afa6df1 _ZN8rubinius7Inliner12inline_blockEPNS_14JITInlineBlockEPN4llvm5ValueE + 193\n22  ruby                                0x000000010afcfd42 _ZN8rubinius8JITVisit17visit_yield_stackEm + 386\n23  ruby                                0x000000010afc2bda _ZN8rubinius17VisitInstructionsINS_8JITVisitEE8dispatchEi + 2362\n24  ruby                                0x000000010afc2225 _ZN8rubinius3jit6Walker4callERNS_14OpcodeIteratorE + 117\n25  ruby                                0x000000010afc1efe _ZN8rubinius3jit17ControlFlowWalker3runINS0_6WalkerEEEvRT_ + 302\n26  ruby                                0x000000010afc043a _ZN8rubinius3jit7Builder13generate_bodyEv + 362\n27  ruby                                0x000000010afa70bb _ZN8rubinius7Inliner17emit_inline_blockEPNS_14JITInlineBlockEPN4llvm5ValueE + 667\n28  ruby                                0x000000010afa6df1 _ZN8rubinius7Inliner12inline_blockEPNS_14JITInlineBlockEPN4llvm5ValueE + 193\n29  ruby                                0x000000010afcfd42 _ZN8rubinius8JITVisit17visit_yield_stackEm + 386\n30  ruby                                0x000000010afc2bda _ZN8rubinius17VisitInstructionsINS_8JITVisitEE8dispatchEi + 2362\n31  ruby                                0x000000010afc2225 _ZN8rubinius3jit6Walker4callERNS_14OpcodeIteratorE + 117\n32  ruby                                0x000000010afc1efe _ZN8rubinius3jit17ControlFlowWalker3runINS0_6WalkerEEEvRT_ + 302\n33  ruby                                0x000000010afc043a _ZN8rubinius3jit7Builder13generate_bodyEv + 362\n34  ruby                                0x000000010afa3f57 _ZN8rubinius7Inliner21inline_generic_methodEPNS_5ClassENS_9ClassDataEPNS_6ModuleEPNS_12CompiledCodeEPNS_11MachineCodeEi + 967\n35  ruby                                0x000000010afa1c32 _ZN8rubinius7Inliner16inline_for_classEPNS_5ClassENS_9ClassDataEi + 3954\n36  ruby                                0x000000010afa0cb1 _ZN8rubinius7Inliner13consider_monoEv + 49\n37  ruby                                0x000000010afcd0dd _ZN8rubinius8JITVisit27visit_send_stack_with_blockERmm + 813\n38  ruby                                0x000000010afc2a54 _ZN8rubinius17VisitInstructionsINS_8JITVisitEE8dispatchEi + 1972\n39  ruby                                0x000000010afc2225 _ZN8rubinius3jit6Walker4callERNS_14OpcodeIteratorE + 117\n40  ruby                                0x000000010afc1efe _ZN8rubinius3jit17ControlFlowWalker3runINS0_6WalkerEEEvRT_ + 302\n41  ruby                                0x000000010afc043a _ZN8rubinius3jit7Builder13generate_bodyEv + 362\n42  ruby                                0x000000010afa3f57 _ZN8rubinius7Inliner21inline_generic_methodEPNS_5ClassENS_9ClassDataEPNS_6ModuleEPNS_12CompiledCodeEPNS_11MachineCodeEi + 967\n43  ruby                                0x000000010afa1c32 _ZN8rubinius7Inliner16inline_for_classEPNS_5ClassENS_9ClassDataEi + 3954\n44  ruby                                0x000000010afa0cb1 _ZN8rubinius7Inliner13consider_monoEv + 49\n45  ruby                                0x000000010afcd0dd _ZN8rubinius8JITVisit27visit_send_stack_with_blockERmm + 813\n46  ruby                                0x000000010afc2a54 _ZN8rubinius17VisitInstructionsINS_8JITVisitEE8dispatchEi + 1972\n47  ruby                                0x000000010afc2225 _ZN8rubinius3jit6Walker4callERNS_14OpcodeIteratorE + 117\n48  ruby                                0x000000010afc1efe _ZN8rubinius3jit17ControlFlowWalker3runINS0_6WalkerEEEvRT_ + 302\n49  ruby                                0x000000010afc043a _ZN8rubinius3jit7Builder13generate_bodyEv + 362\n50  ruby                                0x000000010afe15a4 _ZN8rubinius3jit8Compiler14compile_methodEPNS_17JITCompileRequestE + 548\n51  ruby                                0x000000010aff62a6 _ZN8rubinius9LLVMState7performEPNS_5StateE + 1126\n52  ruby                                0x000000010aff5e1c _ZN8rubinius19jit_llvm_trampolineEPNS_5StateE + 28\n53  ruby                                0x000000010af678fa _ZN8rubinius6Thread14execute_threadEPNS_5StateEPNS_2VME + 202\n54  ruby                                0x000000010af673f2 _ZN8rubinius6Thread15internal_threadEPv + 50\n55  libsystem_pthread.dylib             0x00007fff88656268 _pthread_body + 131\n56  libsystem_pthread.dylib             0x00007fff886561e5 _pthread_body + 0\n57  libsystem_pthread.dylib             0x00007fff8865441d thread_start + 13\n--- end system backtrace ---\n--- begin Ruby backtraces ---\n--- Thread 1 backtrace ---\nRubinius.synchronize in kernel/bootstrap/rubinius.rb:125 (+0 inline)\nThread#alive? in kernel/bootstrap/thread.rb:178 (+0 inline)\n__block__ in /Users/saizai/Dropbox/workspace/MakeYourLaws/app/models/fec/filing.rb:53 (+0 jit)\n@serial#delete_if in kernel/common/array.rb:126 (+1 jit)\nFec::Filing.update_database in /Users/saizai/Dropbox/workspace/MakeYourLaws/app/models/fec/filing.rb:53 (+56)\n__block__ in (pry):2 (+7)\nRubinius::BlockEnvironment#call_on_instance in kernel/common/block_environment.rb:53 (+90)\nKernel.eval in kernel/common/eval.rb:176 (+248)\nBinding#eval in kernel/common/binding.rb:55 (+47)\nPry#evaluate_ruby in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/pry-0.10.1/lib/pry/pry_instance.rb:355 (+42)\nPry#handle_line in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/pry-0.10.1/lib/pry/pry_instance.rb:323 (+439)\n__block__ in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/pry-0.10.1/lib/pry/pry_instance.rb:243 (+11)\nProc#call in kernel/bootstrap/proc.rb:20 (+201 jit)\n__block__ in kernel/common/throw_catch.rb:30 (+11)\nRubinius::ThrownValue.register in kernel/common/throw_catch.rb:8 (+53)\nKernel#catch in kernel/common/throw_catch.rb:29 (+56 jit)\n__block__ in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/pry-0.10.1/lib/pry/pry_instance.rb:242 (+9)\nProc#call in kernel/bootstrap/proc.rb:20 (+201 jit)\n__block__ in kernel/common/throw_catch.rb:30 (+11)\nRubinius::ThrownValue.register in kernel/common/throw_catch.rb:8 (+53)\nKernel#catch in kernel/common/throw_catch.rb:29 (+56 jit)\nPry#eval in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/pry-0.10.1/lib/pry/pry_instance.rb:241 (+37)\n__block__ in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/pry-0.10.1/lib/pry/repl.rb:77 (+107)\nKernel#loop in kernel/common/kernel.rb:510 (+27)\nPry::REPL#repl in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/pry-0.10.1/lib/pry/repl.rb:67 (+7)\n__block__ in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/pry-0.10.1/lib/pry/repl.rb:38 (+3)\nProc#call in kernel/bootstrap/proc.rb:0 (+204)\nPry::InputLock#__with_ownership in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/pry-0.10.1/lib/pry/input_lock.rb:61 (+24)\nPry::InputLock#with_ownership in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/pry-0.10.1/lib/pry/input_lock.rb:0 (+43)\nPry::REPL#start in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/pry-0.10.1/lib/pry/repl.rb:38 (+25)\nPry::REPL.start in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/pry-0.10.1/lib/pry/repl.rb:15 (+80)\nPry.start in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/pry-0.10.1/lib/pry/pry_class.rb:169 (+256)\nRails::Console#start in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/railties-4.1.10/lib/rails/commands/console.rb:90 (+164)\nRails::Console.start in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/railties-4.1.10/lib/rails/commands/console.rb:9 (+88)\nRails::CommandsTasks#console in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/railties-4.1.10/lib/rails/commands/commands_tasks.rb:69 (+80)\nRails::CommandsTasks#run_command! in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/railties-4.1.10/lib/rails/commands/commands_tasks.rb:40 (+26)\nObject#__script__ in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/railties-4.1.10/lib/rails/commands.rb:17 (+163)\nRubinius::CodeLoader.require in kernel/common/code_loader.rb:247 (+80)\nKernel#require in kernel/common/kernel.rb:755 (+9)\n__block__ in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activesupport-4.1.10/lib/active_support/dependencies.rb:247 (+3)\nActiveSupport::Dependencies::Loadable#load_dependency in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activesupport-4.1.10/lib/active_support/dependencies.rb:0 (+41)\nActiveSupport::Dependencies::Loadable#require in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activesupport-4.1.10/lib/active_support/dependencies.rb:247 (+13)\nObject#__script__ in /Users/saizai/Dropbox/workspace/MakeYourLaws/bin/rails:8 (+93)\nKernel#load in kernel/common/kernel.rb:497 (+58)\n__block__ in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activesupport-4.1.10/lib/active_support/dependencies.rb:241 (+3)\nActiveSupport::Dependencies::Loadable#load_dependency in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activesupport-4.1.10/lib/active_support/dependencies.rb:0 (+41)\nActiveSupport::Dependencies::Loadable#load in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activesupport-4.1.10/lib/active_support/dependencies.rb:241 (+21)\nSpring::Commands::Rails#call in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/spring-1.3.3/lib/spring/commands/rails.rb:6 (+34)\nSpring::CommandWrapper#call in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/spring-1.3.3/lib/spring/command_wrapper.rb:38 (+16)\n__block__ in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/spring-1.3.3/lib/spring/application.rb:183 (+122)\nProcess.fork in kernel/common/process.rb:95 (+31)\nKernel#fork in kernel/common/kernel.rb:338 (+22)\nSpring::Application#serve in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/spring-1.3.3/lib/spring/application.rb:156 (+451)\n__block__ in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/spring-1.3.3/lib/spring/application.rb:0 (+59)\nKernel#loop in kernel/common/kernel.rb:510 (+27)\nSpring::Application#run in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/spring-1.3.3/lib/spring/application.rb:125 (+22)\nObject#__script__ in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/spring-1.3.3/lib/spring/application/boot.rb:18 (+144)\nRubinius::CodeLoader.require in kernel/common/code_loader.rb:247 (+80)\nKernel#gem_original_require in kernel/common/kernel.rb:755 (+9)\nKernel#require in /Users/saizai/.rvm/rubies/rbx-2.5.2/site/rubygems/core_ext/kernel_require.rb:54 (+94)\n__block__ in -e:1 (+8)\nRubinius::BlockEnvironment#call_on_instance in kernel/common/block_environment.rb:53 (+90)\nKernel#eval in kernel/common/eval.rb:176 (+248)\nRubinius::Loader#evals in kernel/loader.rb:0 (+140)\nRubinius::Loader#main in kernel/loader.rb:808 (+73)\n--- Thread 78 backtrace ---\n0x11fdbf350: capi:query at client.c\n__block__ in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/connection_adapters/abstract_mysql_adapter.rb:303 (+0 jit)\n__block__ in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/connection_adapters/abstract_adapter.rb:378 (+0 jit)\nActiveSupport::Notifications::Instrumenter#instrument in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activesupport-4.1.10/lib/active_support/notifications/instrumenter.rb:20 (+40 jit)\nActiveRecord::ConnectionAdapters::AbstractAdapter#log in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/connection_adapters/abstract_adapter.rb:372 (+95 inline)\nActiveRecord::ConnectionAdapters::AbstractMysqlAdapter#execute in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/connection_adapters/abstract_mysql_adapter.rb:302 (+0 jit)\nActiveRecord::ConnectionAdapters::Mysql2Adapter#execute in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/connection_adapters/mysql2_adapter.rb:228 (+38 jit)\nActiveRecord::ConnectionAdapters::Mysql2Adapter#exec_insert in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/connection_adapters/mysql2_adapter.rb:250 (+32)\nActiveRecord::ConnectionAdapters::DatabaseStatements#insert in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/connection_adapters/abstract/database_statements.rb:95 (+208)\nActiveRecord::ConnectionAdapters::AbstractAdapter#insert in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/connection_adapters/abstract/query_cache.rb:14 (+14)\nActiveRecord::Relation#insert in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/relation.rb:64 (+321)\nActiveRecord::Persistence#_create_record in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/persistence.rb:504 (+34)\nActiveRecord::AttributeMethods::Dirty#_create_record in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/attribute_methods/dirty.rb:87 (+14)\n__block__ in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/callbacks.rb:306 (+3)\nActiveSupport::Callbacks#run_callbacks in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activesupport-4.1.10/lib/active_support/callbacks.rb:82 (+33 jit)\nActiveRecord::Callbacks#_create_record in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/callbacks.rb:306 (+9)\nActiveRecord::Timestamp#_create_record in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/timestamp.rb:57 (+27)\nActiveRecord::Persistence#create_or_update in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/persistence.rb:484 (+28)\n__block__ in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/callbacks.rb:302 (+3)\nActiveSupport::Callbacks#run_callbacks in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activesupport-4.1.10/lib/active_support/callbacks.rb:82 (+33 jit)\nActiveRecord::Callbacks#create_or_update in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/callbacks.rb:302 (+9)\nActiveRecord::Persistence#save in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/persistence.rb:103 (+10)\nActiveRecord::Validations#save in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/validations.rb:51 (+26)\nActiveRecord::AttributeMethods::Dirty#save in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/attribute_methods/dirty.rb:21 (+3)\n__block__ in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/transactions.rb:268 (+3)\n__block__ in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/transactions.rb:329 (+13)\n__block__ in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/connection_adapters/abstract/database_statements.rb:201 (+0 jit)\nActiveRecord::ConnectionAdapters::DatabaseStatements#within_new_transaction in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/connection_adapters/abstract/database_statements.rb:209 (+40)\nActiveRecord::ConnectionAdapters::DatabaseStatements#transaction in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/connection_adapters/abstract/database_statements.rb:0 (+93)\nActiveRecord::Transactions::ClassMethods#transaction in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/transactions.rb:208 (+39)\nActiveRecord::Transactions#with_transaction_returning_status in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/transactions.rb:326 (+13)\n__block__ in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/transactions.rb:268 (+7)\nActiveRecord::Transactions#rollback_active_record_state! in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/transactions.rb:283 (+20)\nActiveRecord::Transactions#save in /Users/saizai/.rvm/gems/rbx-2.5.2/gems/activerecord-4.1.10/lib/active_record/transactions.rb:267 (+7)\n__block__ in /Users/saizai/Dropbox/workspace/MakeYourLaws/app/models/fec/filing.rb:98 (+221)\n__block__ in kernel/common/enumerable.rb:234 (+9 jit)\nArray#each in kernel/bootstrap/array.rb:76 (+51 jit)\nEnumerable#each_with_index in kernel/common/enumerable.rb:232 (+182 jit)\nFec::Filing.download_and_save in /Users/saizai/Dropbox/workspace/MakeYourLaws/app/models/fec/filing.rb:85 (+85)\n__block__ in /Users/saizai/Dropbox/workspace/MakeYourLaws/app/models/fec/filing.rb:60 (+43)\nProc#call in kernel/bootstrap/proc.rb:20 (+201 jit)\nThread#__run__ in kernel/bootstrap/thread.rb:396 (+117)\n--- Thread 810 backtrace ---\nHash#find_item in kernel/common/hash.rb:364 (+1 inline)\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Using a tempfile as an argument for Process.spawn crashes rubinius",
                "body": "Hi guys,\n\nthis worked in MRI but does not work on rubinius 2.5.2. Maybe its similar to this [MRI bug](https://bugs.ruby-lang.org/issues/6269)\n\n``` ruby\nrequire 'tempfile'\n\nsout, serr, cmd = Tempfile.new('sout'), Tempfile.new('serr'), \"echo 'It works!'\"\n# Does work\nsout.write(\"TMP\")\npid = Process.spawn(cmd, out: File.open(sout.path, \"w\"), err: File.open(serr.path, \"w\"))\nsystem(\"cat #{sout.path}\")\n# Does not work\npid = Process.spawn(cmd, out: sout, err: serr)\n```\n\nSystem info:\n\n```\n$ ruby -v\nrubinius 2.5.2 (2.1.0 7a5b05b1 2015-01-30 3.0 JI) [x86_64-linux-gnu]\n$ rbenv -v\nrbenv 0.4.0-143-g4d72eef\n$ uname -a\nLinux dev2 3.2.0-4-amd64 #1 SMP Debian 3.2.65-1+deb7u2 x86_64 GNU/Linux\n```\n\nTrace:\n\n```\nIt works!\nAn exception occurred running process_spawn.rb:\n\nwrong exec redirect: #<Tempfile:/tmp/sout20150317-23121-188xzwe> (ArgumentError)\n\nBacktrace:\n\n      Rubinius::Mirror::Process::Execute#convert_to_fd at kernel/common/process_mirror.rb:197\n  { } in Rubinius::Mirror::Process::Execute#initialize at kernel/common/process_mirror.rb:97\n                                             Hash#each at kernel/common/hash.rb:342\n         Rubinius::Mirror::Process::Execute#initialize at kernel/common/process_mirror.rb:93\n                                             Class#new at kernel/alpha.rb:94\n                       Rubinius::Mirror::Process.spawn at kernel/common/process_mirror.rb:20\n                                         Process.spawn at kernel/common/process.rb:476\n                                     Object#__script__ at process_spawn.rb:9\n                      Rubinius::CodeLoader#load_script at kernel/delta/code_loader.rb:66\n                      Rubinius::CodeLoader.load_script at kernel/delta/code_loader.rb:152\n                               Rubinius::Loader#script at kernel/loader.rb:655\n                                 Rubinius::Loader#main at kernel/loader.rb:809\n```\n\nThanks!\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Cannot convert ActiveSupport::HashWithIndifferentAccess to/from YAML with psych",
                "body": "This seems to be a continuation of this error : https://github.com/rubinius/rubinius/issues/3279\n\nI'm running a rails 4.2.0 app with rbx 2.5.0 / 2.5.2, and I keep getting that error with any version of psych > 2.0.9.\n\nAn app to demo this with (no test case yet, 'cause I don't really know what's going on) : https://github.com/pH14/demo-app-with-authpwn To reproduce the error, clone that repo, then the normal rails stuff (bundle install / rake db:migrate db:seed / rails s) to get it running, then try to log in (foo@bar.com, asdf) and it'll throw the error.\n\nIf there are any obvious temporary workarounds that'd be great for the small bit that I need this to work for.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Wrong PID calling `system` with a command that doesn't exist",
                "body": "Hello,\n\nthere's a little disparity between MRI and Rubinius calling the `system` method passing a command that doesn't exist:\n\n``` ruby\n>> system(\"i_do_no_exist\")\n\n>> RUBY_ENGINE\n=> \"rbx\"\n>> $?.pid\n=> nil\n\n>> RUBY_ENGINE\n=> \"ruby\"\n>> $?.pid\n=> 3005\n```\n\nThere's no big deal here but this is pretty useful to get a handle on a `Process::Status` object. It looks like the offending line is [here](https://github.com/rubinius/rubinius/blob/40040f9956833ac13774d745e961c743eeeefcbb/vm/builtin/system.cpp#L831) ; I don't know whether `fork` is working unexpectedly or if there is a missing check to avoid returning `nil` in such case.\n\nHave a nice day!\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "gem install ruby-shadow fails on travis",
                "body": "This command fails on travis\n\n```\ngem install ruby-shadow -v '2.4.1'\n```\n\n```\n0.08s$ git clone --depth=50 git://github.com/bjfish/rbshadowtest.git bjfish/rbshadowtest\nCloning into 'bjfish/rbshadowtest'...\nremote: Counting objects: 11, done.\nremote: Compressing objects: 100% (10/10), done.\nremote: Total 11 (delta 3), reused 8 (delta 0)\nReceiving objects: 100% (11/11), done.\nResolving deltas: 100% (3/3), done.\nChecking connectivity... done.\n$ cd bjfish/rbshadowtest\n0.11s$ git fetch origin +refs/pull/1/merge:\nremote: Counting objects: 5, done.\nremote: Compressing objects: 100% (4/4), done.\nremote: Total 5 (delta 0), reused 0 (delta 0)\nUnpacking objects: 100% (5/5), done.\nFrom git://github.com/bjfish/rbshadowtest\n * branch            refs/pull/1/merge -> FETCH_HEAD\n$ git checkout -qf FETCH_HEAD\nrvm\n76.76s$ rvm use rbx-2 --install --binary --fuzzy\nrbx-2.5.2 is not installed - installing.\nSearching for binary rubies, this might take some time.\nFound remote file http://binaries.rubini.us/ubuntu/12.04/x86_64/rubinius-2.5.2.tar.bz2\nrbx-2.5.2 - #configure\nrbx-2.5.2 - #download\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100 20.4M  100 20.4M    0     0  7446k      0  0:00:02  0:00:02 --:--:-- 7667k\nNo checksum for downloaded archive, recording checksum in user configuration.\nrbx-2.5.2 - #validate archive\nrbx-2.5.2 - #extract\nrbx-2.5.2 - #validate binary\nrbx-2.5.2 - #setup\nrbx-2.5.2 - #gemset created /home/travis/.rvm/gems/rbx-2.5.2@global\nrbx-2.5.2 - #importing gemset /home/travis/.rvm/gemsets/global.gems......................................................\nrbx-2.5.2 - #generating global wrappers........\nrbx-2.5.2 - #uninstalling gem rubygems-bundler-1.4.4.\nrbx-2.5.2 - #gemset created /home/travis/.rvm/gems/rbx-2.5.2\nrbx-2.5.2 - #importing gemset /home/travis/.rvm/gemsets/default.gems....................\nrbx-2.5.2 - #generating default wrappers........\nchown: changing ownership of `/home/travis/.rvm/user/installs': Operation not permitted\nUsing /home/travis/.rvm/gems/rbx-2.5.2\n$ export BUNDLE_GEMFILE=$PWD/Gemfile\n$ ruby --version\nrubinius 2.5.2 (2.1.0 7a5b05b1 2015-01-30 3.4 JI) [x86_64-linux-gnu]\n$ rvm --version\nrvm 1.26.10 (latest-minor) by Wayne E. Seguin <wayneeseguin@gmail.com>, Michal Papis <mpapis@gmail.com> [https://rvm.io/]\n$ bundle --version\nBundler version 1.7.12\n$ gem --version\n2.4.5\n22.90s$ bundle install --jobs=3 --retry=3\nFetching gem metadata from https://rubygems.org/..\nResolving dependencies...\nUsing rake 10.4.2\nUsing bundler 1.7.12\nGem::Ext::BuildError: ERROR: Failed to build gem native extension.\n    /home/travis/.rvm/rubies/rbx-2.5.2/bin/rbx -r ./siteconf20150222-4322-e1tidl.rb extconf.rb\nchecking for getspent() in -lshadow... no\nchecking for getspent()... yes\nchecking for fgetspent()... yes\nchecking for setspent()... yes\nchecking for endspent()... yes\nchecking for lckpwdf()... yes\nchecking for ulckpwdf()... yes\nchecking for sgetspent()... yes\nchecking for ruby/io.h... yes\ncreating Makefile\nmake \"DESTDIR=\" clean\nmake \"DESTDIR=\"\ncompiling shadow/shadow.c\nshadow/shadow.c: In function ‘rb_shadow_putspent’:\nshadow/shadow.c:149:34: error: subscripted value is neither array nor pointer nor vector\nmake: *** [shadow.o] Error 1\nmake failed, exit code 2\nGem files will remain installed in /home/travis/.rvm/gems/rbx-2.5.2/gems/ruby-shadow-2.4.1 for inspection.\nResults logged to /home/travis/.rvm/gems/rbx-2.5.2/extensions/x86_64-linux/2.1/ruby-shadow-2.4.1/gem_make.out\nAn error occurred while installing ruby-shadow (2.4.1), and Bundler cannot\ncontinue.\nMake sure that `gem install ruby-shadow -v '2.4.1'` succeeds before bundling.\n```\n\nLink to build:\nhttps://travis-ci.org/bjfish/rbshadowtest/pull_requests\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "The Rubinius process is aborting with signal: SIGSEGV",
                "body": "Hi, I ran into this error:\n\nhttp://pastie.org/9959209\nhttps://gist.github.com/binaryplease/c398d495f84904dc11ab\n\nThe project is pretty big and I can't really figure out what the problem is. Using the default ruby implementation \"ruby-head\" doesnt throw this error.\nAlso the code runs a few minutes and stops then, so debugging is a bit problematic.\nHow do I fix this? How do I find out what causes this error?\n\nVersion:\nrubinius 2.5.2 (2.1.0 7a5b05b1 2015-01-30 3.5.1 JI) [x86_64-linux-gnu]\nOS:\nLinux binaryplease-laptop 3.18.6-1-ARCH #1 SMP PREEMPT Sat Feb 7 08:44:05 CET 2015 x86_64 GNU/Linux\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Syntax error using keyword arguments",
                "body": "`eval \"def a b:; c []; end\"` works in both MRI 2.2.0 and Rubinius 2.5.1.\n\n`eval \"def a b:\\n c []; end\"` works in MRI but causes a syntax error in Rubinius.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Regular Expression does not match all Extended ASCII Characters",
                "body": "On MRI the test examples below pass but on Rubinius one fails (as indicated below).\nWith the range up to \\xfd it still works but for \\xfe and \\xff it fails!\n\n```\nrequire 'spec_helper'\ndescribe 'https://github.com/rubinius/rubinius/issues/2916' do\n\n #     Failure/Error: expect(match_data[0]).to eq \"OK2\"\n #     expected: \"OK2\"\n #         got: \"O\"\n it \"should find token OK2\" do\n    str = \"* OK2 \"\n    regex = /[^\\x80-\\xfe ]+/ni\n    str.index(regex,2)\n    match_data = $~\n    expect(match_data[0]).to eq \"OK2\"\n  end\n\n  it \"should find token OK3\" do\n    str = \"* OK3 \"\n    regex = /[^\\x80-\\xfd ]+/ni\n    str.index(regex,2)\n    match_data = $~\n    expect(match_data[0]).to eq \"OK3\"\n  end\nend\n```\n\nOne Ruby standard library fails because of this. See #2916\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Random::DEFAULT is missing",
                "body": "MRI/JRuby has this, and unfortunately, it does not seem to make much sense to have this in Rubinius given how Rubinius implements random. At first I just want to assign it with `Thread.current.randomizer` or `Thread.main.randomizer`, but a `Rubinius::Randomizer` is not a `Random`.\n\nAny idea how we could add this, or just don't define it? I could probably just use `Random.seed` in my code, but MRI does not provide this method. Perhaps we should just ask MRI implements `Random.seed` instead?\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Keyword arguments are not passed to parent class when calling super without arguments",
                "body": "#### Example\n\n``` ruby\nclass Panthera\n  def initialize(name: 'Panthera')\n    @name = name\n  end\n\n  def to_s\n    \"name: '#{@name}'\"\n  end\nend\n\nclass Tigris < Panthera\n  def initialize(name: 'Tiger')\n    super  # <-- HERE!\n  end\nend\n\nputs Tigris.new(name: 'My Tiger')\nputs Tigris.new\n```\n#### Expected output:\n\n```\nname: 'My Tiger'\nname: 'Tiger'\n```\n\nTested on MRI 2.1.2, MRI 2.2.0, JRuby 9.0.0.0.pre1.\n#### Actual output:\n\n```\nname: ''\nAn exception occurred running script.rb:\n\nmethod 'initialize': given 1, expected 1 (ArgumentError)\n\nBacktrace:\n\n                 Tigris#initialize at script.rb:13\n                 Object#__script__ at script.rb:18\n  Rubinius::CodeLoader#load_script at kernel/delta/code_loader.rb:66\n  Rubinius::CodeLoader.load_script at kernel/delta/code_loader.rb:152\n           Rubinius::Loader#script at kernel/loader.rb:645\n             Rubinius::Loader#main at kernel/loader.rb:799\n```\n\nTested on rubinius 2.5.0 (2.1.0 50777f41 2015-01-17 3.5.1 JI) [x86_64-darwin13.4.0].\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Split Ruby build dependencies into distinct steps",
                "body": "The current build system relies on Ruby. This dependency significantly limits our ability to make the build process simpler in general and friendly for packaging systems.\n\nThere are several places where Ruby is a critical dependency, but all can be removed from the build by relying on artifacts instead of processing them every time a build is run:\n1. Parsing instruction definitions and generating interpreter and JIT code.\n2. Parsing C++ files and generating _primitive_ code.\n3. Computing the dependencies for the C/C++ files.\n4. Compiling the Ruby kernel files.\n\nA gem (rubinius-instructions) has been made for the first one. The other steps can also easily be isolated.\n\nOnce the above parts are separated, the two remaining primary build components are:\n1. The configure script\n2. The blueprint / daedalus component that runs the build commands for vendored libraries and VM code.\n\nThese two pieces need to be rewritten in bash / sh. Bash is acceptable, sh is preferable.\n\nThe remaining Rake tasks can be retained, and the four components above can be integrated as new Rake tasks to generate the required artifacts that can be used for normal development builds and release builds.\n\nThis ticket is intended as an overview and to keep track of any necessary subordinate tickets.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Segmentation fault in openssl.bundle (ossl_raise)",
                "body": "We've recently started running our tests against rbx-2.5.0 (previously we were running against 2.2.10), and we seem to be hitting a repeatable segmentation fault in the openssl C-extension.\n\nThe full crash dump (and some system info) is in [this gist](https://gist.github.com/benweint/44b15ff689fd694b83a8). \n\nThe interesting (to me) bit of the C stack is:\n\n```\n4   ruby                                0x000000010e174f14 ruby_vsnprintf + 68\n5   ruby                                0x000000010e0f7a9f rb_sprintf + 287\n6   openssl.bundle                      0x000000010f7c20d7 ossl_make_error + 55\n7   openssl.bundle                      0x000000010f7c191b ossl_raise + 123\n8   openssl.bundle                      0x000000010f7df9ea ossl_start_ssl + 458\n9   ruby                                0x000000010e0b41fc _ZN8rubinius12NativeMethod23executor_implementationINS_13ZeroArgumentsEEEPNS_6ObjectEPNS_5StateEPNS_9CallFrameEPNS_10ExecutableEPNS_6ModuleERNS_9ArgumentsE + 1292\n```\n\nrbx-2.5.0 was installed via `ruby-build`, and I'm using `chruby` as my Ruby version switcher. I'm on Mac OS X locally, but we've also reproduced this on our Linux build boxes.\n\nRepro steps:\n1. `git clone git@github.com:newrelic/rpm.git`\n2. `cd rpm`\n3. `git checkout rbx-repro`\n4. `VERBOSE=1 rake test:multiverse[agent_only,name=test_handles_non_numeric_agent_run_id_on_slow_sql_traces,nocache]`\n\nExpected results:\nThe test should pass.\n\nActual results:\nSegfault, per the gist above.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Rubinius debugging support for RubyMine",
                "body": "there is a request for RubyMine to support debugging with Rubinius (https://youtrack.jetbrains.com/issue/RUBY-14118)\nI've evaluated what we have now (as far as I understand rubinius-debuggers code) and decided to document my finding here to have it for reference (especially taking into account that the Debuggin API is supposed to be reworked soon).\n\nSetting/removing breakpoint: we have almost everything we need except ability to set \"exceptional\" breakpoint (breakpoint triggered on throwing particular exception).\nAnother problem is to how to translate file:line to executable.  ribinius-debugger uses method name to specify breakpoint, but for IDE it is much easier to specify breakpoint using file and line.\n\nStepping: \n- step-over (next): it looks like every implementation of debugger will have to repeat code which calculate place where to set temporary breakpoint which is rathe complicated and looks like very implementation-specific (thus if the implementation will be changed the code should be change too).  Imho it would be better to have something similar to \"step into\" which (as far as I understand) implemented in Rubinius.\n- it would be nice to have \"step out\" which goes out of the current method/frame\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "rubocop fails with Coercion error",
                "body": "Hey guys, thought you'd want to see this. Current versions of everything.\n\n```\nwarning: parser/current is loading parser/ruby21, which recognizes\nwarning: 2.1.5-compliant syntax, but you are running 2.1.0.\nInspecting 273 files\n..........................................................................................................................................Coercion error: nil.to_int => Fixnum failed\nkernel/common/type.rb:36:in `coerce_to_failed'\nkernel/common/type.rb:152:in `coerce_to_collection_length'\nkernel/common/array.rb:57:in `initialize'\nkernel/common/array.rb:1664:in `to_a'\n/home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/ast-2.0.0/lib/ast/node.rb:61:in `initialize'\n/home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/astrolabe-1.3.0/lib/astrolabe/node.rb:27:in `initialize'\n/home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/astrolabe-1.3.0/lib/astrolabe/builder.rb:25:in `n'\n/home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/parser-2.2.0.1/lib/parser/builders/default.rb:182:in `array'\nruby21.y:981:in `_reduce_291'\n:in `call'\nkernel/bootstrap/proc.rb:20:in `call'\nkernel/common/throw_catch.rb:30:in `catch'\nkernel/common/throw_catch.rb:7:in `register'\nkernel/common/throw_catch.rb:29:in `catch'\ncparse.c:in `_racc_do_parse_c'\n/home/travis/.rvm/rubies/rbx-2.4.1/gems/gems/racc-1.4.12/lib/racc/parser.rb:271:in `do_parse'\n/home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/parser-2.2.0.1/lib/parser/base.rb:175:in `parse'\n/home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/parser-2.2.0.1/lib/parser/base.rb:193:in `parse_with_comments'\n/home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/parser-2.2.0.1/lib/parser/base.rb:214:in `tokenize'\n/home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/rubocop-0.28.0/lib/rubocop/processed_source.rb:67:in `parse'\n/home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/rubocop-0.28.0/lib/rubocop/processed_source.rb:27:in `initialize'\n/home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/rubocop-0.28.0/lib/rubocop/processed_source.rb:15:in `from_file'\n/home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/rubocop-0.28.0/lib/rubocop/runner.rb:54:in `process_file'\n/home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/rubocop-0.28.0/lib/rubocop/runner.rb:27:in `run'\nkernel/bootstrap/array.rb:76:in `each'\n/home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/rubocop-0.28.0/lib/rubocop/runner.rb:25:in `run'\n/home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/rubocop-0.28.0/lib/rubocop/cli.rb:24:in `run'\n/home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/rubocop-0.28.0/bin/rubocop:13:in `__script__'\n/home/travis/.rvm/rubies/rbx-2.4.1/gems/gems/rubysl-benchmark-2.0.1/lib/rubysl/benchmark/benchmark.rb:294:in `realtime'\n/home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/gems/rubocop-0.28.0/bin/rubocop:12:in `__script__'\nkernel/common/kernel.rb:497:in `load'\n/home/travis/build/subledger/v3/vendor/bundle/rbx/2.1/bin/rubocop:23:in `__script__'\nkernel/delta/code_loader.rb:66:in `load_script'\nkernel/delta/code_loader.rb:152:in `load_script'\nkernel/loader.rb:645:in `script'\nkernel/loader.rb:799:in `main'\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Using Kernel#load with wrapping breaks \"top-level methods\"",
                "body": "``` ruby\n# anon_thing.rb\ndef helper_method\n  puts \"Found it!\"\nend\n\nhelper_method\n```\n\n``` ruby\n# test.rb\nload(\n  File.join(File.dirname(__FILE__), 'anon_thing.rb'),\n  true\n)\n```\n\nRunning `test.rb` in rbx (tried `rubinius 2.4.1.n7 (2.1.0 0a3aebab 2015-01-07 3.5.0 JI) [x86_64-linux-gnu]`) results in:\n\n``` text\nAn exception occurred running test.rb:\n\nundefined local variable or method `helper_method' on an instance of Object. (NameError)\n\nBacktrace:\n\n  Kernel(Object)#helper_method (method_missing) at kernel/delta/kernel.rb:78\n                              Object#__script__ at anon_thing.rb:5\n                            Kernel(Object)#load at kernel/common/kernel.rb:497\n                              Object#__script__ at test.rb:2\n               Rubinius::CodeLoader#load_script at kernel/delta/code_loader.rb:66\n               Rubinius::CodeLoader.load_script at kernel/delta/code_loader.rb:152\n                        Rubinius::Loader#script at kernel/loader.rb:645\n                          Rubinius::Loader#main at kernel/loader.rb:799\n```\n\nIn MRI it works as expected. Running without the wrapping also works in rbx.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Problem with gems with non-ASCII characters in gemspec",
                "body": "With Rubinius 2.4.1, when I try to install latest stable Cucumber:\n\n``` bash\nrbx -S gem install cucumber -v '1.3.18'\n```\n\nI get the following:\n\n```\nERROR:  Error installing cucumber:\n    invalid gem: package is corrupt, exception while verifying: invalid byte sequence in US-ASCII (ArgumentError) in /opt/rbx-2.4.1/gems/cache/cucumber-1.3.18.gem\n```\n\nAs you may know, author of Cucumber is Aslak Helles**ø**y and the `ø` character isn’t part basic ASCII. When I check out Cucumber 1.3.18, change Aslak’s surname to Helles**oe**y and build the gem manually it works.\n\nWe use Cucumber 1.3.17 now which we installed with Rubinius 2.2.10. The [gemspec for 1.3.17](https://github.com/cucumber/cucumber/blob/v1.3.17/cucumber.gemspec) also contains `ø` so this is probably something introduced recently.\n\nJust to be clear, it works with MRI 2.1.5 and 2.2.0.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "incorrect behavior with inline rescue and compound assignment operator on rbx 2.3.x and 2.4.x",
                "body": "The code below fails on rbx 2.4.1.  I believe it passes on rbx 2.2.10.  I found this because it is causing failures in the inherited_resources gem specs (and presumably in the behavior of the gem as well).\n\n```\ndescribe \"inline rescue\" do\n  it \"properly executes compound assignment operators\" do\n    val = 'original'\n    val ||= 'new' rescue nil\n    val.should == 'original'\n  end\nend\n```\n\nThe key item here appears to be the combination of the compound assignment operator and the inline rescue.  The following will pass.\n\n```\ndescribe \"inline rescue\" do\n  it \"properly executes compound assignment operators\" do\n    val = 'original'\n    val ||= begin\n      \"new\"\n    rescue nil\n    end\n    val.should == 'original'\n  end\nend\n```\n\nI've confirmed that this fails on rbx 2.3.0 and rbx 2.4.1.  I'm pretty sure it passes on rbx-2.2.10 because inherited_resources specs pass at this version.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Incompatible implementation of Process::Status",
                "body": "This is a spin-off from eventmachine/eventmachine#551 wherein I am trying to get unit tests running clean for all Rubies that Eventmachine supports, including Rubinius.\n\nRuby MRI has a C implementation of Process::Status and jams instance values into the class.\nhttp://rxr.whitequark.org/mri/ident?i=rb_last_status_set\n\n``` C\n  rb_last_status_set(int status, rb_pid_t pid)\n  {\n      rb_thread_t *th = GET_THREAD();\n      th->last_status = rb_obj_alloc(rb_cProcessStatus);\n      rb_iv_set(th->last_status, \"status\", INT2FIX(status));\n      rb_iv_set(th->last_status, \"pid\", PIDT2NUM(pid));\n  }\n```\n\nEventmachine uses similar code to construct the Process::Status result for EM.system and EM.popen, which does not work with the Rubinius Process::Status https://github.com/rubinius/rubinius/blob/master/kernel/common/process.rb#L523-584\n\nI hacked up my Eventmachine locally and got it working with this adjustment, but it fails on MRI because the (nonexistent)initialize for Process::Status wants 0 arguments.\n\n``` C\n static VALUE t_get_subprocess_status (VALUE self, VALUE signature)\n {\n        VALUE proc_status = Qnil;\n\n        int status;\n        pid_t pid;\n\n        if (evma_get_subprocess_status (NUM2ULONG (signature), &status)) {\n                if (evma_get_subprocess_pid (NUM2ULONG (signature), &pid)) {\n                        proc_status = rb_obj_alloc(rb_cProcStatus);\n+                       VALUE argv[2];\n+                       argv[0] = INT2FIX(pid);\n+                       argv[1] = INT2FIX(status);\n+                       rb_obj_call_init(proc_status, 2, argv);\n                        rb_iv_set(proc_status, \"status\", INT2FIX(status));\n                        rb_iv_set(proc_status, \"pid\", INT2FIX(pid));\n                }\n        }\n\n        return proc_status;\n }\n```\n\nOpen question: should Rubinius change its definition of Process::Status to match the way MRI does it, or should Eventmachine test its Ruby engine and construct Process::Status accordingly?\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Dir.glob specs for special characters in path and pattern",
                "body": "Porting from rubyspec/rubyspec#303\n\n```\nmkdir 'dir!'\ntouch 'dir!/100% fun.txt'\nDir.glob(\"dir!/**/*\") # => 'dir!/100% fun.txt'\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Kernel.chomp specs",
                "body": "Porting from rubyspec/rubyspec#23\n\nhttp://gist.github.com/437039\n- [ ] Pull out shared specs\n- [ ] Review specs\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Return from inside an iter inside a lambda inside a method differs from MRI.",
                "body": "In  ruby `lambda` (and `->()`) works differently from iters when it comes to `return` as control flow.  Rubinius follows MRI on this, but has unexpected behavior when the return is inside an iter inside a lambda inside a method.  The expected behavior is that the return will skip the iter and end the lambda, but not the method, because a return inside an iter skips the iter, and a return inside a lambda ends the lambda (but not the enclosing method or lambda).  The following example illustrates this behavior, and the unexpected behavior on rubinius:\n\nMRI (2.1.2):\n\n``` ruby\npry(main)> def foo; x = []; proc { return x << 1 }.call << 2 end; foo\n=> [1]\npry(main)> def foo; x = []; lambda { return x << 1 }.call << 2 end; foo\n=> [1, 2]\npry(main)> def foo; x = []; lambda { proc { return x << 1 }.call << 2 }.call << 3 end; foo\n=> [1, 3]\npry(main)> def foo; x = []; proc { lambda { return x << 1 }.call << 2 }.call << 3 end; foo\n=> [1, 2, 3]\n```\n\nrbx-2.4.1:\n\n``` ruby\npry(main)> def foo; x = []; proc { return x << 1 }.call << 2 end; foo\n=> [1]\npry(main)> def foo; x = []; lambda { return x << 1 }.call << 2 end; foo\n=> [1, 2]\npry(main)> def foo; x = []; lambda { proc { return x << 1 }.call << 2 }.call << 3 end; foo\n=> [1]\npry(main)> def foo; x = []; proc { lambda { return x << 1 }.call << 2 }.call << 3 end; foo\n=> [1, 2, 3]\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "C Extension Compatibility",
                "body": "Well,\n\nI wonder if C extension compatibility will qualify as bug. But as I was not able to find a rubinius mailing list / forum...\n\nUsing rubinius 2.4.1 on a 64-bit ubuntu 14.10/utopic, I encounter the following when trying to run a sample of the from the gtk3 sources:\n\n<pre>\nruby-gnome2/gtk3-no-gi/sample$ ruby gtk-demo/main.rb \nAn exception occurred running gtk-demo/main.rb:\n\nCould not open library /opt/rubies/rubinius/2.4/gems/gems/glib2-2.2.4/lib/glib2.so - /opt/rubies/rubinius/2.4/gems/gems/glib2-2.2.4/lib/glib2.so: undefined symbol: rb_thread_interrupted (LoadError::InvalidExtensionError)\n\nBacktrace:\n\n          Rubinius::NativeMethod.load_extension at kernel/common/native_method.rb:26\n              Rubinius::CodeLoader#load_library at kernel/delta/code_loader.rb:234\n                   Rubinius::CodeLoader#require at kernel/common/code_loader.rb:130\n                   Rubinius::CodeLoader.require at kernel/common/code_loader.rb:241\n  Kernel(Object)#gem_original_require (require) at kernel/common/kernel.rb:755\n</pre>\n\n\nI have noticed that a similar problem was reported to the qtbindings project (https://github.com/ryanmelt/qtbindings/issues/89). As far as I understand, at the heart of the problem is that sometimes C extension code needs to know details about (p)threads and/or gc state on the MRI ruby implementation. As rubinius is complete different here, trying to get this information fails.\n\nI wonder if something could be done here to ease life for ruby C extension programmers. For example, could there be any sensible implementation of rb_thread_interrupted (or during_gc, or ruby_native_thread_p, ...) in rubinius?\n\nIf not, I would appreciate some guidance in the documentation.\n\nKind regards,\n\naanno\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Console segfault when building 2.4.1 on OpenSUSE",
                "body": "[full build log](https://gist.github.com/darix/0b1875ec3cf9b44278a5)\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Drive adoption via specific projects",
                "body": "I think the idea behind Rubinius (implementing most of Ruby in Ruby itself) is great, so I want to see this project succeed.\n\nOne thing that may be helpful is to single out particular software projects and make them run really well on Rubinius. This will mostly entail work in the project itself, not in Rubinius. But by making Rubinius the primary runtime for the project, it'll increase participation and interest in Rubinius itself.\n\nSome properties of such a project that'll probably be useful:\n1. Should ideally be self-contained, not a library or framework. That way, less things can break, since no additional, end-user developed code is running on top. Optimizations are also easier.\n2. Should use aspects of Ruby that Rubinius is extra good at, e.g. speed or introspection.\n3. Should be popular in itself, since the purpose is to increase interest adoption of Rubinius.\n\nYou'll probably have better thoughts on candidates, but some that come to mind are:\n1. Logstash: popular, performance sensitive, memory introspection may be useful\n2. Chef: self-contained and popular\n3. Rubocop: self-contained, ubiquitous, performance may be important\n4. Sidekiq: performance is important\n\nThings to do could be improving documentation on running the project with Rubinius, making adjustments to make use of specific features in Rubinius (where relevant), make enhancements to Rubinius tailored specifically to these projects (similar to the Rails-MRI symbols garbage collection improvement).\n\nWhat do you think? Good idea, bad?\n\n[1] https://github.com/elasticsearch/logstash\n[3] https://github.com/opscode/chef\n[4] https://github.com/bbatsov/rubocop\n[5] https://github.com/mperham/sidekiq\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "\"Invalid handle usage detected!\" and core dumped on Linux, but not on Mac OS X.",
                "body": "For more details, please see the failed jobs of this [build](https://travis-ci.org/altkatz/jieba_rb/builds/44839361), It's an extension for a C++ library, works well on MRI (both on Linux and Mac OS X(10.10.1)) , and also works on Rubinius (tested 2.2.10-2.4.0 on my Mac OS X), but got the above coredump on Linux.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Implements guards against unwanted input in kernel Ruby code.",
                "body": "Certain parts of Ruby have dedicated errors for unexpected input (https://github.com/rubinius/rubinius/pull/3077 for example). While we can't add guards for _unexpected_ input we can add guards (in some shape or form) that state what a method _can_ deal with.\n\nWe'll need to come up with a system where we don't have to add special tags all over the place while still retaining some form of type/behaviour safety.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Does not implement ObjectSpace::WeakMap",
                "body": "Both MRI and JRuby implement `ObjectSpace::WeakMap`. Should Rubinius also implement it?\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "SIGABRT in feature spec using poltergeist",
                "body": "See [this Calagator](https://travis-ci.org/calagator/calagator/jobs/43298912#L417) run\n\nWill try to narrow down the spec later.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Regexp#source behaviour has changed in MRI 2",
                "body": "It looks like the Regexp#source behaviour changed has in MRI. JRuby has the same issue https://github.com/jruby/jruby/issues/2283.\n\n```\n$ ~/.rbenv/versions/1.8.7-p375/bin/ruby ../test.rb \n\"/\"\n\"\\\\/\"\n\n$ ~/.rbenv/versions/1.9.3-p550/bin/ruby ../test.rb \n\"/\"\n\"\\\\/\"\n\n$ ~/.rbenv/versions/2.0.0-p594/bin/ruby ../test.rb \n\"/\"\n\"/\"\n\n$ ~/.rbenv/versions/rbx-2.2.10/bin/ruby ../test.rb \n\"/\"\n\"\\\\/\"\n\n$ cat ../test.rb \np %r[/].source\np /\\//.source\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Ensure the tests for these projects run on Travis",
                "body": "Let's list them out here and then work on a dashboard. We should incorporate #2006 and #2121 in the dashboard.\n- [ ] sidekiq\n- [ ] celluloid\n- [ ] suckerpunch\n- [ ] Rails\n  - [ ] ActiveSupport\n  - [ ] ActionMailer\n  - [ ] ActionPack\n  - [ ] ActionView\n  - [ ] ActiveJob\n  - [ ] ActiveModel\n  - [ ] ActiveRecord\n- [ ] [New Relic RPM](https://github.com/newrelic/rpm) (blocked by https://github.com/newrelic/rpm/pull/197)\n- [ ] [Psych](https://github.com/tenderlove/psych)\n- [ ] [rspec-mocks](https://github.com/rspec/rspec-mocks) (and others)\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Rubinius sometimes hangs in SEGV handler under dlopen",
                "body": "We run our automated test suites against Rubinius (2.2.10 currently, planning to upgrade to 2.3.0 soon), and occasionally we see issues where Rubinius processes will get stuck and hang our tests indefinitely.\n\nDigging into one of those issues today with GDB, I found the offending Rubinius process stuck under the backtraces seen in [this gist](https://gist.github.com/benweint/f8bedea59b1ab8216357).\n\nThe thing that stuck out there to me was this:\n\n```\nThread 4 (Thread 0x7f32591a3700 (LWP 12267)):\n#0  0x00007f32607972be in __lll_lock_wait_private () from /lib64/libc.so.6\n#1  0x00007f326071c45b in _L_lock_9499 () from /lib64/libc.so.6\n#2  0x00007f3260719996 in malloc () from /lib64/libc.so.6\n#3  0x00007f3261a3fbad in _dl_map_object_deps () from /lib64/ld-linux-x86-64.so.2\n#4  0x00007f3261a45aa1 in dl_open_worker () from /lib64/ld-linux-x86-64.so.2\n#5  0x00007f3261a411b6 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2\n#6  0x00007f3261a454fa in _dl_open () from /lib64/ld-linux-x86-64.so.2\n#7  0x00007f32607c5e00 in do_dlopen () from /lib64/libc.so.6\n#8  0x00007f3261a411b6 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2\n#9  0x00007f32607c5f57 in __libc_dlopen_mode () from /lib64/libc.so.6\n#10 0x00007f326079db15 in init () from /lib64/libc.so.6\n#11 0x00007f32611dfd33 in pthread_once () from /lib64/libpthread.so.0\n#12 0x00007f326079dc44 in backtrace () from /lib64/libc.so.6\n#13 0x00000000006372f4 in rubinius::segv_handler (sig=11) at vm/signal.cpp:349\n#14 <signal handler called>\n#15 0x00007f3260715285 in malloc_consolidate () from /lib64/libc.so.6\n```\n\nIt looks like Rubinius is calling `backtrace` from its SEGV handler, resulting in libc `dlopen`ing something, which in turn mallocs, which at last deadlocks on some internal lock within the malloc implementation.\n\nThis looks like an instance of [this issue](https://sourceware.org/bugzilla/show_bug.cgi?id=956), (since marked as a dup of [this bug](https://sourceware.org/bugzilla/show_bug.cgi?id=956)). From my reading, it sounds like the behavior of `backtrace` calling `dlopen` is unlikely to change.\n\nIn order to avoid hangs like this, would it be reasonable for `rubinius` to somehow trigger the relevant `dlopen` on startup to avoid it happening during the SEGV handler and deadlocking?\n\nI unfortunately don't have a reliable repro case for this issue.\n\n```\n$ uname -a\nLinux <hostname> 2.6.32-279.el6.x86_64 #1 SMP Fri Jun 22 12:19:21 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux\n$ rbx -v\nrubinius 2.2.10 (2.1.0 bf61ae2e 2014-06-27 JI) [x86_64-linux-gnu]\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Polling Amazon SQS results in large quantities of memory being leaked",
                "body": "While running an application that uses SQS (Amazon's queueing service) I noticed quite the memory increase over time:\n\n![shepherd_rss_time](https://cloud.githubusercontent.com/assets/86065/5016808/958cd284-6aa9-11e4-872d-16bd3246ebdd.png)\n\nThis graph shows the application's total memory usage over time. Just before 2014-11-11 we deployed Rubinius 2.3 (the area with the 3 vertical bars). Directly after that memory usage almost doubled, although an increase in general was expected. However, the next peak was anything but expected. While more memory usage on Rubinius isn't uncommon a peak of almost 1,2GB indicated a serious problem. It was fairly clear to me there was a leak because:\n1. This app has been running for months on MRI without leaking memory (ignoring the crap garbage collector and its heap bloat)\n2. The application's own source code tries very hard _not_ to share any state, cache data globally, etc. In other words, either it's a Gem or Rubinius problem.\n\nTo figure out what was going on I employed a mix of my dtrace hacks (https://github.com/rubinius/rubinius/tree/dtrace-boxing) to trace allocations as well as showing verbose GC and JIT output (`-Xgc.show -Xgc.immix.debug -Xjit.show` to be exact). I also generated a bunch of Rbx heap dumps as well as running Rubinius under Massif (heap profiler part of Valgrind).\n\nAll these tools showed an interesting pattern, especially my dtrace hacks were tremendously helpful (not even kidding). Every 10 seconds or so (I didn't time it exactly) a whole bunch of allocations would occur, but without any GC runs following it. The interval matched the application's behaviour: every 10-or-so seconds it would poll Amazon SQS for a new job.\n\nThe interesting part here is the lack of GC runs. Assuming the AWS SDK doesn't keep data around (which I'm not sure about just yet) _somehow_ data would be allocated but never freed. Messing around with `ObjectSpace.find_object` and `ObjectSpace.find_references` didn't really help sadly.\n\nHowever, based on what the application does (it's actually quite a simple application) I set up a standalone script that mimics part of its behaviour. Lo and behold, it also leaks memory:\n\n``` ruby\ngem 'aws-sdk', '~> 1.0'\n\nrequire 'aws-sdk'\nrequire 'thread'\n\nAWS.config(:sqs_region => ENV['AWS_REGION'] || 'eu-west-1')\n\n# AWS SDK lazy loads half the world, which isn't very thread-safe. Lets eager\n# load what we need instead.\nAWS.eager_autoload!(AWS::SQS)\nAWS.eager_autoload!(AWS::Core)\n\nThread.abort_on_exception = true\n\nstdout_lock = Mutex.new\nnum_threads = ENV['THREADS'] ? ENV['THREADS'].to_i : 10\nqueue_name  = ENV['QUEUE'] || 'example'\n\nthreads = num_threads.times.map do |n|\n  Thread.new do\n    stdout_lock.synchronize { puts \"Starting thread #{n + 1}\" }\n\n    sqs   = AWS::SQS.new\n    queue = sqs.queues.named(queue_name)\n\n    queue.poll { }\n  end\nend\n\nthreads << Thread.new do\n  loop do\n    sleep 10\n\n    memory = `ps -o rss= #{Process.pid}`.strip.to_f / 1024\n\n    stdout_lock.synchronize { puts \"Memory usage: #{memory.round(2)} MB\" }\n  end\nend\n\n%w{TERM INT QUIT}.each do |signal|\n  trap(signal) do\n    threads.each(&:kill)\n  end\nend\n\nthreads.each(&:join)\n```\n\nFor this script you'll need to have an AWS account, a single SQS queue (default name is \"example\") and the following environment variables set:\n- `AWS_ACCESS_KEY_ID`\n- `AWS_SECRET_ACCESS_KEY`\n- `AWS_REGION`\n\nWhen running the script it should be fairly easy to notice it's leaking quite a bit of memory, especially when you crank up the amount of threads.\n\nOne interesting thing to note is that I've run my application using `-Xgc.immix.concurrent=false` which results in _way_ more stable memory usage:\n\n![shepherd_rss_time_non_concurrent](https://cloud.githubusercontent.com/assets/86065/5017055/41878c86-6aab-11e4-9bf3-3081a7c70af7.png)\n\nThe first vertical line marks the deployment containing the `-Xgc.immix.concurrent=false` option. The second vertical line marks the deployment where I replaced this option with `-Xgc.young_max_bytes=8388608` as suggested per @brixen. This didn't really help much, so the third line marks the deployment that reverted back to using the Immix option.\n\n**tl;dr:** Either Rubinius is not collecting objects properly, or the AWS SDK (or something it uses) is leaking memory without Rubinius being able to do something about it. Since I _suspect_ the former I'm reporting it here, but that's purely based on this problem never having occurred in the past.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "JIT aborts in Calagator specs",
                "body": "See https://gist.github.com/jc00ke/3654aee61260d05c42c5\n\n```\n$> uname -a\nLinux maynard 3.13.0-39-generic #66-Ubuntu SMP Tue Oct 28 13:30:27 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux\n\n$> rbx -v\nrubinius 2.3.0.n313 (2.1.0 21267107 2014-11-09 3.4.2 JI) [x86_64-linux-gnu]\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "SEGV when running specs after building with clang 3.4 on Linux",
                "body": "https://gist.github.com/jc00ke/e14a865a6934ba7d220c\n\n5299123 on 64bit Xubuntu segvs every time I run the specs.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "dtrace probe method__entry receives incorrect arguments in Systemtap",
                "body": "Consider the following Systemtap script:\n\n```\nprobe process(\"rbx\").mark(\"method__entry\")\n{\n    klass  = user_string($arg1)\n    method = user_string($arg2)\n    file   = user_string($arg3)\n    line   = $arg4\n\n    if ( isinstr(file, \"tmp/test.rb\") )\n        printf(\"%s(%d): %s#%s in %s:%d\\n\", execname(), pid(), klass, method, file, line)\n}\n```\n\nIf we use this to trace the following script:\n\n``` ruby\none  = 'AGG'\ntwo  = 'AAAACTGACCCACCCCAGG'\ndist = 0\n\none.each_char.with_index do |char, index|\n  dist += 1 if two[index] != char\nend\n\nputs dist\n```\n\nusing this command:\n\n```\n sudo -E stap /tmp/rbx.stp -c 'rbx /tmp/test.rb'\n```\n\nThen the output is as following:\n\n```\n2\nrbx(15397): String#/tmp/test.rb in /tmp/test.rb:5\nrbx(15397): Enumerable::Enumerator#/tmp/test.rb in /tmp/test.rb:5\nrbx(15397): BasicObject#/tmp/test.rb in /tmp/test.rb:6\nrbx(15397): BasicObject#/tmp/test.rb in /tmp/test.rb:6\nrbx(15397): BasicObject#/tmp/test.rb in /tmp/test.rb:6\nrbx(15397): <included module>#/tmp/test.rb in /tmp/test.rb:9\n```\n\nHere it looks like that the method name is instead set to the file name. However, when we trace native method entries (and remove the conditional for `test.rb` above) the output is as following:\n\n```\nrbx(15752): Rubinius#init in <unknown>:-2\nrbx(15752): CodeTools::Melbourne#file_to_ast in <unknown>:-2\nrbx(15752): CodeTools::Melbourne#file_to_ast in <unknown>:-2\nrbx(15752): CodeTools::Melbourne#file_to_ast in <unknown>:-2\nrbx(15752): CodeTools::Melbourne#file_to_ast in <unknown>:-2\nrbx(15752): CodeTools::Melbourne#file_to_ast in <unknown>:-2\nrbx(15752): CodeTools::Melbourne#file_to_ast in <unknown>:-2\nrbx(15752): CodeTools::Melbourne#file_to_ast in <unknown>:-2\nrbx(15752): CodeTools::Melbourne#file_to_ast in <unknown>:-2\nrbx(15752): CodeTools::Melbourne#file_to_ast in <unknown>:-2\nrbx(15752): CodeTools::Melbourne#file_to_ast in <unknown>:-2\nrbx(15752): CodeTools::Melbourne#file_to_ast in <unknown>:-2\nrbx(15752): CodeTools::Melbourne#file_to_ast in <unknown>:-2\n2\nrbx(15752): CodeTools::Melbourne#file_to_ast in <unknown>:-2\nrbx(15752): CodeTools::Melbourne#file_to_ast in <unknown>:-2\nrbx(15752): CodeTools::Melbourne#file_to_ast in <unknown>:-2\nrbx(15752): CodeTools::Melbourne#file_to_ast in <unknown>:-2\nrbx(15752): CodeTools::Melbourne#file_to_ast in <unknown>:-2\nrbx(15752): CodeTools::Melbourne#file_to_ast in <unknown>:-2\nrbx(15752): CodeTools::Melbourne#file_to_ast in <unknown>:-2\nrbx(15752): CodeTools::Melbourne#file_to_ast in <unknown>:-2\nrbx(15752): CodeTools::Melbourne#file_to_ast in <unknown>:-2\nrbx(15752): CodeTools::Melbourne#file_to_ast in <unknown>:-2\nrbx(15752): CodeTools::Melbourne#file_to_ast in <unknown>:-2\nrbx(15752): CodeTools::Melbourne#file_to_ast in <unknown>:-2\nrbx(15752): CodeTools::Melbourne#file_to_ast in <unknown>:-2\nrbx(15752): CodeTools::Melbourne#file_to_ast in <unknown>:-2\nrbx(15752): CodeTools::Melbourne#file_to_ast in <unknown>:-2\n```\n\nHere the method _is_ set correctly. This suggests that Rbx passes the incorrect data to the `method__entry` probe.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Rational * BigDecimal coerces into Float",
                "body": "MRI:\n\n```\nirb(main):001:0> (BigDecimal(1) * Rational(1)).class\n=> BigDecimal\nirb(main):002:0> (BigDecimal(1) * 0.1).class\n=> BigDecimal\n```\n\nRBX 2.3.0:\n\n```\nirb(main):001:0> (BigDecimal(1) * Rational(1)).class\n=> Float\nirb(main):002:0> (BigDecimal(1) * 0.1).class\n=> Float\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "rand bugs with ranges",
                "body": "On MRI 2.1.4:\n\n```\nirb(main):001:0> rand(1.0..1.0)\n=> 1.0\nirb(main):002:0> rand(1..0)\n=> nil\nirb(main):003:0> rand(BigDecimal(0.01, 2)..BigDecimal(1, 2))\n=> #<BigDecimal:7f966c0f1180,'0.1E-1',9(36)>\n```\n\nOn Rubinius 2.3.0:\n\n```\nirb(main):001:0> rand(1.0..1.0)\nArgumentError: invalid argument - 0.0\n    from kernel/common/random.rb:39:in `random'\n    from kernel/common/random.rb:72:in `random_range'\n    from kernel/common/random.rb:36:in `random'\n    from kernel/common/kernel.rb:687:in `rand'\nirb(main):002:0> rand(1..0)\nNoMethodError: undefined method `coerce' on nil:NilClass.\n    from kernel/delta/kernel.rb:78:in `coerce (method_missing)'\n    from kernel/common/random.rb:69:in `random_range'\n    from kernel/common/random.rb:36:in `random'\n    from kernel/common/kernel.rb:687:in `rand'\nirb(main):003:0> rand(BigDecimal(0.01, 2)..BigDecimal(1, 2))\nArgumentError: invalid argument - 0.99E0\n    from kernel/common/random.rb:43:in `random'\n    from kernel/common/random.rb:72:in `random_range'\n    from kernel/common/random.rb:36:in `random'\n    from kernel/common/kernel.rb:687:in `rand'\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "rbx 2.3 segfault",
                "body": "https://gist.github.com/washu/26d67f93ebff319ddb70\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "rbx 2.3 segfaults when installing pry",
                "body": "System:\n\nArch Linux x86_64\nLLVM 3.5.0\nRubinius 2.3.0 (installed with ruby-install 0.5.0)\n\nProblem:\n\nrbx segfaults when installing pry: https://gist.github.com/d0b072685dc90ab1d8ab\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "compilation issue on OpenSUSE",
                "body": "followed instructions from README:\n- using `rbx-2.3.0.tar.bz2` https://gist.github.com/mpapis/085a0f7fd10d0c07a563\n- \\+ `clang` https://gist.github.com/mpapis/e6f79c7ef85fe7d08410\n- using `master` https://gist.github.com/mpapis/7be0204a6d28ca827d5a\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "ld: -rpath can only be used when targeting Mac OS X 10.5 or later",
                "body": "when installing rbx in yosimete\n\nfor ld to work properly with -rpath flag, i did this\n\n```\nexport MACOSX_DEPLOYMENT_TARGET=10.9\nrvm install rbx\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "require picking up gems outside of bundle",
                "body": "Ran into an issue in our CI environment where Rubinius was loading gems that weren't in our `Gemfile`. Here's the simplest duplication I've been able to get to:\n\n1) Uninstall all versions of `activesupport`, `activemodel` and `activerecord`\n2) `gem install activerecord`\n3) With an empty `Gemfile`:\n\n```\nsource \"https://rubygems.org\"\n```\n\n4) Run this script:\n\n```\nrequire 'bundler/setup'\nBundler.require\n\nrequire 'active_record'\nputs ActiveRecord::VERSION::STRING\n```\n\nWith this setup, you see the version printed, despite the fact that `activerecord` is not in our `Gemfile` and shouldn't be able to load.\n\nWhile in this specific set of steps the script runs, I've also ended up with gems loading seemingly random versions, probably by file-system ordering (for instance [this gist](https://gist.github.com/jasonrclark/7b1220f6153a58fd01bc) where you can see ActiveRecord 4.2 ending up calling into ActiveModel 3.0). That's the main point behind step 1)--getting down to a single version takes the variability out of the test.\n\nFor reference, the expected result which I see from MRI is:\n\n```\nboo.rb:4:in `require': cannot load such file -- active_record (LoadError)\n    from boo.rb:4:in `<main>'\n```\n\nIf there's anything I can do to help out with this, let me know. Thanks for all you do!\n\nVersion information:\n\n```\nrbx -v\nrubinius 2.2.10 (2.1.0 bf61ae2e 2014-06-27 JI) [x86_64-darwin12.5.0]\n\nuname -a\nDarwin Soupy.local 13.4.0 Darwin Kernel Version 13.4.0: Sun Aug 17 19:50:11 PDT 2014; root:xnu-2422.115.4~1/RELEASE_X86_64 x86_64\n\nrbenv --version\nrbenv 0.4.0-95-gf71e227\n\ngem --version\n2.4.2\n\nbundle --version\nBundler version 1.7.3\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Some string methods don't support multibyte-character",
                "body": "The following methods are implemented in C++ without being aware of multi-byte characters. \n- String#count\n- String#delete!\n- String#dump\n- String#tr\n- Regexp#escape\n\nI'd rather like to hear opinion: should we extend the existing C++ implementation to support multibyte char or switch to a shiny new Ruby implementation, which will be written by me?\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "rubinius process hung",
                "body": "Sinatra server stopped accepting connections. Rubinius agent could not attach either.\n\n```\n\nThread 5 (Thread 0x7fffef30c700 (LWP 22110)):\n#0  pthread_cond_timedwait@@GLIBC_2.3.2 () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:215\n#1  0x00000000006877f0 in wait_until (ts=0x7fffef309fe0, mutex=..., this=<optimized out>) at /home/ghazel/rubinius/vm/util/thread.hpp:443\n#2  rubinius::Channel::receive_timeout (this=<optimized out>, state=0x7fffef30bdd0, gct=..., duration=0x7d1, call_frame=0x7fffef30a440)\n    at vm/builtin/channel.cpp:159\n#3  0x0000000000638d94 in rubinius::Primitives::channel_receive_timeout (state=0x7fffef30bdd0, call_frame=0x7fffef30a440, exec=0x7ffff5ab9180, mod=0x1607c30, \n    args=...) at vm/gen/method_primitives.cpp:3288\n#4  0x0000000000686884 in rubinius::CallSite::empty_cache (state=0x7fffef30bdd0, call_site=0x7fffefa99cc0, call_frame=0x7fffef30a440, args=...)\n    at vm/builtin/call_site.cpp:95\n#5  0x00000000005bd40f in execute (args=..., call_frame=0x7fffef30a440, state=0x7fffef30bdd0, this=<optimized out>) at vm/builtin/call_site.hpp:108\n#6  rubinius::MachineCode::interpreter (state=<optimized out>, mcode=0x7fffdc000960, call_frame=0x7fffef30a440) at vm/gen/instruction_implementations.hpp:543\n#7  0x00000000005fc944 in rubinius::MachineCode::execute_specialized<rubinius::NoArguments> (state=0x7fffef30bdd0, previous=<optimized out>, \n    exec=0x7fffefa69b80, mod=0x17da960, args=...) at vm/machine_code.cpp:671\n#8  0x000000000068b267 in rubinius::CompiledCode::default_executor (state=0x7fffef30bdd0, call_frame=0x7fffef30ab30, exec=0x7fffefa69b80, mod=0x17da960, \n    args=...) at vm/builtin/compiled_code.cpp:224\n#9  0x0000000000686484 in rubinius::CallSite::empty_cache_vcall (state=0x7fffef30bdd0, call_site=0x7fffefa7ad58, call_frame=0x7fffef30ab30, args=...)\n    at vm/builtin/call_site.cpp:160\n#10 0x00000000005bd7bc in execute (args=..., call_frame=0x7fffef30ab30, state=0x7fffef30bdd0, this=<optimized out>) at vm/builtin/call_site.hpp:108\n#11 rubinius::MachineCode::interpreter (state=<optimized out>, mcode=0x17dab00, call_frame=0x7fffef30ab30) at vm/gen/instruction_implementations.hpp:526\n#12 0x0000000000682db4 in rubinius::BlockEnvironment::execute_interpreter (state=0x7fffef30bdd0, previous=0x7fffef30b100, env=0x7fffefa7ada0, args=..., \n    invocation=...) at vm/builtin/block_environment.cpp:356\n#13 0x000000000068350d in rubinius::BlockEnvironment::invoke (state=0x7fffef30bdd0, previous=0x7fffef30b1f0, env=0x7fffefa7ada0, args=..., invocation=...)\n    at vm/builtin/block_environment.cpp:91\n#14 0x000000000068372d in rubinius::BlockEnvironment::call (this=<optimized out>, state=<optimized out>, call_frame=<optimized out>, args=..., \n    flags=<optimized out>) at vm/builtin/block_environment.cpp:375\n#15 0x00000000006c83fc in rubinius::Proc::call (this=0x7fffefa7b538, state=0x7fffef30bdd0, call_frame=0x7fffef30b1f0, args=...) at vm/builtin/proc.cpp:119\n#16 0x000000000061f9bc in rubinius::Primitives::proc_call (state=0x7fffef30bdd0, call_frame=0x7fffef30b1f0, exec=0x7ffff5b2b998, mod=0x16075b0, args=...)\n    at vm/gen/method_primitives.cpp:14993\n#17 0x00000000005be041 in execute (args=..., call_frame=0x7fffef30b1f0, state=0x7fffef30bdd0, this=0x7ffff5d9c758) at vm/builtin/call_site.hpp:108\n#18 rubinius::MachineCode::interpreter (state=<optimized out>, mcode=0x16af230, call_frame=0x7fffef30b1f0) at vm/gen/instruction_implementations.hpp:590\n#19 0x00000000005fc570 in rubinius::MachineCode::execute_specialized<rubinius::SplatOnlyArgument> (state=0x7fffef30bdd0, previous=0x7fffef30b770, \n    exec=0x7ffff5b22228, mod=0x16075b0, args=...) at vm/machine_code.cpp:671\n#20 0x0000000000686884 in rubinius::CallSite::empty_cache (state=0x7fffef30bdd0, call_site=0x7ffff5aca2a0, call_frame=0x7fffef30b770, args=...)\n    at vm/builtin/call_site.cpp:95\n#21 0x00000000005be041 in execute (args=..., call_frame=0x7fffef30b770, state=0x7fffef30bdd0, this=0x7ffff5aca2a0) at vm/builtin/call_site.hpp:108\n#22 rubinius::MachineCode::interpreter (state=<optimized out>, mcode=0x16ce000, call_frame=0x7fffef30b770) at vm/gen/instruction_implementations.hpp:590\n#23 0x00000000005fc944 in rubinius::MachineCode::execute_specialized<rubinius::NoArguments> (state=0x7fffef30bdd0, previous=<optimized out>, \n    exec=0x7ffff5ac9c68, mod=0x1606160, args=...) at vm/machine_code.cpp:671\n#24 0x000000000059738c in rubinius::Dispatch::send (this=0x7fffef30bc00, state=0x7fffef30bdd0, call_frame=0x0, lookup=..., args=..., reason=<optimized out>)\n    at vm/dispatch.cpp:49\n#25 0x00000000006bc90b in rubinius::Object::send (this=<optimized out>, state=<optimized out>, caller=<optimized out>, name=<optimized out>, \n    allow_private=<optimized out>) at vm/builtin/object.cpp:515\n#26 0x00000000006db546 in rubinius::Thread::in_new_thread (ptr=0x17db060) at vm/builtin/thread.cpp:259\n#27 0x00007ffff757fe9a in start_thread (arg=0x7fffef30c700) at pthread_create.c:308\n#28 0x00007ffff6a9a3fd in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:112\n#29 0x0000000000000000 in ?? ()\n\nThread 4 (Thread 0x7fffeffff700 (LWP 22103)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:162\n#1  0x0000000000706344 in wait (mutex=..., this=0x1b102d0) at /home/ghazel/rubinius/vm/util/thread.hpp:431\n#2  rubinius::ImmixMarker::perform (this=0x1b10230, state=0x7fffefffedd0) at vm/gc/immix_marker.cpp:191\n#3  0x00000000007064d6 in rubinius::immix_marker_tramp (state=0x7fffefffedd0) at vm/gc/immix_marker.cpp:18\n#4  0x00000000006db546 in rubinius::Thread::in_new_thread (ptr=0x1aa3d90) at vm/builtin/thread.cpp:259\n#5  0x00007ffff757fe9a in start_thread (arg=0x7fffeffff700) at pthread_create.c:308\n#6  0x00007ffff6a9a3fd in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:112\n#7  0x0000000000000000 in ?? ()\n\nThread 3 (Thread 0x7ffff52d3700 (LWP 22088)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../nptl/sysdeps/unix/sysv/linux/x86_%%64/pthread_cond_wait.S:162\n#1  0x00000000006fee97 in wait (mutex=..., this=<optimized out>) at /home/openg%arden/rubinius/vm/util/thread.hpp:431\n#2  rubinius::FinalizerHandler::worker_wait (this=<optimized out>) at vm/gc/finalize.cpp:500\n#3  0x00000000006feff0 in rubinius::FinalizerHandler::perform (this=0x1627ce0, state=0x7ffff52d2dd0) at vm/gc/finalize.cpp:222\n#4  0x00000000006ff18c in rubinius::finalizer_handler_tramp (state=0x7ffff52d2dd0) at vm/gc/finalize.cpp:73\n#5  0x00000000006db546 in rubinius::Thread::in_new_thread (ptr=0x16d8c00) at vm/builtin/thread.cpp:259\n#6  0x00007ffff757fe9a in start_thread (arg=0x7ffff52d3700) at pthread_create.c:308\n#7  0x00007ffff6a9a3fd in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:112\n#8  0x0000000000000000 in ?? ()\n\nThread 2 (Thread 0x7ffff56d4700 (LWP 22084)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:162\n#1  0x0000000000657475 in wait (mutex=..., this=0x1628330) at /home/ghazel/rubinius/vm/util/thread.hpp:431\n#2  rubinius::SignalHandler::perform (this=0x1628180, state=0x7ffff56d3dd0) at vm/signal.cpp:184\n#3  0x000000000065763c in rubinius::signal_handler_tramp (state=0x7ffff56d3dd0) at vm/signal.cpp:47\n#4  0x00000000006db546 in rubinius::Thread::in_new_thread (ptr=0x16283d0) at vm/builtin/thread.cpp:259\n#5  0x00007ffff757fe9a in start_thread (arg=0x7ffff56d4700) at pthread_create.c:308\n#6  0x00007ffff6a9a3fd in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:112\n#7  0x0000000000000000 in ?? ()\n\nThread 1 (Thread 0x7ffff7fe2740 (LWP 22069)):\n#0  0x00007ffff6ab02e0 in __read_chk (fd=<optimized out>, buf=0x7fffffff6b50, nbytes=8192, buflen=<optimized out>) at read_chk.c:34\n#1  0x00000000006a9efa in read (__nbytes=8192, __buf=0x7fffffff6b50, __fd=7) at /usr/include/x86_64-linux-gnu/bits/unistd.h:40\n#2  rubinius::IOBuffer::fill (this=<optimized out>, state=0x15cbbc0, io=0x7fffef902480, calling_environment=0x7fffffff8ef0) at vm/builtin/io.cpp:1430\n#3  0x000000000062861a in rubinius::Primitives::iobuffer_fill (state=0x15cbbc0, call_frame=0x7fffffff8ef0, exec=0x7ffff5ae5b90, mod=0x1602300, args=...)\n    at vm/gen/method_primitives.cpp:10563\n#4  0x00000000005bd40f in execute (args=..., call_frame=0x7fffffff8ef0, state=0x15cbbc0, this=<optimized out>) at vm/builtin/call_site.hpp:108\n#5  rubinius::MachineCode::interpreter (state=<optimized out>, mcode=0x18ccdd0, call_frame=0x7fffffff8ef0) at vm/gen/instruction_implementations.hpp:543\n#6  0x0000000000682db4 in rubinius::BlockEnvironment::execute_interpreter (state=0x15cbbc0, previous=0x7fffffff9400, env=0x7fffef91ff30, args=..., \n    invocation=...) at vm/builtin/block_environment.cpp:356\n#7  0x000000000068350d in rubinius::BlockEnvironment::invoke (state=0x15cbbc0, previous=0x7fffffff94e0, env=0x7fffef91ff30, args=..., invocation=...)\n    at vm/builtin/block_environment.cpp:91\n#8  0x000000000068372d in rubinius::BlockEnvironment::call (this=<optimized out>, state=<optimized out>, call_frame=<optimized out>, args=..., \n    flags=<optimized out>) at vm/builtin/block_environment.cpp:375\n#9  0x00000000005bec15 in rubinius::MachineCode::interpreter (state=<optimized out>, mcode=0x19cbb10, call_frame=0x7fffffff94e0)\n    at vm/gen/instruction_implementations.hpp:773\n#10 0x00000000005fc0bc in rubinius::MachineCode::execute_specialized<rubinius::OneArgument> (state=0x15cbbc0, previous=<optimized out>, exec=0x7ffff5a696f8, \n    mod=0x1631fb0, args=...) at vm/machine_code.cpp:671\n#11 0x00000000005bd6d7 in execute (args=..., call_frame=0x7fffffff99a0, state=0x15cbbc0, this=<optimized out>) at vm/builtin/call_site.hpp:108\n#12 rubinius::MachineCode::interpreter (state=<optimized out>, mcode=0x185f500, call_frame=0x7fffffff99a0) at vm/gen/instruction_implementations.hpp:561\n#13 0x00000000005fa9dc in rubinius::MachineCode::execute_specialized<rubinius::GenericArguments> (state=0x15cbbc0, previous=0x7fffffff9b67, \n    exec=0x7ffff5cdd938, mod=0x1602300, args=...) at vm/machine_code.cpp:671\n#14 0x0000000000686884 in rubinius::CallSite::empty_cache (state=0x15cbbc0, call_site=0x7ffff5ca1708, call_frame=0x7fffffff9f30, args=...)\n    at vm/builtin/call_site.cpp:95\n#15 0x00000000005bd40f in execute (args=..., call_frame=0x7fffffff9f30, state=0x15cbbc0, this=<optimized out>) at vm/builtin/call_site.hpp:108\n#16 rubinius::MachineCode::interpreter (state=<optimized out>, mcode=0x18700a0, call_frame=0x7fffffff9f30) at vm/gen/instruction_implementations.hpp:543\n#17 0x00000000005fc944 in rubinius::MachineCode::execute_specialized<rubinius::NoArguments> (state=0x15cbbc0, previous=<optimized out>, exec=0x7ffff5ca0f00, \n    mod=0x1602040, args=...) at vm/machine_code.cpp:671\n#18 0x0000000000686484 in rubinius::CallSite::empty_cache_vcall (state=0x15cbbc0, call_site=0x7ffff5cc0ff8, call_frame=0x7fffffffa490, args=...)\n    at vm/builtin/call_site.cpp:160\n#19 0x00000000005bd7bc in execute (args=..., call_frame=0x7fffffffa490, state=0x15cbbc0, this=<optimized out>) at vm/builtin/call_site.hpp:108\n#20 rubinius::MachineCode::interpreter (state=<optimized out>, mcode=0x186f6e0, call_frame=0x7fffffffa490) at vm/gen/instruction_implementations.hpp:526\n#21 0x00000000005fa9dc in rubinius::MachineCode::execute_specialized<rubinius::GenericArguments> (state=0x15cbbc0, previous=0x7fffffffa697, \n    exec=0x7ffff5cc05f8, mod=0x1602040, args=...) at vm/machine_code.cpp:671\n#22 0x0000000000686884 in rubinius::CallSite::empty_cache (state=0x15cbbc0, call_site=0x7fffef91eab0, call_frame=0x7fffffffaa70, args=...)\n    at vm/builtin/call_site.cpp:95\n#23 0x00000000005bd40f in execute (args=..., call_frame=0x7fffffffaa70, state=0x15cbbc0, this=<optimized out>) at vm/builtin/call_site.hpp:108\n#24 rubinius::MachineCode::interpreter (state=<optimized out>, mcode=0x17042c0, call_frame=0x7fffffffaa70) at vm/gen/instruction_implementations.hpp:543\n#25 0x0000000000682db4 in rubinius::BlockEnvironment::execute_interpreter (state=0x15cbbc0, previous=0x7fffffffb000, env=0x7fffef91eaf8, args=..., \n    invocation=...) at vm/builtin/block_environment.cpp:356\n#26 0x000000000068350d in rubinius::BlockEnvironment::invoke (state=0x15cbbc0, previous=0x7fffffffb040, env=0x7fffef91eaf8, args=..., invocation=...)\n    at vm/builtin/block_environment.cpp:91\n#27 0x000000000068372d in rubinius::BlockEnvironment::call (this=<optimized out>, state=<optimized out>, call_frame=<optimized out>, args=..., \n    flags=<optimized out>) at vm/builtin/block_environment.cpp:375\n#28 0x00000000005bec15 in rubinius::MachineCode::interpreter (state=<optimized out>, mcode=0x1704420, call_frame=0x7fffffffb040)\n    at vm/gen/instruction_implementations.hpp:773\n#29 0x00000000005fa9dc in rubinius::MachineCode::execute_specialized<rubinius::GenericArguments> (state=0x15cbbc0, previous=0x7fffffffb227, \n    exec=0x7fffefaa2930, mod=0x17da960, args=...) at vm/machine_code.cpp:671\n#30 0x000000000068b267 in rubinius::CompiledCode::default_executor (state=0x15cbbc0, call_frame=0x7fffffffb6f0, exec=0x7fffefaa2930, mod=0x17da960, args=...)\n    at vm/builtin/compiled_code.cpp:224\n#31 0x0000000000686884 in rubinius::CallSite::empty_cache (state=0x15cbbc0, call_site=0x7ffff42c2d38, call_frame=0x7fffffffb6f0, args=...)\n    at vm/builtin/call_site.cpp:95\n#32 0x00000000005bd6d7 in execute (args=..., call_frame=0x7fffffffb6f0, state=0x15cbbc0, this=<optimized out>) at vm/builtin/call_site.hpp:108\n#33 rubinius::MachineCode::interpreter (state=<optimized out>, mcode=0x1611470, call_frame=0x7fffffffb6f0) at vm/gen/instruction_implementations.hpp:561\n#34 0x00000000005fa3ea in rubinius::MachineCode::execute_as_script (this=<optimized out>, state=0x15cbbc0, code=0x7fffef920758, previous=<optimized out>)\n    at vm/machine_code.cpp:734\n#35 0x00000000006d91fd in rubinius::System::vm_run_script (state=0x15cbbc0, gct=..., code=0x7ffff42c0080, calling_environment=0x7fffffffbcb0)\n    at vm/builtin/system.cpp:1518\n#36 0x0000000000611ecb in rubinius::Primitives::vm_run_script (state=0x15cbbc0, call_frame=0x7fffffffbcb0, exec=0x7ffff5a679b8, mod=0x1631fb0, args=...)\n    at vm/gen/method_primitives.cpp:21850\n#37 0x0000000000686884 in rubinius::CallSite::empty_cache (state=0x15cbbc0, call_site=0x7fffefaa9140, call_frame=0x7fffffffbcb0, args=...)\n    at vm/builtin/call_site.cpp:95\n#38 0x00000000005bd40f in execute (args=..., call_frame=0x7fffffffbcb0, state=0x15cbbc0, this=<optimized out>) at vm/builtin/call_site.hpp:108\n#39 rubinius::MachineCode::interpreter (state=<optimized out>, mcode=0x188dcb0, call_frame=0x7fffffffbcb0) at vm/gen/instruction_implementations.hpp:543\n#40 0x00000000005fc0bc in rubinius::MachineCode::execute_specialized<rubinius::OneArgument> (state=0x15cbbc0, previous=<optimized out>, exec=0x7ffff6091298, \n    mod=0x181e0a0, args=...) at vm/machine_code.cpp:671\n#41 0x000000000068b267 in rubinius::CompiledCode::default_executor (state=0x15cbbc0, call_frame=0x7fffffffc320, exec=0x7ffff6091298, mod=0x181e0a0, args=...)\n    at vm/builtin/compiled_code.cpp:224\n#42 0x0000000000686884 in rubinius::CallSite::empty_cache (state=0x15cbbc0, call_site=0x7ffff6684188, call_frame=0x7fffffffc320, args=...)\n    at vm/builtin/call_site.cpp:95\n#43 0x00000000005bd40f in execute (args=..., call_frame=0x7fffffffc320, state=0x15cbbc0, this=<optimized out>) at vm/builtin/call_site.hpp:108\n#44 rubinius::MachineCode::interpreter (state=<optimized out>, mcode=0x195ecd0, call_frame=0x7fffffffc320) at vm/gen/instruction_implementations.hpp:543\n#45 0x00000000005fa9dc in rubinius::MachineCode::execute_specialized<rubinius::GenericArguments> (state=0x15cbbc0, previous=0x7fffffffc4e7, \n    exec=0x7ffff608f238, mod=0x181e150, args=...) at vm/machine_code.cpp:671\n#46 0x000000000068b267 in rubinius::CompiledCode::default_executor (state=0x15cbbc0, call_frame=0x7fffffffc9b0, exec=0x7ffff608f238, mod=0x181e150, args=...)\n    at vm/builtin/compiled_code.cpp:224\n#47 0x0000000000686884 in rubinius::CallSite::empty_cache (state=0x15cbbc0, call_site=0x7ffff66702d8, call_frame=0x7fffffffc9b0, args=...)\n    at vm/builtin/call_site.cpp:95\n#48 0x00000000005bd40f in execute (args=..., call_frame=0x7fffffffc9b0, state=0x15cbbc0, this=<optimized out>) at vm/builtin/call_site.hpp:108\n#49 rubinius::MachineCode::interpreter (state=<optimized out>, mcode=0x19a06d0, call_frame=0x7fffffffc9b0) at vm/gen/instruction_implementations.hpp:543\n#50 0x00000000005fc944 in rubinius::MachineCode::execute_specialized<rubinius::NoArguments> (state=0x15cbbc0, previous=<optimized out>, exec=0x7ffff6015c40, \n    mod=0x18125d0, args=...) at vm/machine_code.cpp:671\n#51 0x000000000068b267 in rubinius::CompiledCode::default_executor (state=0x15cbbc0, call_frame=0x7fffffffd030, exec=0x7ffff6015c40, mod=0x18125d0, args=...)\n    at vm/builtin/compiled_code.cpp:224\n#52 0x0000000000686484 in rubinius::CallSite::empty_cache_vcall (state=0x15cbbc0, call_site=0x7ffff600d320, call_frame=0x7fffffffd030, args=...)\n    at vm/builtin/call_site.cpp:160\n#53 0x00000000005bd7bc in execute (args=..., call_frame=0x7fffffffd030, state=0x15cbbc0, this=<optimized out>) at vm/builtin/call_site.hpp:108\n#54 rubinius::MachineCode::interpreter (state=<optimized out>, mcode=0x19c39d0, call_frame=0x7fffffffd030) at vm/gen/instruction_implementations.hpp:526\n#55 0x00000000005fc944 in rubinius::MachineCode::execute_specialized<rubinius::NoArguments> (state=0x15cbbc0, previous=<optimized out>, exec=0x7ffff6446250, \n    mod=0x18125d0, args=...) at vm/machine_code.cpp:671\n#56 0x000000000068b267 in rubinius::CompiledCode::default_executor (state=0x15cbbc0, call_frame=0x0, exec=0x7ffff6446250, mod=0x18125d0, args=...)\n    at vm/builtin/compiled_code.cpp:224\n#57 0x000000000059738c in rubinius::Dispatch::send (this=0x7fffffffd590, state=0x15cbbc0, call_frame=0x0, lookup=..., args=..., reason=<optimized out>)\n    at vm/dispatch.cpp:49\n#58 0x00000000006bc90b in rubinius::Object::send (this=<optimized out>, state=<optimized out>, caller=<optimized out>, name=<optimized out>, \n    allow_private=<optimized out>) at vm/builtin/object.cpp:515\n#59 0x000000000059cddf in rubinius::Environment::run_from_filesystem (this=0x7fffffffd710) at vm/environment.cpp:671\n#60 0x000000000055ddd1 in main (argc=<optimized out>, argv=<optimized out>) at vm/drivers/cli.cpp:55\nquit\nA debugging session is active.\n\n    Inferior 1 [process 22069] will be killed.\n\nQuit anyway? (y or n) Starting program: /home/ghazel/.rvm/rubies/rbx-2.2.6/bin/ruby bug.rb\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\n[New Thread 0x7ffff56d4700 (LWP 55254)]\n[New Thread 0x7ffff52d3700 (LWP 55264)]\n[New Thread 0x7fffeffff700 (LWP 55265)]\n[New Thread 0x7ffff69a5700 (LWP 55272)]\n[New Thread 0x7fffef6e7700 (LWP 55276)]\n[New Thread 0x7fffed010700 (LWP 55310)]\n[New Thread 0x7fffecc0f700 (LWP 55311)]\n[New Thread 0x7fffec80e700 (LWP 55312)]\n[New Thread 0x7fffd3fff700 (LWP 55313)]\n[New Thread 0x7fffd37da700 (LWP 55314)]\n[New Thread 0x7fffd33d9700 (LWP 55315)]\n[New Thread 0x7fffd2fd8700 (LWP 55316)]\n[New Thread 0x7fffd2bd7700 (LWP 55317)]\n[New Thread 0x7fffd27d6700 (LWP 55318)]\n[New Thread 0x7fffd23d5700 (LWP 55319)]\n\nProgram received signal SIGINT, Interrupt.\npthread_cond_wait@@GLIBC_2.3.2 () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:162\n162 ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S: No such file or directory.\nUndefined command: \"exit\".  Try \"help\".\nA debugging session is active.\n\n    Inferior 1 [process 55231] will be killed.\n\nQuit anyway? (y or n) \nThread 26 (Thread 0x7fcc9584b700 (LWP 41546)):\n#0  0x00007fcc96c0a683 in select () at ../sysdeps/unix/syscall-template.S:82\n#1  0x00000000005815ca in rubinius::QueryAgent::perform(rubinius::State*) ()\n#2  0x000000000058297c in rubinius::query_agent_tramp(rubinius::State*) ()\n#3  0x00000000006dd4f6 in rubinius::Thread::in_new_thread(void*) ()\n#4  0x00007fcc976f5e9a in start_thread (arg=0x7fcc9584b700) at pthread_create.c:308\n#5  0x00007fcc96c1131d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:112\n#6  0x0000000000000000 in ?? ()\n\nThread 25 (Thread 0x7fcc9544a700 (LWP 41547)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:162\n#1  0x0000000000657dd5 in rubinius::SignalHandler::perform(rubinius::State*) ()\n#2  0x0000000000657f9c in rubinius::signal_handler_tramp(rubinius::State*) ()\n#3  0x00000000006dd4f6 in rubinius::Thread::in_new_thread(void*) ()\n#4  0x00007fcc976f5e9a in start_thread (arg=0x7fcc9544a700) at pthread_create.c:308\n#5  0x00007fcc96c1131d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:112\n#6  0x0000000000000000 in ?? ()\n\nThread 24 (Thread 0x7fcc95049700 (LWP 41552)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:162\n#1  0x0000000000700df7 in rubinius::FinalizerHandler::worker_wait() ()\n#2  0x0000000000700f50 in rubinius::FinalizerHandler::perform(rubinius::State*) ()\n#3  0x00000000007010ec in rubinius::finalizer_handler_tramp(rubinius::State*) ()\n#4  0x00000000006dd4f6 in rubinius::Thread::in_new_thread(void*) ()\n#5  0x00007fcc976f5e9a in start_thread (arg=0x7fcc95049700) at pthread_create.c:308\n#6  0x00007fcc96c1131d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:112\n#7  0x0000000000000000 in ?? ()\n\nThread 23 (Thread 0x7fcc87fff700 (LWP 41556)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:162\n#1  0x00000000007082a4 in rubinius::ImmixMarker::perform(rubinius::State*) ()\n#2  0x0000000000708436 in rubinius::immix_marker_tramp(rubinius::State*) ()\n#3  0x00000000006dd4f6 in rubinius::Thread::in_new_thread(void*) ()\n#4  0x00007fcc976f5e9a in start_thread (arg=0x7fcc87fff700) at pthread_create.c:308\n#5  0x00007fcc96c1131d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:112\n#6  0x0000000000000000 in ?? ()\n\nThread 22 (Thread 0x7fcc878fe700 (LWP 41560)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:162\n#1  0x0000000000774575 in rubinius::BackgroundCompilerThread::perform() ()\n#2  0x0000000000774122 in rubinius::utilities::thread::Thread::trampoline(void*) ()\n#3  0x00007fcc976f5e9a in start_thread (arg=0x7fcc878fe700) at pthread_create.c:308\n#4  0x00007fcc96c1131d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:112\n#5  0x0000000000000000 in ?? ()\n\nThread 21 (Thread 0x7fcc85b03700 (LWP 41637)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:162\n#1  0x0000000000688345 in rubinius::Channel::receive_timeout(rubinius::State*, rubinius::GCTokenImpl&, rubinius::Object*, rubinius::CallFrame*) ()\n#2  0x000000000063977f in rubinius::Primitives::channel_receive(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#3  0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#4  0x00000000005fcfe4 in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::NoArguments>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#5  0x000000000068bcb7 in rubinius::CompiledCode::default_executor(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#6  0x0000000000686ed4 in rubinius::CallSite::empty_cache_vcall(rubinius::State*, rubinius::CallSite*, rubinius::CallFrame*, rubinius::Arguments&) ()\n#7  0x00000000005bdd1c in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#8  0x0000000000683804 in rubinius::BlockEnvironment::execute_interpreter(rubinius::State*, rubinius::CallFrame*, rubinius::BlockEnvironment*, rubinius::Arguments&, rubinius::BlockInvocation&) ()\n#9  0x0000000000683f5d in rubinius::BlockEnvironment::invoke(rubinius::State*, rubinius::CallFrame*, rubinius::BlockEnvironment*, rubinius::Arguments&, rubinius::BlockInvocation&) ()\n#10 0x000000000068417d in rubinius::BlockEnvironment::call(rubinius::State*, rubinius::CallFrame*, rubinius::Arguments&, int) ()\n#11 0x00000000006c8e4c in rubinius::Proc::call(rubinius::State*, rubinius::CallFrame*, rubinius::Arguments&) ()\n#12 0x000000000062022c in rubinius::Primitives::proc_call(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#13 0x00000000005be5a1 in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#14 0x00000000005fcc10 in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::SplatOnlyArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#15 0x00000000006872d4 in rubinius::CallSite::empty_cache(rubinius::State*, rubinius::CallSite*, rubinius::CallFrame*, rubinius::Arguments&) ()\n#16 0x00000000005be5a1 in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#17 0x00000000005fcfe4 in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::NoArguments>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#18 0x00000000005979ac in rubinius::Dispatch::send(rubinius::State*, rubinius::CallFrame*, rubinius::LookupData&, rubinius::Arguments&, rubinius::MethodMissingReason) ()\n#19 0x00000000006bd35b in rubinius::Object::send(rubinius::State*, rubinius::CallFrame*, rubinius::Symbol*, bool) ()\n#20 0x00000000006dd4f6 in rubinius::Thread::in_new_thread(void*) ()\n#21 0x00007fcc976f5e9a in start_thread (arg=0x7fcc85b03700) at pthread_create.c:308\n#22 0x00007fcc96c1131d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:112\n#23 0x0000000000000000 in ?? ()\n\nThread 20 (Thread 0x7fcc77bed700 (LWP 41666)):\n#0  0x00007fcc9804a16e in ?? ()\n#1  0x0000000000000000 in ?? ()\n\nThread 19 (Thread 0x7fcc74881700 (LWP 41688)):\n#0  0x00007fcc96c0a683 in select () at ../sysdeps/unix/syscall-template.S:82\n#1  0x00000000006a8199 in rubinius::IO::select(rubinius::State*, rubinius::Object*, rubinius::Object*, rubinius::Object*, rubinius::Object*, rubinius::CallFrame*) ()\n#2  0x00000000005f3393 in jit_stub_io_select ()\n#3  0x00007fcc76d4d9e9 in ?? ()\n#4  0x0000000003937c59 in ?? ()\n#5  0x00007fcc74880dd0 in ?? ()\n#6  0x00007fcc7487f2f8 in ?? ()\n#7  0x417c9be2cb8fa000 in ?? ()\n#8  0x00007fcc7487f200 in ?? ()\n#9  0x00000000006daac4 in rubinius::System::vm_object_unlock(rubinius::State*, rubinius::GCTokenImpl&, rubinius::Object*, rubinius::CallFrame*) ()\n#10 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#11 0x00000000005fcfe4 in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::NoArguments>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#12 0x000000000068bcb7 in rubinius::CompiledCode::default_executor(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#13 0x0000000000686ed4 in rubinius::CallSite::empty_cache_vcall(rubinius::State*, rubinius::CallSite*, rubinius::CallFrame*, rubinius::Arguments&) ()\n#14 0x00000000005bdd1c in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#15 0x0000000000683804 in rubinius::BlockEnvironment::execute_interpreter(rubinius::State*, rubinius::CallFrame*, rubinius::BlockEnvironment*, rubinius::Arguments&, rubinius::BlockInvocation&) ()\n#16 0x0000000000683f5d in rubinius::BlockEnvironment::invoke(rubinius::State*, rubinius::CallFrame*, rubinius::BlockEnvironment*, rubinius::Arguments&, rubinius::BlockInvocation&) ()\n#17 0x000000000068417d in rubinius::BlockEnvironment::call(rubinius::State*, rubinius::CallFrame*, rubinius::Arguments&, int) ()\n#18 0x00000000006c8e4c in rubinius::Proc::call(rubinius::State*, rubinius::CallFrame*, rubinius::Arguments&) ()\n#19 0x000000000062022c in rubinius::Primitives::proc_call(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#20 0x000000000076ab30 in rbx_splat_send_private ()\n#21 0x00007fcc98097d0b in ?? ()\n#22 0x0000000000000000 in ?? ()\n\nThread 18 (Thread 0x7fcc6ffff700 (LWP 41689)):\n#0  pthread_cond_timedwait@@GLIBC_2.3.2 () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:215\n#1  0x000000000064d84a in rubinius::Park::park_timed(rubinius::State*, rubinius::CallFrame*, timespec*) ()\n#2  0x00000000006d8c37 in rubinius::System::vm_sleep(rubinius::State*, rubinius::GCTokenImpl&, rubinius::Object*, rubinius::CallFrame*) ()\n#3  0x0000000000611be4 in rubinius::Primitives::vm_sleep(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#4  0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#5  0x0000000000683804 in rubinius::BlockEnvironment::execute_interpreter(rubinius::State*, rubinius::CallFrame*, rubinius::BlockEnvironment*, rubinius::Arguments&, rubinius::BlockInvocation&) ()\n#6  0x0000000000683f5d in rubinius::BlockEnvironment::invoke(rubinius::State*, rubinius::CallFrame*, rubinius::BlockEnvironment*, rubinius::Arguments&, rubinius::BlockInvocation&) ()\n#7  0x000000000068417d in rubinius::BlockEnvironment::call(rubinius::State*, rubinius::CallFrame*, rubinius::Arguments&, int) ()\n#8  0x00000000006c8e4c in rubinius::Proc::call(rubinius::State*, rubinius::CallFrame*, rubinius::Arguments&) ()\n#9  0x000000000062022c in rubinius::Primitives::proc_call(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#10 0x000000000076ab30 in rbx_splat_send_private ()\n#11 0x00007fcc98097d0b in ?? ()\n#12 0x0000000000000000 in ?? ()\n\nThread 17 (Thread 0x7fcc74480700 (LWP 41690)):\n#0  0x00000000006ddb31 in rubinius::ThreadState::create(rubinius::State*) ()\n#1  0x000000000067dd2d in rubinius::VMThreadState::state_as_object(rubinius::State*) ()\n#2  0x00007fcc76b5ce5f in ?? ()\n#3  0x0000000000000000 in ?? ()\n\nThread 16 (Thread 0x7fcc6f5f0700 (LWP 42005)):\n#0  0x00007fcc9804a119 in ?? ()\n#1  0x00007fcc6f5e7ff0 in ?? ()\n#2  0x00007fcc9804ac6e in ?? ()\n#3  0x00007fcc6008e930 in ?? ()\n#4  0x000000000000001a in ?? ()\n#5  0x000000000295c890 in ?? ()\n#6  0x00007fcc6f5e7a97 in ?? ()\n#7  0x0000000000000000 in ?? ()\n\nThread 15 (Thread 0x7fcc76962700 (LWP 47788)):\n#0  0x00007fcc76d95e67 in ?? ()\n#1  0x00007fcc7695af20 in ?? ()\n#2  0x00007fcc76d95096 in ?? ()\n#3  0x00007fcc76961dd0 in ?? ()\n#4  0x00007fcc7695b090 in ?? ()\n#5  0x00007fcc7695aee0 in ?? ()\n#6  0x00007fcc76d78d32 in ?? ()\n#7  0x000000000000001a in ?? ()\n#8  0x00007fcc95c9b6b8 in ?? ()\n#9  0x00007fcc7695aa80 in ?? ()\n#10 0x000000000067e4c4 in rubinius::AccessVariable::access_execute(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#11 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#12 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#13 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#14 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#15 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#16 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#17 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#18 0x00000000005fb07c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::GenericArguments>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#19 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#20 0x0000000000683804 in rubinius::BlockEnvironment::execute_interpreter(rubinius::State*, rubinius::CallFrame*, rubinius::BlockEnvironment*, rubinius::Arguments&, rubinius::BlockInvocation&) ()\n#21 0x0000000000683f5d in rubinius::BlockEnvironment::invoke(rubinius::State*, rubinius::CallFrame*, rubinius::BlockEnvironment*, rubinius::Arguments&, rubinius::BlockInvocation&) ()\n#22 0x000000000068417d in rubinius::BlockEnvironment::call(rubinius::State*, rubinius::CallFrame*, rubinius::Arguments&, int) ()\n#23 0x000000000076c472 in rbx_yield_stack ()\n#24 0x00007fcc76d730f4 in ?? ()\n#25 0x0000000002058380 in ?? ()\n#26 0x00007fcc76961dd0 in ?? ()\n#27 0x0000000000000000 in ?? ()\n\nThread 14 (Thread 0x7fcc491fb700 (LWP 25410)):\n#0  0x00007fcc76d95e67 in ?? ()\n#1  0x00007fcc491f32e0 in ?? ()\n#2  0x00007fcc76d95096 in ?? ()\n#3  0x00007fcc491fadd0 in ?? ()\n#4  0x00007fcc491f3450 in ?? ()\n#5  0x00007fcc491f32a0 in ?? ()\n#6  0x00007fcc76d78d32 in ?? ()\n#7  0x00007fcc1ead2490 in ?? ()\n#8  0x00007fcc6e657d70 in ?? ()\n#9  0x00007fcc491f2e10 in ?? ()\n#10 0x00000000006bcfc1 in rubinius::Object::hash_prim(rubinius::State*) ()\n#11 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#12 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#13 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#14 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#15 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#16 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#17 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#18 0x00000000005fb07c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::GenericArguments>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#19 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#20 0x0000000000683804 in rubinius::BlockEnvironment::execute_interpreter(rubinius::State*, rubinius::CallFrame*, rubinius::BlockEnvironment*, rubinius::Arguments&, rubinius::BlockInvocation&) ()\n#21 0x0000000000683f5d in rubinius::BlockEnvironment::invoke(rubinius::State*, rubinius::CallFrame*, rubinius::BlockEnvironment*, rubinius::Arguments&, rubinius::BlockInvocation&) ()\n#22 0x000000000068417d in rubinius::BlockEnvironment::call(rubinius::State*, rubinius::CallFrame*, rubinius::Arguments&, int) ()\n#23 0x000000000076c472 in rbx_yield_stack ()\n#24 0x00007fcc76d730f4 in ?? ()\n#25 0x0000000002058380 in ?? ()\n#26 0x00007fcc1ead25b0 in ?? ()\n#27 0x0000000000000000 in ?? ()\n\nThread 13 (Thread 0x7fcc6fbfe700 (LWP 76788)):\n#0  0x00007fcc76d955d3 in ?? ()\n#1  0x00007fcc6fbf5ea0 in ?? ()\n#2  0x00007fcc76d95096 in ?? ()\n#3  0x00007fcc6fbfddd0 in ?? ()\n#4  0x00007fcc6fbf6010 in ?? ()\n#5  0x00007fcc6fbf5e60 in ?? ()\n#6  0x00007fcc76d78d32 in ?? ()\n#7  0x00007fcc1ea81478 in ?? ()\n#8  0x00007fcc4b2a8848 in ?? ()\n#9  0x00007fcc6fbf59d0 in ?? ()\n#10 0x00000000006bcfc1 in rubinius::Object::hash_prim(rubinius::State*) ()\n#11 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#12 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#13 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#14 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#15 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#16 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#17 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#18 0x00000000005fb07c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::GenericArguments>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#19 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#20 0x0000000000683804 in rubinius::BlockEnvironment::execute_interpreter(rubinius::State*, rubinius::CallFrame*, rubinius::BlockEnvironment*, rubinius::Arguments&, rubinius::BlockInvocation&) ()\n#21 0x0000000000683f5d in rubinius::BlockEnvironment::invoke(rubinius::State*, rubinius::CallFrame*, rubinius::BlockEnvironment*, rubinius::Arguments&, rubinius::BlockInvocation&) ()\n#22 0x000000000068417d in rubinius::BlockEnvironment::call(rubinius::State*, rubinius::CallFrame*, rubinius::Arguments&, int) ()\n#23 0x000000000076c472 in rbx_yield_stack ()\n#24 0x00007fcc76d730f4 in ?? ()\n#25 0x0000000002058380 in ?? ()\n#26 0x00007fcc1ea81578 in ?? ()\n#27 0x0000000000000000 in ?? ()\n\nThread 12 (Thread 0x7fcc489f9700 (LWP 4886)):\n#0  0x00007fcc76d95583 in ?? ()\n#1  0x00007fcc489f0e00 in ?? ()\n#2  0x00007fcc76d95096 in ?? ()\n#3  0x00007fcc1eeccb68 in ?? ()\n#4  0x00007fcc489f0f70 in ?? ()\n#5  0x00007fcc489f0dc0 in ?? ()\n#6  0x00007fcc76d78d32 in ?? ()\n#7  0x00007fcc1eeccbc0 in ?? ()\n#8  0x00007fcc4b2a8848 in ?? ()\n#9  0x00007fcc489f0930 in ?? ()\n#10 0x00000000006bcfc1 in rubinius::Object::hash_prim(rubinius::State*) ()\n#11 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#12 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#13 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#14 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#15 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#16 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#17 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#18 0x00000000005fb07c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::GenericArguments>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#19 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#20 0x0000000000683804 in rubinius::BlockEnvironment::execute_interpreter(rubinius::State*, rubinius::CallFrame*, rubinius::BlockEnvironment*, rubinius::Arguments&, rubinius::BlockInvocation&) ()\n#21 0x0000000000683f5d in rubinius::BlockEnvironment::invoke(rubinius::State*, rubinius::CallFrame*, rubinius::BlockEnvironment*, rubinius::Arguments&, rubinius::BlockInvocation&) ()\n#22 0x000000000068417d in rubinius::BlockEnvironment::call(rubinius::State*, rubinius::CallFrame*, rubinius::Arguments&, int) ()\n#23 0x000000000076c472 in rbx_yield_stack ()\n#24 0x00007fcc76d730f4 in ?? ()\n#25 0x0000000002058380 in ?? ()\n#26 0x00007fcc1eecccc0 in ?? ()\n#27 0x0000000000000000 in ?? ()\n\nThread 11 (Thread 0x7fcc6c5c0700 (LWP 23162)):\n#0  0x00007fcc76d95731 in ?? ()\n#1  0x00007fcc6c5b7e00 in ?? ()\n#2  0x00007fcc76d95096 in ?? ()\n#3  0x00007fcc1eb19330 in ?? ()\n#4  0x00007fcc6c5b7f70 in ?? ()\n#5  0x00007fcc6c5b7dc0 in ?? ()\n#6  0x00007fcc76d78d32 in ?? ()\n#7  0x00007fcc1eb19388 in ?? ()\n#8  0x00007fcc4b2a8848 in ?? ()\n#9  0x00007fcc6c5b7930 in ?? ()\n#10 0x00000000006bcfc1 in rubinius::Object::hash_prim(rubinius::State*) ()\n#11 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#12 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#13 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#14 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#15 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#16 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#17 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#18 0x00000000005fb07c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::GenericArguments>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#19 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#20 0x0000000000683804 in rubinius::BlockEnvironment::execute_interpreter(rubinius::State*, rubinius::CallFrame*, rubinius::BlockEnvironment*, rubinius::Arguments&, rubinius::BlockInvocation&) ()\n#21 0x0000000000683f5d in rubinius::BlockEnvironment::invoke(rubinius::State*, rubinius::CallFrame*, rubinius::BlockEnvironment*, rubinius::Arguments&, rubinius::BlockInvocation&) ()\n#22 0x000000000068417d in rubinius::BlockEnvironment::call(rubinius::State*, rubinius::CallFrame*, rubinius::Arguments&, int) ()\n#23 0x000000000076c472 in rbx_yield_stack ()\n#24 0x00007fcc76d730f4 in ?? ()\n#25 0x0000000002058380 in ?? ()\n#26 0x00007fcc1eb19488 in ?? ()\n#27 0x0000000000000000 in ?? ()\n\nThread 10 (Thread 0x7fcc4a1ff700 (LWP 25456)):\n#0  0x00007fcc76d95618 in ?? ()\n#1  0x00007fcc4a1f6e00 in ?? ()\n#2  0x00007fcc76d95096 in ?? ()\n#3  0x00007fcc1efa7420 in ?? ()\n#4  0x00007fcc4a1f6f70 in ?? ()\n#5  0x00007fcc4a1f6dc0 in ?? ()\n#6  0x00007fcc76d78d32 in ?? ()\n#7  0x00007fcc1efa7478 in ?? ()\n#8  0x00007fcc4b2a8848 in ?? ()\n#9  0x00007fcc4a1f6930 in ?? ()\n#10 0x00000000006bcfc1 in rubinius::Object::hash_prim(rubinius::State*) ()\n#11 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#12 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#13 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#14 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#15 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#16 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#17 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#18 0x00000000005fb07c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::GenericArguments>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#19 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#20 0x0000000000683804 in rubinius::BlockEnvironment::execute_interpreter(rubinius::State*, rubinius::CallFrame*, rubinius::BlockEnvironment*, rubinius::Arguments&, rubinius::BlockInvocation&) ()\n#21 0x0000000000683f5d in rubinius::BlockEnvironment::invoke(rubinius::State*, rubinius::CallFrame*, rubinius::BlockEnvironment*, rubinius::Arguments&, rubinius::BlockInvocation&) ()\n#22 0x000000000068417d in rubinius::BlockEnvironment::call(rubinius::State*, rubinius::CallFrame*, rubinius::Arguments&, int) ()\n#23 0x000000000076c472 in rbx_yield_stack ()\n#24 0x00007fcc76d730f4 in ?? ()\n#25 0x0000000002058380 in ?? ()\n#26 0x00007fcc1efa7578 in ?? ()\n#27 0x0000000000000000 in ?? ()\n\nThread 9 (Thread 0x7fcc495fc700 (LWP 54108)):\n#0  0x00007fcc76d95524 in ?? ()\n#1  0x00007fcc495f53f0 in ?? ()\n#2  0x00007fcc76d95096 in ?? ()\n#3  0x00007fcc84a94aa8 in ?? ()\n#4  0x00007fcc495f5560 in ?? ()\n#5  0x00007fcc495f53b0 in ?? ()\n#6  0x00007fcc76d78d32 in ?? ()\n#7  0x0000000000000002 in ?? ()\n#8  0x00007fcc4b2a8848 in ?? ()\n#9  0x00007fcc495f4f20 in ?? ()\n#10 0x00000000006bcfc1 in rubinius::Object::hash_prim(rubinius::State*) ()\n#11 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#12 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#13 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#14 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#15 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#16 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#17 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#18 0x00000000005fb07c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::GenericArguments>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#19 0x00007fcc76aca546 in ?? ()\n#20 0x00007fcc495f6840 in ?? ()\n#21 0x00007fcc86f94500 in ?? ()\n#22 0x00007fcc7810f7f0 in ?? ()\n#23 0x0000000000000000 in ?? ()\n\nThread 8 (Thread 0x7fcc1d5f7700 (LWP 19104)):\n#0  0x00007fcc76d95548 in ?? ()\n#1  0x00007fcc1d5f03f0 in ?? ()\n#2  0x00007fcc76d95096 in ?? ()\n#3  0x00007fcc84a94aa8 in ?? ()\n#4  0x00007fcc1d5f0560 in ?? ()\n#5  0x00007fcc1d5f03b0 in ?? ()\n#6  0x00007fcc76d78d32 in ?? ()\n#7  0x0000000000000002 in ?? ()\n#8  0x00007fcc4b2a8848 in ?? ()\n#9  0x00007fcc1d5eff20 in ?? ()\n#10 0x00000000006bcfc1 in rubinius::Object::hash_prim(rubinius::State*) ()\n#11 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#12 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#13 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#14 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#15 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#16 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#17 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#18 0x00000000005fb07c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::GenericArguments>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#19 0x00007fcc76aca546 in ?? ()\n#20 0x00007fcc1d5f17d0 in ?? ()\n#21 0x000000000076eb09 in rbx_create_block ()\n#22 0x00007fcc76c6d322 in ?? ()\n#23 0x000000000000001a in ?? ()\n#24 0x000000000000001a in ?? ()\n#25 0x0000000000000000 in ?? ()\n\nThread 7 (Thread 0x7fcc49dfe700 (LWP 47055)):\n#0  0x00007fcc76d95e53 in ?? ()\n#1  0x00007fcc49df73f0 in ?? ()\n#2  0x00007fcc76d95096 in ?? ()\n#3  0x00007fcc84a94aa8 in ?? ()\n#4  0x00007fcc49df7560 in ?? ()\n#5  0x00007fcc49df73b0 in ?? ()\n#6  0x00007fcc76d78d32 in ?? ()\n#7  0x0000000000000002 in ?? ()\n#8  0x00007fcc4b2a8848 in ?? ()\n#9  0x00007fcc49df6f20 in ?? ()\n#10 0x00000000006bcfc1 in rubinius::Object::hash_prim(rubinius::State*) ()\n#11 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#12 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#13 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#14 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#15 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#16 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#17 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#18 0x00000000005fb07c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::GenericArguments>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#19 0x00007fcc76aca546 in ?? ()\n#20 0x00007fcc49df87d0 in ?? ()\n#21 0x000000000076eb09 in rbx_create_block ()\n#22 0x00007fcc76c6d322 in ?? ()\n#23 0x000000000000001a in ?? ()\n#24 0x000000000000001a in ?? ()\n#25 0x0000000000000000 in ?? ()\n\nThread 6 (Thread 0x7fcc499fd700 (LWP 3017)):\n#0  0x00007fcc76d954e1 in ?? ()\n#1  0x00007fcc499f63f0 in ?? ()\n#2  0x00007fcc76d95096 in ?? ()\n#3  0x00007fcc84a94aa8 in ?? ()\n#4  0x00007fcc499f6560 in ?? ()\n#5  0x00007fcc499f63b0 in ?? ()\n#6  0x00007fcc76d78d32 in ?? ()\n#7  0x0000000000000002 in ?? ()\n#8  0x00007fcc4b2a8848 in ?? ()\n#9  0x00007fcc499f5f20 in ?? ()\n#10 0x00000000006bcfc1 in rubinius::Object::hash_prim(rubinius::State*) ()\n#11 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#12 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#13 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#14 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#15 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#16 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#17 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#18 0x00000000005fb07c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::GenericArguments>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#19 0x00007fcc76aca546 in ?? ()\n#20 0x00007fcc499f77d0 in ?? ()\n#21 0x000000000076eb09 in rbx_create_block ()\n#22 0x00007fcc76c6d322 in ?? ()\n#23 0x000000000000001a in ?? ()\n#24 0x000000000000001a in ?? ()\n#25 0x0000000000000000 in ?? ()\n\nThread 5 (Thread 0x7fcc6d5de700 (LWP 45747)):\n#0  0x00007fcc76d9569c in ?? ()\n#1  0x00007fcc6d5d73f0 in ?? ()\n#2  0x00007fcc76d95096 in ?? ()\n#3  0x00007fcc84a94aa8 in ?? ()\n#4  0x00007fcc6d5d7560 in ?? ()\n#5  0x00007fcc6d5d73b0 in ?? ()\n#6  0x00007fcc76d78d32 in ?? ()\n#7  0x0000000000000002 in ?? ()\n#8  0x00007fcc4b2a8848 in ?? ()\n#9  0x00007fcc6d5d6f20 in ?? ()\n#10 0x00000000006bcfc1 in rubinius::Object::hash_prim(rubinius::State*) ()\n#11 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#12 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#13 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#14 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#15 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#16 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#17 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#18 0x00000000005fb07c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::GenericArguments>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#19 0x00007fcc76aca546 in ?? ()\n#20 0x00007fcc6d5d87d0 in ?? ()\n#21 0x000000000076eb09 in rbx_create_block ()\n#22 0x00007fcc76c6d322 in ?? ()\n#23 0x000000000000001a in ?? ()\n#24 0x000000000000001a in ?? ()\n#25 0x0000000000000000 in ?? ()\n\nThread 4 (Thread 0x7fcc6d1dd700 (LWP 45766)):\n#0  0x00007fcc76d95605 in ?? ()\n#1  0x00007fcc6d1d63f0 in ?? ()\n#2  0x00007fcc76d95096 in ?? ()\n#3  0x00007fcc84a94aa8 in ?? ()\n#4  0x00007fcc6d1d6560 in ?? ()\n#5  0x00007fcc6d1d63b0 in ?? ()\n#6  0x00007fcc76d78d32 in ?? ()\n#7  0x0000000000000002 in ?? ()\n#8  0x00007fcc4b2a8848 in ?? ()\n#9  0x00007fcc6d1d5f20 in ?? ()\n#10 0x00000000006bcfc1 in rubinius::Object::hash_prim(rubinius::State*) ()\n#11 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#12 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#13 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#14 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#15 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#16 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#17 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#18 0x00000000005fb07c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::GenericArguments>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#19 0x00007fcc76aca546 in ?? ()\n#20 0x00007fcc6d1d77d0 in ?? ()\n#21 0x000000000076eb09 in rbx_create_block ()\n#22 0x00007fcc76c6d322 in ?? ()\n#23 0x000000000000001a in ?? ()\n#24 0x000000000000001a in ?? ()\n#25 0x0000000000000000 in ?? ()\n\nThread 3 (Thread 0x7fcc6c9c1700 (LWP 45770)):\n#0  0x00007fcc76d954e1 in ?? ()\n#1  0x00007fcc6c9ba3f0 in ?? ()\n#2  0x00007fcc76d95096 in ?? ()\n#3  0x00007fcc84a94aa8 in ?? ()\n#4  0x00007fcc6c9ba560 in ?? ()\n#5  0x00007fcc6c9ba3b0 in ?? ()\n#6  0x00007fcc76d78d32 in ?? ()\n#7  0x0000000000000002 in ?? ()\n#8  0x00007fcc4b2a8848 in ?? ()\n#9  0x00007fcc6c9b9f20 in ?? ()\n#10 0x00000000006bcfc1 in rubinius::Object::hash_prim(rubinius::State*) ()\n#11 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#12 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#13 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#14 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#15 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#16 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#17 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#18 0x00000000005fb07c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::GenericArguments>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#19 0x00007fcc76aca546 in ?? ()\n#20 0x00007fcc6c9bb7d0 in ?? ()\n#21 0x000000000076eb09 in rbx_create_block ()\n#22 0x00007fcc76c6d322 in ?? ()\n#23 0x000000000000001a in ?? ()\n#24 0x000000000000001a in ?? ()\n#25 0x0000000000000000 in ?? ()\n\nThread 2 (Thread 0x7fcc6f1ef700 (LWP 45834)):\n#0  0x00007fcc76d95560 in ?? ()\n#1  0x00007fcc6f1e83f0 in ?? ()\n#2  0x00007fcc76d95096 in ?? ()\n#3  0x00007fcc84a94aa8 in ?? ()\n#4  0x00007fcc6f1e8560 in ?? ()\n#5  0x00007fcc6f1e83b0 in ?? ()\n#6  0x00007fcc76d78d32 in ?? ()\n#7  0x0000000000000002 in ?? ()\n#8  0x00007fcc4b2a8848 in ?? ()\n#9  0x00007fcc6f1e7f20 in ?? ()\n#10 0x00000000006bcfc1 in rubinius::Object::hash_prim(rubinius::State*) ()\n#11 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#12 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#13 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#14 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#15 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#16 0x00000000005fc75c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#17 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#18 0x00000000005fb07c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::GenericArguments>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#19 0x00007fcc76aca546 in ?? ()\n#20 0x00007fcc6f1e97d0 in ?? ()\n#21 0x000000000076eb09 in rbx_create_block ()\n#22 0x00007fcc76c6d322 in ?? ()\n#23 0x000000000000001a in ?? ()\n#24 0x000000000000001a in ?? ()\n#25 0x0000000000000000 in ?? ()\n\nThread 1 (Thread 0x7fcc98159740 (LWP 41544)):\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:162\n#1  0x0000000000688345 in rubinius::Channel::receive_timeout(rubinius::State*, rubinius::GCTokenImpl&, rubinius::Object*, rubinius::CallFrame*) ()\n#2  0x000000000063977f in rubinius::Primitives::channel_receive(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#3  0x00000000006872d4 in rubinius::CallSite::empty_cache(rubinius::State*, rubinius::CallSite*, rubinius::CallFrame*, rubinius::Arguments&) ()\n#4  0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#5  0x00000000005fb07c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::GenericArguments>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#6  0x00000000006870d4 in rubinius::CallSite::empty_cache_private(rubinius::State*, rubinius::CallSite*, rubinius::CallFrame*, rubinius::Arguments&) ()\n#7  0x00000000005bdc37 in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#8  0x00000000005fb07c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::GenericArguments>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#9  0x00000000006872d4 in rubinius::CallSite::empty_cache(rubinius::State*, rubinius::CallSite*, rubinius::CallFrame*, rubinius::Arguments&) ()\n#10 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#11 0x00000000005fb07c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::GenericArguments>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#12 0x000000000068bcb7 in rubinius::CompiledCode::default_executor(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#13 0x00000000006872d4 in rubinius::CallSite::empty_cache(rubinius::State*, rubinius::CallSite*, rubinius::CallFrame*, rubinius::Arguments&) ()\n#14 0x00000000005bdc37 in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#15 0x00000000005fbd7c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::ThreeArguments>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#16 0x000000000068bcb7 in rubinius::CompiledCode::default_executor(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#17 0x00000000006870d4 in rubinius::CallSite::empty_cache_private(rubinius::State*, rubinius::CallSite*, rubinius::CallFrame*, rubinius::Arguments&) ()\n#18 0x00000000005bdc37 in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#19 0x00000000005fb07c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::GenericArguments>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#20 0x000000000068bcb7 in rubinius::CompiledCode::default_executor(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#21 0x00000000006872d4 in rubinius::CallSite::empty_cache(rubinius::State*, rubinius::CallSite*, rubinius::CallFrame*, rubinius::Arguments&) ()\n#22 0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#23 0x0000000000683804 in rubinius::BlockEnvironment::execute_interpreter(rubinius::State*, rubinius::CallFrame*, rubinius::BlockEnvironment*, rubinius::Arguments&, rubinius::BlockInvocation&) ()\n#24 0x0000000000683f5d in rubinius::BlockEnvironment::invoke(rubinius::State*, rubinius::CallFrame*, rubinius::BlockEnvironment*, rubinius::Arguments&, rubinius::BlockInvocation&) ()\n#25 0x000000000068417d in rubinius::BlockEnvironment::call(rubinius::State*, rubinius::CallFrame*, rubinius::Arguments&, int) ()\n#26 0x00000000006c8e4c in rubinius::Proc::call(rubinius::State*, rubinius::CallFrame*, rubinius::Arguments&) ()\n#27 0x000000000062022c in rubinius::Primitives::proc_call(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#28 0x000000000076ab30 in rbx_splat_send_private ()\n#29 0x00007fcc98097d0b in ?? ()\n#30 0x0000000000000000 in ?? ()\nA debugging session is active.\n\n    Inferior 1 [process 41544] will be detached.\n\nQuit anyway? (y or n) Detaching from program: /home/ghazel/.rvm/rubies/rbx-2.2.10/bin/rbx, process\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Dont make Errno::EPERM a hardfail in the Process.setrlimit test",
                "body": "This can happen when you build as non root.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "libffi build error : invalid instruction 'stmeqia'",
                "body": "I am trying to build latest Rubinius from repository on my ArchLinuxARM box with default LLVM (3.5). Got the following build error:\n\nmv -f $depbase.Tpo $depbase.Plo\nlibtool: compile:  clang -DHAVE_CONFIG_H -I. -I. -I./include -Iinclude -I./src -I. -I./include -Iinclude -I./src -MT src/arm/sysv.lo -MD -MP -MF src/arm/.deps/sysv.Tpo -c src/arm/sysv.S  -fPIC -DPIC -o src/arm/.libs/sysv.o\nsrc/arm/sysv.S:224:2: error: invalid instruction\n stmeqia r2, {r0, r1}\n ^\nsrc/arm/sysv.S:413:2: error: invalid instruction\n stmeqia r2, {r0, r1}\n ^\nMakefile:1108: recipe for target 'src/arm/sysv.lo' failed\nmake[2]: **\\* [src/arm/sysv.lo] Error 1\nmake[2]: Leaving directory '/home/rbx/github/rubinius/vendor/libffi'\nMakefile:1363: recipe for target 'all-recursive' failed\nmake[1]: **\\* [all-recursive] Error 1\nmake[1]: Leaving directory '/home/rbx/github/rubinius/vendor/libffi'\nMakefile:582: recipe for target 'all' failed\nmake: **\\* [all] Error 2\nError: make\nrake aborted!\nError compiling\n/home/rbx/.gem/ruby/2.1.0/gems/daedalus-core-0.1.0/lib/daedalus.rb:68:in `command'\n(eval):146:in`block (3 levels) in load'\n/home/rbx/.gem/ruby/2.1.0/gems/daedalus-core-0.1.0/lib/daedalus.rb:557:in `call'\n/home/rbx/.gem/ruby/2.1.0/gems/daedalus-core-0.1.0/lib/daedalus.rb:557:in`block in build'\n/home/rbx/.gem/ruby/2.1.0/gems/daedalus-core-0.1.0/lib/daedalus.rb:556:in `chdir'\n/home/rbx/.gem/ruby/2.1.0/gems/daedalus-core-0.1.0/lib/daedalus.rb:556:in`build'\n/home/rbx/.gem/ruby/2.1.0/gems/daedalus-core-0.1.0/lib/daedalus.rb:877:in `block in linear_tasks'\n/home/rbx/.gem/ruby/2.1.0/gems/daedalus-core-0.1.0/lib/daedalus.rb:876:in`each'\n/home/rbx/.gem/ruby/2.1.0/gems/daedalus-core-0.1.0/lib/daedalus.rb:876:in `linear_tasks'\n/home/rbx/.gem/ruby/2.1.0/gems/daedalus-core-0.1.0/lib/daedalus.rb:870:in`start'\n/home/rbx/.gem/ruby/2.1.0/gems/daedalus-core-0.1.0/lib/daedalus.rb:989:in `block in build'\n/home/rbx/.gem/ruby/2.1.0/gems/daedalus-core-0.1.0/lib/daedalus.rb:980:in`each'\n/home/rbx/.gem/ruby/2.1.0/gems/daedalus-core-0.1.0/lib/daedalus.rb:980:in `build'\n/home/rbx/github/rubinius/rakelib/vm.rake:256:in`block in <top (required)>'\nTasks: TOP => default => spec => build => build:build => vm/vm\n(See full trace by running task with --trace)\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Crash Report with Unicorn",
                "body": "report with `rbx report`:\nhttps://gist.github.com/anonymous/5ba7b75325559e202c6d\nI know its a gem, but from what i see it only happens with rbx\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Crash when using FFI and unjoined threads",
                "body": "Hey guys,\n\nReport: https://gist.github.com/anonymous/f039941ff2dcb3e5a8fe\nReproduce with:\n\n```\nrequire 'typhoeus'\n\nt = []\n\n20.times do |i|\n    t << Thread.new do\n        h = Typhoeus::Hydra.hydra\n        r = Typhoeus::Request.new( 'http://google.com' )\n        h.queue r\n        h.run\n    end\nend\n\n#t.each(&:join)\n```\n\nIf you uncomment the last line the crash is avoided.\n\nCheers\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Rubinius fails executation suddenly after some iteration of loop",
                "body": "As the titles says, Rubinius throws following error:\n\n```\nbash-3.2$ rails runner 'class A < ActiveRecord::Base;end; loop { A.where(:aa => :bb) }'\nAn exception occurred in a forked block\n\n    undefined method `bind_values' on bb:Symbol. (NoMethodError)\n\nBacktrace:\n\n                                           Kernel(Symbol)#bind_values (method_missing) at kernel/delta/kernel.rb:78\n               { } in ActiveRecord::QueryMethods(A::ActiveRecord_Relation)#build_where at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/activerecord-4.1.5/lib/active_record/relation/query_methods.rb:947\n                                                         { } in Enumerable(Array)#grep at kernel/common/enumerable.rb:217\n                                                                            Array#each at kernel/bootstrap/array.rb:76\n                                                                Enumerable(Array)#grep at kernel/common/enumerable.rb:213\n                      ActiveRecord::QueryMethods(A::ActiveRecord_Relation)#build_where at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/activerecord-4.1.5/lib/active_record/relation/query_methods.rb:946\n                           ActiveRecord::QueryMethods(A::ActiveRecord_Relation)#where! at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/activerecord-4.1.5/lib/active_record/relation/query_methods.rb:572\n                            ActiveRecord::QueryMethods(A::ActiveRecord_Relation)#where at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/activerecord-4.1.5/lib/active_record/relation/query_methods.rb:559\n                                                   ActiveRecord::Querying(Class)#where at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/activerecord-4.1.5/lib/active_record/querying.rb:10\n                                                              { } in Object#__script__ at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/railties-4.1.5/lib/rails/commands/runner.rb:62\n                                                                   Kernel(Object)#loop at kernel/common/kernel.rb:460\n                                                              { } in Object#__script__ at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/railties-4.1.5/lib/rails/commands/runner.rb:62\n                                           Rubinius::BlockEnvironment#call_on_instance at kernel/common/block_environment.rb:53\n                                                                   Kernel(Object)#eval at kernel/common/eval.rb:176\n                                                                     Object#__script__ at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/railties-4.1.5/lib/rails/commands/runner.rb:62\n                                                          Rubinius::CodeLoader.require at kernel/common/code_loader.rb:243\n                                                  Kernel(Rails::CommandsTasks)#require at kernel/common/kernel.rb:705\n            { } in ActiveSupport::Dependencies::Loadable(Rails::CommandsTasks)#require at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/activesupport-4.1.5/lib/active_support/dependencies.rb:247\n           ActiveSupport::Dependencies::Loadable(Rails::CommandsTasks)#load_dependency at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/activesupport-4.1.5/lib/active_support/dependencies.rb:232\n                   ActiveSupport::Dependencies::Loadable(Rails::CommandsTasks)#require at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/activesupport-4.1.5/lib/active_support/dependencies.rb:247\n                                                 Rails::CommandsTasks#require_command! at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/railties-4.1.5/lib/rails/commands/commands_tasks.rb:128\n                                                           Rails::CommandsTasks#runner at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/railties-4.1.5/lib/rails/commands/commands_tasks.rb:95\n                                                     Rails::CommandsTasks#run_command! at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/railties-4.1.5/lib/rails/commands/commands_tasks.rb:40\n                                                                     Object#__script__ at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/railties-4.1.5/lib/rails/commands.rb:17\n                                                          Rubinius::CodeLoader.require at kernel/common/code_loader.rb:243\n                                                                Kernel(Object)#require at kernel/common/kernel.rb:705\n                          { } in ActiveSupport::Dependencies::Loadable(Object)#require at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/activesupport-4.1.5/lib/active_support/dependencies.rb:247\n                         ActiveSupport::Dependencies::Loadable(Object)#load_dependency at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/activesupport-4.1.5/lib/active_support/dependencies.rb:232\n                                 ActiveSupport::Dependencies::Loadable(Object)#require at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/activesupport-4.1.5/lib/active_support/dependencies.rb:247\n                                                                     Object#__script__ at bin/rails:8\n                                            Kernel(Spring::Commands::RailsRunner)#load at kernel/common/kernel.rb:447\n      { } in ActiveSupport::Dependencies::Loadable(Spring::Commands::RailsRunner)#load at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/activesupport-4.1.5/lib/active_support/dependencies.rb:241\n  ActiveSupport::Dependencies::Loadable(Spring::Commands::RailsRunner)#load_dependency at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/activesupport-4.1.5/lib/active_support/dependencies.rb:232\n             ActiveSupport::Dependencies::Loadable(Spring::Commands::RailsRunner)#load at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/activesupport-4.1.5/lib/active_support/dependencies.rb:241\n                           Spring::Commands::Rails(Spring::Commands::RailsRunner)#call at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/spring-1.1.3/lib/spring/commands/rails.rb:6\n                                                    Spring::Commands::RailsRunner#call at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/spring-1.1.3/lib/spring/commands/rails.rb:39\n                                                           Spring::CommandWrapper#call at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/spring-1.1.3/lib/spring/command_wrapper.rb:38\n                                                      { } in Spring::Application#serve at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/spring-1.1.3/lib/spring/application.rb:180\n                                                                          Process.fork at kernel/common/process.rb:357\n                                                      Kernel(Spring::Application)#fork at kernel/common/process.rb:1135\n                                                             Spring::Application#serve at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/spring-1.1.3/lib/spring/application.rb:153\n                                                        { } in Spring::Application#run at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/spring-1.1.3/lib/spring/application.rb:128\n                                                      Kernel(Spring::Application)#loop at kernel/common/kernel.rb:460\n                                                               Spring::Application#run at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/spring-1.1.3/lib/spring/application.rb:122\n                                                                     Object#__script__ at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/gems/gems/spring-1.1.3/lib/spring/application/boot.rb:18\n                                                          Rubinius::CodeLoader.require at kernel/common/code_loader.rb:243\n                                         Kernel(Object)#gem_original_require (require) at kernel/common/kernel.rb:705\n                                                                Kernel(Object)#require at /Users/ryo-onodera/.rbenv/versions/rbx-2.2.9/library/rubygems/core_ext/kernel_require.rb:55\n                                                              { } in Object#__script__ at -e:1\n                                           Rubinius::BlockEnvironment#call_on_instance at kernel/common/block_environment.rb:53\n                                                         Kernel(Rubinius::Loader)#eval at kernel/common/eval.rb:176\n                                                                Rubinius::Loader#evals at kernel/loader.rb:616\n                                                                 Rubinius::Loader#main at kernel/loader.rb:824\n```\n\nwhen `:bb` is `\"bb\"` (string), this doesn't happen.\n\nhow to reproduce:\n1. `gem install rails`\n2. `rails new hello`\n3. `cd hello`\n4. `rails runner 'class A < ActiveRecord::Base;end; loop { A.where(:aa => :bb) }'`\n\nheppens on 2.2.9 and HEAD\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "SIGSEGV in rubinius::capi::capi_get_string",
                "body": "Using 2.2.10\n\n``` C\nProgram received signal SIGSEGV, Segmentation fault.\n[Switching to Thread 0x7fffcb3fc700 (LWP 89224)]\n0x00000000006f8987 in rubinius::capi::capi_get_string(rubinius::NativeMethodEnvironment*, long) ()\n(gdb) bt\n#0  0x00000000006f8987 in rubinius::capi::capi_get_string(rubinius::NativeMethodEnvironment*, long) ()\n#1  0x00000000006f9dad in rb_str_set_len ()\n#2  0x00007ffff67a59f8 in decode_uri_changed (i=2, uri=27171856) at decode_www_form_component.c:13\n#3  decode_uri (uri=27171856) at decode_www_form_component.c:48\n#4  rb_decode_www_form_component_internal (mod=<optimized out>, string=<optimized out>) at decode_www_form_component.c:57\n#5  0x00000000006bb9ff in rubinius::Object* rubinius::NativeMethod::executor_implementation<rubinius::OneArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#6  0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#7  0x00000000005fb07c in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::GenericArguments>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#8  0x00000000005bd96f in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#9  0x0000000000683804 in rubinius::BlockEnvironment::execute_interpreter(rubinius::State*, rubinius::CallFrame*, rubinius::BlockEnvironment*, rubinius::Arguments&, rubinius::BlockInvocation&) ()\n#10 0x0000000000683f5d in rubinius::BlockEnvironment::invoke(rubinius::State*, rubinius::CallFrame*, rubinius::BlockEnvironment*, rubinius::Arguments&, rubinius::BlockInvocation&) ()\n#11 0x000000000068417d in rubinius::BlockEnvironment::call(rubinius::State*, rubinius::CallFrame*, rubinius::Arguments&, int) ()\n#12 0x00000000005bf175 in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#13 0x00000000005fcfe4 in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::NoArguments>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#14 0x00000000005bdc37 in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#15 0x0000000000683804 in rubinius::BlockEnvironment::execute_interpreter(rubinius::State*, rubinius::CallFrame*, rubinius::BlockEnvironment*, rubinius::Arguments&, rubinius::BlockInvocation&) ()\n#16 0x0000000000683f5d in rubinius::BlockEnvironment::invoke(rubinius::State*, rubinius::CallFrame*, rubinius::BlockEnvironment*, rubinius::Arguments&, rubinius::BlockInvocation&) ()\n#17 0x000000000068417d in rubinius::BlockEnvironment::call(rubinius::State*, rubinius::CallFrame*, rubinius::Arguments&, int) ()\n#18 0x00000000006c8e4c in rubinius::Proc::call(rubinius::State*, rubinius::CallFrame*, rubinius::Arguments&) ()\n#19 0x000000000062022c in rubinius::Primitives::proc_call(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#20 0x00000000005be5a1 in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#21 0x00000000005fcc10 in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::SplatOnlyArgument>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#22 0x00000000005be5a1 in rubinius::MachineCode::interpreter(rubinius::State*, rubinius::MachineCode*, rubinius::InterpreterCallFrame*) ()\n#23 0x00000000005fcfe4 in rubinius::Object* rubinius::MachineCode::execute_specialized<rubinius::NoArguments>(rubinius::State*, rubinius::CallFrame*, rubinius::Executable*, rubinius::Module*, rubinius::Arguments&) ()\n#24 0x00000000005979ac in rubinius::Dispatch::send(rubinius::State*, rubinius::CallFrame*, rubinius::LookupData&, rubinius::Arguments&, rubinius::MethodMissingReason) ()\n#25 0x00000000006bd35b in rubinius::Object::send(rubinius::State*, rubinius::CallFrame*, rubinius::Symbol*, bool) ()\n#26 0x00000000006dd4f6 in rubinius::Thread::in_new_thread(void*) ()\n#27 0x00007ffff757fe9a in start_thread (arg=0x7fffcb3fc700) at pthread_create.c:308\n#28 0x00007ffff6a9b31d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:112\n#29 0x0000000000000000 in ?? ()\n```\n\nHere's a simpl(ish) repro: (I wrote decode_www_form_component, which you can gem install, but it doesn't ever crash with ruby-1.9.3-p286)\n\n``` ruby\nrequire 'uri'\nrequire 'decode_www_form_component'\n\nlines = (((\"FF%3A52FF%3AFF%3AFF%3AFF%3AFF\" * 100) + \"\\nfoo\\n\") * 5000).lines\n\nts = []\n16.times do\n    ts << Thread.new do\n        lines.each do |l|\n            URI::decode_www_form_component(l)\n        end\n    end\nend\n\nts.each do |t|\n    t.join\nend\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "compile problem with 2.2.10 and -fno-rtti",
                "body": "OS: CentOS 5.10\nRuby: 2.1.2\nRubinus: 2.2.10\n\nSince rubinus is no longer supposed to require RTTI, I don't understand this error. Is this related to the older gcc/g++ on CentOS 5?\n\nBrian\n\n---\n\n$ rake \n.\n.\n.\nRunning 193 tasks using 4 parallel threads\n1: CXX vm/arguments.cpp\n2: CXX vm/agent_components.cpp\n3: CXX vm/agent.cpp\n4: CXX vm/accessor_primitives.cpp\n/usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/tr1/functional: In static member function ‘static bool std::tr1::_Function_base::_Base_manager<_Functor>::_M_manager(std::tr1::_Any_data&, const std::tr1::_Any_data&, std::tr1::_Manager_operation)’:\n/usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/tr1/functional:904: error: cannot use typeid with -fno-rtti\n/usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/tr1/functional: In static member function ‘static bool std::tr1::_Function_base::_Ref_manager<_Functor>::_M_manager(std::tr1::_Any_data&, const std::tr1::_Any_data&, std::tr1::_Manager_operation)’:\n/usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/tr1/functional:982: error: cannot use typeid with -fno-rtti\n/usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/tr1/functional_iterate.h: In static member function ‘static bool std::tr1::_Function_handler<void ()(), _Member _Class::*>::_M_manager(std::tr1::_Any_data&, const std::tr1::_Any_data&, std::tr1::_Manager_operation)’:\n/usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/tr1/functional_iterate.h:572: error: cannot use typeid with -fno-rtti\n/usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/tr1/functional_iterate.h: In member function ‘const std::type_info& std::tr1::function<_Res ()()>::target_type() const’:\n/usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/tr1/functional_iterate.h:883: error: cannot use typeid with -fno-rtti\n/usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/tr1/functional_iterate.h: In member function ‘_Functor\\* std::tr1::function<_Res ()()>::target()’:\n/usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/tr1/functional_iterate.h:892: error: cannot use typeid with -fno-rtti\n/usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/tr1/functional_iterate.h: In member function ‘const _Functor\\* std::tr1::function<_Res ()()>::targe\n.\n.\n.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Handle different library names for linking llvm shared between autotools build and cmake build",
                "body": "a3d10bf7 introduced\n\n```\n[\"-lLLVM-#{Rubinius::BUILD_CONFIG[:llvm_version]}\"]\n```\n\nfor linking the shared library version of llvm. This seems only to be the valid library name with the autotools based build of llvm. When using the cmake based build you get the same filenames as with the static build just with .so instead of .a.\n\ncurrently I use the following patch:\n\n```\nIndex: rakelib/blueprint.rb\n===================================================================\n--- rakelib/blueprint.rb.orig   2014-04-24 16:32:55.000000000 +0200\n+++ rakelib/blueprint.rb        2014-07-30 15:12:38.676286173 +0200\n@@ -223,7 +223,8 @@ Daedalus.blueprint do |i|\n     ldflags = `#{conf} --ldflags`.strip.split(/\\s+/)\n\n     if Rubinius::BUILD_CONFIG[:llvm_shared]\n-      objects = [\"-lLLVM-#{Rubinius::BUILD_CONFIG[:llvm_version]}\"]\n+      # objects = [\"-lLLVM-#{Rubinius::BUILD_CONFIG[:llvm_version]}\"]\n+      objects = `#{conf} --libs`.strip.split(/\\s+/)\n     else\n       objects = `#{conf} --libfiles`.strip.split(/\\s+/)\n     end\n```\n\nIn the discussion we came to the conclusions:\n1. open bug against llvm-config to set proper value for llvm-config --libs in the autotools build. (FTR: heftig runs on arch linux)\n2. implement a fall through check:\n   - test if we can link with \"-lLLVM-#{Rubinius::BUILD_CONFIG[:llvm_version]}\"\n   - if that fails, test if we can link with the output of llvm-config --libs.\n   - barf if we still dont know how to link llvm.\n   - falling back to the static linking when the user requested shared linking would be bad.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Parent process can not get Signal.trap during Process.waitpid",
                "body": "I created a small piece of codes to reproduce this issue as belows:\n\n``` ruby\nmodule Fluent\n  class Supervisor\n    def initialize\n      @finished = false\n      install_supervisor_signal_handlers\n    end\n\n    def start\n      puts \"Starting #{Process.pid}\"\n      @main_pid = fork do\n        install_main_signal_handlers\n        while !@finished\n          sleep 1\n          puts Process.pid\n        end\n      end\n      # while !@finished\n      #   sleep 1\n      #   puts Process.pid\n      # end\n      Process.waitpid(@main_pid)\n    end\n\n    def install_supervisor_signal_handlers\n      trap :INT do\n        puts \"fluentd supervisor process get SIGINT\"\n        @finished = true\n      end\n    end\n\n    def install_main_signal_handlers\n      trap :INT do\n        puts \"fluentd main process get SIGINT\"\n        @finished = true\n      end\n    end\n  end\nend\n\nFluent::Supervisor.new.start\n```\n\nWith this code, sending INT signal to the supervisor process does not trap the INT signal. \n\n``` bash\n$ bundle exec ruby supervisor.rb\nStarting 9541\n9553\n9553\n9553\n$ kill -INT 9541\n# nothing happens. No signal trap\n```\n\nUncommenting the `puts` loop in the supervisor process not to go into `Process.waitpid`, the supervisor process could successfully receive the INT signal. \n\n``` bash\n$ kill -INT 9541\nfluentd supervisor process get SIGINT \n```\n\nIt seems the parent process can not get `Signal.trap` during `Process.waitpid`. \n\nrbx version and and os are belows:\n\n```\n$ ruby -v \nrubinius 2.2.10.n209 (2.1.0 91884d32 2014-07-28 JI) [x86_64-linux-gnu]\n$ uname -a\nLinux vagrant-centos62-64 2.6.32-431.3.1.el6.x86_64 #1 SMP Fri Jan 3 21:39:27 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux\n$ cat /etc/redhat-release\nCentOS release 6.5 (Final)\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Rubinius::ObjectBoundsExceededError in products # landing_page",
                "body": "I've been getting this occasionally right after deployments to a multithreaded puma environment. Since I can't duplicate it reliably, I assume it's related to threads, but I really have no idea what's going on.\n\n```\nRubinius::ObjectBoundsExceededError in products # landing_page\n\nActionView::Template::Error (Tuple::at_prim: index 16 out of bounds for size 16):\n    1: %footer\n    2:   .row.text-center\n    3:     = cache \"footer/products/conf_links\" do\n    4:       = render 'products/conf_links'\n    5:\n    6:     .medium-10.small-centered.columns\n    7:       %p\n  app/views/layouts/_footer.haml:4:in `_app_views_layouts__footer_haml__4150224644170444963_517112'\n  app/views/layouts/_footer.haml:3:in `_app_views_layouts__footer_haml__4150224644170444963_517112'\n  app/views/layouts/application.html.haml:30:in `_app_views_layouts_application_html_haml__3537268695073671881_399340'\n```\n\nThe rest of it from Honeybadger:\n\n```\nkernel/common/hash.rb:462:in `redistribute`\nkernel/common/hash.rb:191:in `[]=`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/template/resolver.rb:36:in `initialize`\nkernel/bootstrap/proc.rb:20:in `call`\nkernel/common/hash.rb:274:in `default`\nkernel/common/hash.rb:619:in `[]`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/template/resolver.rb:75:in `cached`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/template/resolver.rb:45:in `find_all`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/path_set.rb:65:in `find_all`\nkernel/bootstrap/array.rb:76:in `each`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/path_set.rb:64:in `find_all`\nkernel/bootstrap/array.rb:76:in `each`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/path_set.rb:63:in `find_all`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/path_set.rb:58:in `find`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/lookup_context.rb:122:in `find_template (find)`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/renderer/partial_renderer.rb:339:in `find_template`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/renderer/partial_renderer.rb:333:in `find_partial`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/renderer/partial_renderer.rb:222:in `render`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/renderer/renderer.rb:41:in `render_partial`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/helpers/rendering_helper.rb:27:in `render_without_haml (render)`\n[GEM_ROOT]/gems/haml-4.0.5/lib/haml/helpers/action_view_mods.rb:10:in `render_with_haml`\n[GEM_ROOT]/gems/haml-4.0.5/lib/haml/helpers.rb:89:in `non_haml`\n[GEM_ROOT]/gems/haml-4.0.5/lib/haml/helpers/action_view_mods.rb:10:in `render (render_with_haml)`\n[PROJECT_ROOT]/app/views/layouts/_footer.haml:4:in `_app_views_layouts__footer_haml__4150224644170444963_517112`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/helpers/cache_helper.rb:53:in `fragment_for`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/helpers/cache_helper.rb:36:in `cache`\n[PROJECT_ROOT]/app/views/layouts/_footer.haml:3:in `_app_views_layouts__footer_haml__4150224644170444963_517112`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/template.rb:145:in `render`\n[GEM_ROOT]/gems/activesupport-3.2.19/lib/active_support/notifications.rb:125:in `instrument`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/template.rb:143:in `render`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/renderer/partial_renderer.rb:265:in `render_partial`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/renderer/partial_renderer.rb:238:in `render`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/renderer/abstract_renderer.rb:38:in `instrument`\n[GEM_ROOT]/gems/activesupport-3.2.19/lib/active_support/notifications.rb:123:in `instrument`\n[GEM_ROOT]/gems/activesupport-3.2.19/lib/active_support/notifications/instrumenter.rb:20:in `instrument`\n[GEM_ROOT]/gems/activesupport-3.2.19/lib/active_support/notifications.rb:123:in `instrument`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/renderer/abstract_renderer.rb:38:in `instrument`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/renderer/partial_renderer.rb:237:in `render`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/renderer/renderer.rb:41:in `render_partial`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/helpers/rendering_helper.rb:27:in `render_without_haml (render)`\n[GEM_ROOT]/gems/haml-4.0.5/lib/haml/helpers/action_view_mods.rb:10:in `render_with_haml`\n[GEM_ROOT]/gems/haml-4.0.5/lib/haml/helpers.rb:89:in `non_haml`\n[GEM_ROOT]/gems/haml-4.0.5/lib/haml/helpers/action_view_mods.rb:10:in `render (render_with_haml)`\n[PROJECT_ROOT]/app/views/layouts/application.html.haml:30:in `_app_views_layouts_application_html_haml__3537268695073671881_399340`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/template.rb:145:in `render`\n[GEM_ROOT]/gems/activesupport-3.2.19/lib/active_support/notifications.rb:125:in `instrument`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/template.rb:143:in `render`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/renderer/template_renderer.rb:59:in `render_with_layout`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/renderer/template_renderer.rb:45:in `render_template`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/renderer/template_renderer.rb:18:in `render`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/renderer/renderer.rb:36:in `render_template`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_view/renderer/renderer.rb:17:in `render`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/abstract_controller/rendering.rb:110:in `_render_template`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_controller/metal/streaming.rb:225:in `_render_template`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/abstract_controller/rendering.rb:103:in `render_to_body`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_controller/metal/renderers.rb:28:in `render_to_body`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_controller/metal/compatibility.rb:50:in `render_to_body`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/abstract_controller/rendering.rb:88:in `render`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_controller/metal/rendering.rb:16:in `render`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_controller/metal/instrumentation.rb:40:in `render`\n[GEM_ROOT]/gems/activesupport-3.2.19/lib/active_support/core_ext/benchmark.rb:5:in `ms`\n/home/app/.rubies/rbx-2.2.9/gems/gems/rubysl-benchmark-2.0.1/lib/rubysl/benchmark/benchmark.rb:294:in `realtime`\n[GEM_ROOT]/gems/activesupport-3.2.19/lib/active_support/core_ext/benchmark.rb:5:in `ms`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_controller/metal/instrumentation.rb:40:in `render`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_controller/metal/instrumentation.rb:83:in `cleanup_view_runtime`\n[GEM_ROOT]/gems/activerecord-3.2.19/lib/active_record/railties/controller_runtime.rb:24:in `cleanup_view_runtime`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_controller/metal/instrumentation.rb:39:in `render`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_controller/metal/implicit_render.rb:10:in `default_render`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_controller/metal/implicit_render.rb:5:in `send_action`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/abstract_controller/base.rb:167:in `process_action`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_controller/metal/rendering.rb:10:in `process_action`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/abstract_controller/callbacks.rb:18:in `process_action`\n[GEM_ROOT]/gems/activesupport-3.2.19/lib/active_support/callbacks.rb:447:in `_run__1198746526351415222__process_action__104242844507077691__callbacks`\n[GEM_ROOT]/gems/activesupport-3.2.19/lib/active_support/callbacks.rb:405:in `__run_callback`\n[GEM_ROOT]/gems/activesupport-3.2.19/lib/active_support/callbacks.rb:385:in `_run_process_action_callbacks`\n[GEM_ROOT]/gems/activesupport-3.2.19/lib/active_support/callbacks.rb:81:in `run_callbacks`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/abstract_controller/callbacks.rb:17:in `process_action`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_controller/metal/rescue.rb:29:in `process_action`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_controller/metal/instrumentation.rb:30:in `process_action`\n[GEM_ROOT]/gems/activesupport-3.2.19/lib/active_support/notifications.rb:123:in `instrument`\n[GEM_ROOT]/gems/activesupport-3.2.19/lib/active_support/notifications/instrumenter.rb:20:in `instrument`\n[GEM_ROOT]/gems/activesupport-3.2.19/lib/active_support/notifications.rb:123:in `instrument`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_controller/metal/instrumentation.rb:29:in `process_action`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_controller/metal/params_wrapper.rb:207:in `process_action`\n[GEM_ROOT]/gems/activerecord-3.2.19/lib/active_record/railties/controller_runtime.rb:18:in `process_action`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/abstract_controller/base.rb:121:in `process`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/abstract_controller/rendering.rb:45:in `process`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_controller/metal.rb:203:in `dispatch`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_controller/metal/rack_delegation.rb:14:in `dispatch`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_controller/metal.rb:246:in `action`\nkernel/bootstrap/proc.rb:20:in `call`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_dispatch/routing/route_set.rb:73:in `dispatch`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_dispatch/routing/route_set.rb:36:in `call`\n[GEM_ROOT]/gems/journey-1.0.4/lib/journey/router.rb:68:in `call`\nkernel/bootstrap/array.rb:76:in `each`\n[GEM_ROOT]/gems/journey-1.0.4/lib/journey/router.rb:56:in `call`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_dispatch/routing/route_set.rb:608:in `call`\n[GEM_ROOT]/gems/omniauth-1.2.2/lib/omniauth/strategy.rb:186:in `call!`\n[GEM_ROOT]/gems/omniauth-1.2.2/lib/omniauth/strategy.rb:164:in `call`\n[GEM_ROOT]/gems/omniauth-1.2.2/lib/omniauth/builder.rb:59:in `call`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_dispatch/middleware/best_standards_support.rb:17:in `call`\n[GEM_ROOT]/gems/rack-1.4.5/lib/rack/etag.rb:23:in `call`\n[GEM_ROOT]/gems/rack-1.4.5/lib/rack/conditionalget.rb:25:in `call`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_dispatch/middleware/head.rb:14:in `call`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_dispatch/middleware/params_parser.rb:21:in `call`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_dispatch/middleware/flash.rb:242:in `call`\n[GEM_ROOT]/gems/rack-1.4.5/lib/rack/session/abstract/id.rb:210:in `context`\n[GEM_ROOT]/gems/rack-1.4.5/lib/rack/session/abstract/id.rb:205:in `call`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_dispatch/middleware/cookies.rb:341:in `call`\n[GEM_ROOT]/gems/activerecord-3.2.19/lib/active_record/query_cache.rb:64:in `call`\n[GEM_ROOT]/gems/activerecord-3.2.19/lib/active_record/connection_adapters/abstract/connection_pool.rb:479:in `call`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_dispatch/middleware/callbacks.rb:28:in `call`\n[GEM_ROOT]/gems/activesupport-3.2.19/lib/active_support/callbacks.rb:405:in `_run__2705956171196396203__call__1338411874204908663__callbacks`\n[GEM_ROOT]/gems/activesupport-3.2.19/lib/active_support/callbacks.rb:405:in `__run_callback`\n[GEM_ROOT]/gems/activesupport-3.2.19/lib/active_support/callbacks.rb:385:in `_run_call_callbacks`\n[GEM_ROOT]/gems/activesupport-3.2.19/lib/active_support/callbacks.rb:81:in `run_callbacks`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_dispatch/middleware/callbacks.rb:27:in `call`\n[GEM_ROOT]/gems/rack-1.4.5/lib/rack/sendfile.rb:102:in `call`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_dispatch/middleware/remote_ip.rb:31:in `call`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_dispatch/middleware/debug_exceptions.rb:16:in `call`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_dispatch/middleware/show_exceptions.rb:56:in `call`\n[GEM_ROOT]/gems/railties-3.2.19/lib/rails/rack/logger.rb:32:in `call_app`\n[GEM_ROOT]/gems/railties-3.2.19/lib/rails/rack/logger.rb:16:in `call`\n[GEM_ROOT]/gems/activesupport-3.2.19/lib/active_support/tagged_logging.rb:22:in `tagged`\n[GEM_ROOT]/gems/railties-3.2.19/lib/rails/rack/logger.rb:16:in `call`\n[GEM_ROOT]/gems/actionpack-3.2.19/lib/action_dispatch/middleware/request_id.rb:22:in `call`\n[GEM_ROOT]/gems/rack-1.4.5/lib/rack/methodoverride.rb:21:in `call`\n[GEM_ROOT]/gems/rack-1.4.5/lib/rack/runtime.rb:17:in `call`\n[GEM_ROOT]/gems/activesupport-3.2.19/lib/active_support/cache/strategy/local_cache.rb:72:in `call`\n[GEM_ROOT]/gems/rack-cache-1.2/lib/rack/cache/context.rb:136:in `forward`\n[GEM_ROOT]/gems/rack-cache-1.2/lib/rack/cache/context.rb:245:in `fetch`\n[GEM_ROOT]/gems/rack-cache-1.2/lib/rack/cache/context.rb:185:in `lookup`\n[GEM_ROOT]/gems/rack-cache-1.2/lib/rack/cache/context.rb:66:in `call!`\n[GEM_ROOT]/gems/rack-cache-1.2/lib/rack/cache/context.rb:51:in `call`\n[GEM_ROOT]/gems/railties-3.2.19/lib/rails/engine.rb:484:in `call`\n[GEM_ROOT]/gems/railties-3.2.19/lib/rails/application.rb:231:in `call`\n[GEM_ROOT]/gems/railties-3.2.19/lib/rails/railtie/configurable.rb:30:in `call (method_missing)`\n[GEM_ROOT]/gems/puma-2.9.0/lib/puma/configuration.rb:71:in `call`\n[GEM_ROOT]/gems/puma-2.9.0/lib/puma/server.rb:490:in `handle_request`\n[GEM_ROOT]/gems/puma-2.9.0/lib/puma/server.rb:361:in `process_client`\n[GEM_ROOT]/gems/puma-2.9.0/lib/puma/server.rb:254:in `run`\nkernel/bootstrap/proc.rb:20:in `call`\n[GEM_ROOT]/gems/puma-2.9.0/lib/puma/thread_pool.rb:92:in `spawn_thread`\nkernel/bootstrap/proc.rb:20:in `call`\nkernel/bootstrap/thread.rb:391:in `__run__`\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "CAPI updates for BigDecimal",
                "body": "In order to update https://github.com/rubysl/rubysl-bigdecimal to the latest MRI version there are a bunch of things that need to be done CAPI wise. This list is as following:\n- [ ] `st.h` is now available always in MRI by the looks of it, removing the need for explicit `#include` calls. We'll also need to make this header available. See https://github.com/ruby/ruby/commit/536a3274#diff-77d09ab910b276faef72857cc34e5242R879 for the MRI change.\n- [x] `siphash.c` and `siphash.h` need to be imported into Rubinius and made available. \n- [ ] `rb_memhash()` needs to be imported from `random.c` (https://github.com/ruby/ruby/blob/trunk/random.c#L1302) as BigDecimal now depends on this function (which in turn depends on siphash).\n- [ ] siphash/rb_memhash related data has to be initialized according to https://github.com/ruby/ruby/blob/trunk/random.c#L1288-L1292. This in turn _might_ need proper locking mechanisms to be put in place to prevent race conditions.\n- [x] `rb_big_cmp` needs to be added as BigDecimal now depends on it (https://github.com/ruby/ruby/blob/trunk/ext/bigdecimal/bigdecimal.c#L2094 and https://github.com/ruby/ruby/blob/trunk/ext/bigdecimal/bigdecimal.c#L2880).\n- [x] `rb_big_pack` needs to be added, see https://github.com/ruby/ruby/blob/trunk/ext/bigdecimal/bigdecimal.c#L2162\n- [x] `rb_dbl2big` needs to be added, see https://github.com/ruby/ruby/blob/trunk/ext/bigdecimal/bigdecimal.c#L2239\n- [x] `rb_thread_check_ints` needs to be added, see https://github.com/ruby/ruby/blob/trunk/ext/bigdecimal/bigdecimal.c#L2797\n- [x] `rb_intern_const` needs to be added, I think? Our current Oniguruma vendor depends on it but I can't find any definitions of this function. See https://github.com/ruby/ruby/blob/trunk/ext/bigdecimal/bigdecimal.c#L3103-L3105\n- [ ] `rb_str_tmp_new` needs to be added, see https://github.com/ruby/ruby/blob/trunk/ext/bigdecimal/bigdecimal.c#L3895\n\nMost of this was based on the following compiler output:\n\n```\ncompiling bigdecimal.c\nbigdecimal.c:347:5: error: use of undeclared identifier 'st_index_t'\n    st_index_t hash;\n    ^\nbigdecimal.c:350:5: error: use of undeclared identifier 'hash'\n    hash = (st_index_t)p->sign;\n    ^\nbigdecimal.c:350:13: error: use of undeclared identifier 'st_index_t'\n    hash = (st_index_t)p->sign;\n            ^\nbigdecimal.c:352:8: error: use of undeclared identifier 'hash'\n    if(hash == 2 || hash == (st_index_t)-2) {\n       ^\nbigdecimal.c:352:21: error: use of undeclared identifier 'hash'\n    if(hash == 2 || hash == (st_index_t)-2) {\n                    ^\nbigdecimal.c:352:30: error: use of undeclared identifier 'st_index_t'\n    if(hash == 2 || hash == (st_index_t)-2) {\n                             ^\nbigdecimal.c:353:2: error: use of undeclared identifier 'hash'\n        hash ^= rb_memhash(p->frac, sizeof(BDIGIT)*p->Prec);\n        ^\nbigdecimal.c:353:10: warning: implicit declaration of function 'rb_memhash' is invalid in C99 [-Wimplicit-function-declaration]\n        hash ^= rb_memhash(p->frac, sizeof(BDIGIT)*p->Prec);\n                ^\nbigdecimal.c:354:2: error: use of undeclared identifier 'hash'\n        hash += p->exponent;\n        ^\nbigdecimal.c:356:20: error: use of undeclared identifier 'hash'\n    return INT2FIX(hash);\n                   ^\n/home/yorickpeterse/.rubies/rbx-git/vm/include/capi/ruby/ruby.h:523:43: note: expanded from macro 'INT2FIX'\n#define INT2FIX(i)        CAPI_TAG_FIXNUM(i)\n                                          ^\n/home/yorickpeterse/.rubies/rbx-git/vm/include/capi/capi_oop.h:99:47: note: expanded from macro 'CAPI_TAG_FIXNUM'\n#define CAPI_TAG_FIXNUM(v)  ((VALUE)(((VALUE)(v) << TAG_FIXNUM_SHIFT) | TAG_FIXNUM))\n                                              ^\nbigdecimal.c:384:21: error: expected ')'\n    sprintf(psz, \"%\"PRIuSIZE\":\", VpMaxPrec(vp)*VpBaseFig());\n                    ^\nbigdecimal.c:384:12: note: to match this '('\n    sprintf(psz, \"%\"PRIuSIZE\":\", VpMaxPrec(vp)*VpBaseFig());\n           ^\nbigdecimal.c:2066:34: error: expected ')'\n    sprintf(psz, \"#<BigDecimal:%\"PRIxVALUE\",'\", self);\n                                 ^\nbigdecimal.c:2066:12: note: to match this '('\n    sprintf(psz, \"#<BigDecimal:%\"PRIxVALUE\",'\", self);\n           ^\nbigdecimal.c:2070:23: error: expected ')'\n    sprintf(tmp, \"',%\"PRIuSIZE\"(%\"PRIuSIZE\")>\", VpPrec(vp)*VpBaseFig(), VpMaxPrec(vp)*VpBaseFig());\n                      ^\nbigdecimal.c:2070:12: note: to match this '('\n    sprintf(tmp, \"',%\"PRIuSIZE\"(%\"PRIuSIZE\")>\", VpPrec(vp)*VpBaseFig(), VpMaxPrec(vp)*VpBaseFig());\n           ^\nbigdecimal.c:2094:17: warning: implicit declaration of function 'rb_big_cmp' is invalid in C99 [-Wimplicit-function-declaration]\n        return FIX2INT(rb_big_cmp(x, INT2FIX(0))) < 0;\n                       ^\n/home/yorickpeterse/.rubies/rbx-git/vm/include/capi/ruby/ruby.h:481:45: note: expanded from macro 'FIX2INT'\n#define FIX2INT(x) ((int)rb_fix2int((VALUE)(x)))\n                                            ^\nbigdecimal.c:2162:13: warning: implicit declaration of function 'rb_big_pack' is invalid in C99 [-Wimplicit-function-declaration]\n            rb_big_pack(x, &l, 1);\n            ^\nbigdecimal.c:2219:17: warning: expression result unused [-Wunused-value]\n        RB_GC_GUARD(y->obj);\n                    ~  ^~~\nbigdecimal.c:2235:10: error: use of undeclared identifier 'native_int'\n            if (FIXABLE(d)) {\n                ^\n/home/yorickpeterse/.rubies/rbx-git/vm/include/capi/ruby/ruby.h:458:28: note: expanded from macro 'FIXABLE'\n#define FIXABLE(f)        (POSFIXABLE(f) && NEGFIXABLE(f))\n                           ^\n/home/yorickpeterse/.rubies/rbx-git/vm/include/capi/ruby/ruby.h:456:35: note: expanded from macro 'POSFIXABLE'\n#define POSFIXABLE(f)     ((f) <= FIXNUM_MAX)\n                                  ^\n/home/yorickpeterse/.rubies/rbx-git/vm/include/capi/capi_oop.h:102:32: note: expanded from macro 'FIXNUM_MAX'\n#define FIXNUM_MAX          (((native_int)1 << FIXNUM_WIDTH) - 1)\n                               ^\nbigdecimal.c:2235:10: error: use of undeclared identifier 'native_int'\n/home/yorickpeterse/.rubies/rbx-git/vm/include/capi/ruby/ruby.h:458:45: note: expanded from macro 'FIXABLE'\n#define FIXABLE(f)        (POSFIXABLE(f) && NEGFIXABLE(f))\n                                            ^\n/home/yorickpeterse/.rubies/rbx-git/vm/include/capi/ruby/ruby.h:457:35: note: expanded from macro 'NEGFIXABLE'\n#define NEGFIXABLE(f)     ((f) >= FIXNUM_MIN)\n                                  ^\n/home/yorickpeterse/.rubies/rbx-git/vm/include/capi/capi_oop.h:103:32: note: expanded from macro 'FIXNUM_MIN'\n#define FIXNUM_MIN          (-(FIXNUM_MAX))\n                               ^\n/home/yorickpeterse/.rubies/rbx-git/vm/include/capi/capi_oop.h:102:32: note: expanded from macro 'FIXNUM_MAX'\n#define FIXNUM_MAX          (((native_int)1 << FIXNUM_WIDTH) - 1)\n                               ^\nbigdecimal.c:2239:10: warning: implicit declaration of function 'rb_dbl2big' is invalid in C99 [-Wimplicit-function-declaration]\n                vexp = rb_dbl2big(d);\n                       ^\nbigdecimal.c:2281:21: warning: expression result unused [-Wunused-value]\n            RB_GC_GUARD(y->obj);\n                        ~  ^~~\nbigdecimal.c:2765:22: warning: expression result unused [-Wunused-value]\n            RB_GC_GUARD(vy->obj);\n                        ~~  ^~~\nbigdecimal.c:2773:18: warning: expression result unused [-Wunused-value]\n        RB_GC_GUARD(vy->obj);\n                    ~~  ^~~\nbigdecimal.c:2797:2: warning: implicit declaration of function 'rb_thread_check_ints' is invalid in C99 [-Wimplicit-function-declaration]\n        rb_thread_check_ints();\n        ^\nbigdecimal.c:2820:17: warning: expression result unused [-Wunused-value]\n    RB_GC_GUARD(one);\n                ^~~\nbigdecimal.c:2821:17: warning: expression result unused [-Wunused-value]\n    RB_GC_GUARD(x);\n                ^\nbigdecimal.c:2822:17: warning: expression result unused [-Wunused-value]\n    RB_GC_GUARD(y);\n                ^\nbigdecimal.c:2823:17: warning: expression result unused [-Wunused-value]\n    RB_GC_GUARD(d);\n                ^\nbigdecimal.c:2916:18: warning: expression result unused [-Wunused-value]\n        RB_GC_GUARD(vy->obj);\n                    ~~  ^~~\nbigdecimal.c:2923:18: warning: expression result unused [-Wunused-value]\n        RB_GC_GUARD(vy->obj);\n                    ~~  ^~~\nbigdecimal.c:2944:34: error: expected ')'\n        snprintf(buf, sizeof(buf), \"1E%\"PRIdVALUE, -expo);\n                                        ^\nbigdecimal.c:2944:10: note: to match this '('\n        snprintf(buf, sizeof(buf), \"1E%\"PRIdVALUE, -expo);\n                ^\nbigdecimal.c:3103:36: warning: implicit declaration of function 'rb_intern_const' is invalid in C99 [-Wimplicit-function-declaration]\n    id_BigDecimal_exception_mode = rb_intern_const(\"BigDecimal.exception_mode\");\n                                   ^\nbigdecimal.c:3895:11: warning: implicit declaration of function 'rb_str_tmp_new' is invalid in C99 [-Wimplicit-function-declaration]\n    buf = rb_str_tmp_new(strlen(szVal) + 1);\n          ^\nbigdecimal.c:5267:22: error: expected ')'\n    sprintf(psz, \"E%\"PRIdSIZE, ex);\n                     ^\nbigdecimal.c:5267:12: note: to match this '('\n    sprintf(psz, \"E%\"PRIdSIZE, ex);\n           ^\n17 warnings and 16 errors generated.\nMakefile:205: recipe for target 'bigdecimal.o' failed\nmake: *** [bigdecimal.o] Error 1\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Ferret fails to build C extension",
                "body": "gem install ferret on HEAD (rubinius 2.2.10.n195 (2.1.0 11af1de8 2014-07-14 JI) [x86_64-linux-gnu]) results in http://pastebin.com/bCUkUzeu\nSeems the C extension fails on frb_rb_hash_size. IIRC there are issues with the way some gems implement RHASH and other C runtime based accessors to what in our runtime are pure Ruby structures.\n\nThis was discovered while attempting to build Treat for RBX again, Birch still seems to release without @dbussink's patch, though install from git fixes this, but running Treat::Core::Installer.install attempts to install ferret and the fun stops there.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Crash during fetching the gem metada on 2.2.10/OSX 10.9.3.",
                "body": "Hello, I was running \"bundle\" in several directories after installing 2.2.10 and it crashed during the fetch of metadata:\n\n```\nFetching gem metadata from https://rubygems.org/.........\n---------------------------------------------\nCRASH: A fatal error has occurred.\n```\n\n    \n    Backtrace:\n    0   ruby                                0x000000010b898fc8 _ZN8rubiniusL12segv_handlerEi + 440\n    1   libsystem_platform.dylib            0x00007fff8b68f5aa _sigtramp + 26\n    2   ???                                 0x00007f8a29403b80 0x0 + 140231374289792\n    3   ruby                                0x000000010b9b1acf _ZN8rubinius9utilities6thread6Thread10trampolineEPv + 15\n    4   libsystem_pthread.dylib             0x00007fff8df12899 _pthread_body + 138\n    5   libsystem_pthread.dylib             0x00007fff8df1272a _pthread_struct_init + 0\n    6   libsystem_pthread.dylib             0x00007fff8df16fc9 thread_start + 13\n\nWrote full error report to: /Volumes/Users/roberto/.rbx/rubinius_last_error_3897\nRun 'rbx report' to submit this crash report!\n\n\"rbx report\" output in https://gist.github.com/202ea0e13dab7ec6b5d0\n\nPlease tell me if you need anything.\n\nrubinius was compiled with clang 6.0 from Xcode 6beta3.\n\n```\nApple LLVM version 6.0 (clang-600.0.38) (based on LLVM 3.5svn)\nTarget: x86_64-apple-darwin13.2.0\nThread model: posix\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Add support for :blocking=>true with Rubinius::FFI::Library#attach_function",
                "body": "I'm trying to use Rubinius::FFI where currently ::FFI is being used, and came across the following compatibility issue:\n\n``` ruby\nattach_function :zmq_socket, [:pointer, :int], :pointer, :blocking => true\n```\n\nRubinius::FFI#attach_function says:\n\n> Attach a C function to this module. The arguments can have two forms:\n> \n> ``` ruby\n>   attach_function c_name, [c_arg1, c_arg2], ret\n>   attach_function mod_name, c_name, [c_arg1, c_arg2], ret\n> ```\n> \n> In the first form, `c_name` will also be used for the name of the module\n> method. In the second form, the module method name is `mod_name`.\n> \n> The `c_name` and `mod_name` can be given as Strings or Symbols.\n> \n> The types of the arguments to the C function, `c_arg1`, `c_arg2`, etc, are\n> given as an array even if there is only one.\n> \n> The final argument, `ret`, is the type of the return value from the C\n> function.\n\n(From https://github.com/rubinius/rubinius/blob/master/kernel/platform/library.rb#L86-L130)\n\nIt appears Rubinius doesn't have a method signature to support the use of keyword arguments / option hashes like `:blocking => true`.\n\nDoes Rubinius support making attached functions blocking, and if so, how?  I can submit a PR to make it compatible with that syntax.  If not currently supported, the PR would likely have to get into C++ space...\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Missing CAPI functions",
                "body": "I'm trying to apply latest MRI changes to the readline library to rubysl-readline.\n\nI've forked rubysl-readline and put the latest changes in MRI trunk. I end up with something \n\nI end up with something like this for extconf.rb https://gist.github.com/goyox86/9929c70990fbd1b64b6d\nAnd readline.c looks like this https://gist.github.com/goyox86/f1884438168dc67e759d\n\nThen I'm trying to install the gem with RBX 2.2.9 specifically this **(rubinius 2.2.9 (2.1.0 8694b613 2014-06-10 JI) [x86_64-darwin13.2.0])**\n\nOutput looks like this: \n\n``` sh\n $ gem build rubyslreadline.gemspec\nWARNING:  description and summary are identical\nWARNING:  See http://guides.rubygems.org/specification-reference/ for help\n  Successfully built RubyGem\n  Name: rubysl-readline\n  Version: 2.0.2\n  File: rubysl-readline-2.0.2.gem\n$  gem install rubysl-readline2.0.2.gem\nBuilding native extensions.  This could take a while...\nERROR:  Error installing rubysl-readline-2.0.2.gem:\n    ERROR: Failed to build gem native extension.\n\n    /Users/goyox86/.rubies/rbx-2.2.9/bin/rbx extconf.rb\nchecking for tgetnum() in -lncurses... yes\nchecking for readline/readline.h... yes\nchecking for readline/history.h... yes\nchecking for readline() in -lreadline... yes\nchecking for rl_getc() in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_getc_function() in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_filename_completion_function() in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_username_completion_function() in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_completion_matches() in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_refresh_line() in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_deprep_term_function in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_completion_append_character in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_basic_word_break_characters in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_completer_word_break_characters in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_basic_quote_characters in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_completer_quote_characters in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_filename_quote_characters in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_attempted_completion_over in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_library_version in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_editing_mode in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_line_buffer in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_point in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_event_hook in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_catch_sigwinch in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_catch_signals in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_pre_input_hook in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_special_prefixes in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_cleanup_after_signal() in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_free_line_state() in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_clear_signals() in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_set_screen_size() in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_get_screen_size() in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_vi_editing_mode() in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_emacs_editing_mode() in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for replace_history_entry() in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for remove_history() in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for clear_history() in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_redisplay() in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_insert_text() in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_delete_text() in stdio.h,readline/readline.h,readline/history.h... yes\nchecking for rl_hook_func_t* in stdio.h,readline/readline.h,readline/history.h... yes\ncreating Makefile\n\nmake \"DESTDIR=\" clean\n\nmake \"DESTDIR=\"\ncompiling readline.c\nreadline.c:220:13: warning: implicit declaration of function 'rb_thread_check_ints' is invalid in C99 [-Wimplicit-function-declaration]\n            rb_thread_check_ints();\n            ^\nreadline.c:227:19: warning: implicit declaration of function 'rb_wait_for_single_fd' is invalid in C99 [-Wimplicit-function-declaration]\n            ret = rb_wait_for_single_fd(data.fd, RB_WAITFD_IN, NULL);\n                  ^\nreadline.c:227:50: error: use of undeclared identifier 'RB_WAITFD_IN'\n            ret = rb_wait_for_single_fd(data.fd, RB_WAITFD_IN, NULL);\n                                                 ^\nreadline.c:264:14: warning: implicit declaration of function 'rb_str_new_shared' is invalid in C99 [-Wimplicit-function-declaration]\n    prompt = rb_str_new_shared(prompt);\n             ^\nreadline.c:269:23: warning: implicit declaration of function 'rb_str_tmp_new' is invalid in C99 [-Wimplicit-function-declaration]\n        last_prompt = rb_str_tmp_new(len);\n                      ^\nreadline.c:458:9: warning: implicit declaration of function 'rb_str_locktmp' is invalid in C99 [-Wimplicit-function-declaration]\n        rb_str_locktmp(tmp);\n        ^\nreadline.c:465:9: warning: implicit declaration of function 'rb_io_check_initialized' is invalid in C99 [-Wimplicit-function-declaration]\n        rb_io_check_initialized(ifp = RFILE(rb_io_taint_check(readline_instream))->fptr);\n        ^\nreadline.c:465:45: warning: implicit declaration of function 'rb_io_taint_check' is invalid in C99 [-Wimplicit-function-declaration]\n        rb_io_check_initialized(ifp = RFILE(rb_io_taint_check(readline_instream))->fptr);\n                                            ^\n/Users/goyox86/.rubies/rbx-2.2.9/vm/include/capi/ruby/ruby.h:331:43: note: expanded from macro 'RFILE'\n#define RFILE(obj)      capi_rfile_struct(obj)\n                                          ^\nreadline.c:487:9: warning: implicit declaration of function 'rb_str_unlocktmp' is invalid in C99 [-Wimplicit-function-declaration]\n        rb_str_unlocktmp(tmp);\n        ^\nreadline.c:541:14: warning: implicit declaration of function 'rb_cloexec_dup' is invalid in C99 [-Wimplicit-function-declaration]\n        fd = rb_cloexec_dup(ifp->fd);\n             ^\nreadline.c:686:5: warning: implicit declaration of function 'rb_check_arity' is invalid in C99 [-Wimplicit-function-declaration]\n    rb_check_arity(argc, 0, 2);\n    ^\nreadline.c:693:17: error: no member named 'basic' in 'struct RString'\n        fakestr.basic.flags = T_STRING | RSTRING_NOEMBED;\n        ~~~~~~~ ^\nreadline.c:693:42: error: use of undeclared identifier 'RSTRING_NOEMBED'\n        fakestr.basic.flags = T_STRING | RSTRING_NOEMBED;\n                                         ^\nreadline.c:694:17: error: no member named 'as' in 'struct RString'\n        fakestr.as.heap.ptr = ptr;\n        ~~~~~~~ ^\nreadline.c:695:17: error: no member named 'as' in 'struct RString'\n        fakestr.as.heap.len = len;\n        ~~~~~~~ ^\nreadline.c:702:17: warning: implicit declaration of function 'rb_str_subpos' is invalid in C99 [-Wimplicit-function-declaration]\n            p = rb_str_subpos(str, beg, &len);\n                ^\nreadline.c:702:15: warning: incompatible integer to pointer conversion assigning to 'char *' from 'int' [-Wint-conversion]\n            p = rb_str_subpos(str, beg, &len);\n              ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nreadline.c:707:19: warning: implicit declaration of function 'rb_str_strlen' is invalid in C99 [-Wimplicit-function-declaration]\n            len = rb_str_strlen(str);\n                  ^\nreadline.c:964:9: warning: implicit declaration of function 'rb_enc_check' is invalid in C99 [-Wimplicit-function-declaration]\n        rb_enc_check(encobj, temp);\n        ^\nreadline.c:1343:21: warning: expression result unused [-Wunused-value]\n        rb_obj_hide(str);\n                    ^~~\n/Users/goyox86/.rubies/rbx-2.2.9/vm/include/capi/ruby/ruby.h:2065:26: note: expanded from macro 'rb_obj_hide'\n#define rb_obj_hide(obj) obj\n                         ^\nreadline.c:1375:23: warning: expression result unused [-Wunused-value]\n        rb_obj_reveal(str, rb_cString);\n                      ^~~\n/Users/goyox86/.rubies/rbx-2.2.9/vm/include/capi/ruby/ruby.h:2066:35: note: expanded from macro 'rb_obj_reveal'\n#define rb_obj_reveal(obj, klass) obj\n                                  ^\nreadline.c:1895:5: warning: implicit declaration of function 'CONST_ID' is invalid in C99 [-Wimplicit-function-declaration]\n    CONST_ID(id_orig_prompt, \"orig_prompt\");\n    ^\n17 warnings and 5 errors generated.\nmake: *** [readline.o] Error 1\n\nmake failed, exit code 2\n\nGem files will remain installed in /Users/goyox86/.gem/rbx/2.1.0/gems/rubysl-readline-2.0.2 for inspection.\nResults logged to /Users/goyox86/.gem/rbx/2.1.0/extensions/x86_64-darwin-13/2.1/rubysl-readline-2.0.2/gem_make.out\n```\n\nI was about to file the ticket under **rubysl-readline** repo but it seems to be RBX not having some CAPI functions / constants there. \n\nI'm on clang and this is my 'uname -a' :\n\nDarwin Bailey.local 13.2.0 Darwin Kernel Version 13.2.0: Thu Apr 17 23:03:13 PDT 2014; root:xnu-2422.100.13~1/RELEASE_X86_64 x86_64\n\nHere is the link to the MRI change set that introduced those new entities in the CAPPI and added stuff on readline: https://github.com/ruby/ruby/commit/9be37ca7d51513658f5f84d98fa5e46026cc5a04\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Minitest 4.7.5 test suite fails one test with rubinius 2.2.7",
                "body": "Trying to run the minitest 4.7.5 test suite with rubinius 2.2.7 (2.1.0 build 2014-05-20 JI) [x86_64-linux-gnu] gives me this error:\n\n```\n  1) Error:\nTestMiniTestMock#test_mock_args_does_not_raise:\nNoMethodError: unmocked method :equal?, expected one of []\n    kernel/common/kernel.rb:195:in `==='\n    kernel/common/enumerable.rb:304:in `all?'\n    kernel/bootstrap/array.rb:76:in `each'\n    kernel/common/enumerable.rb:304:in `all?'\n    /var/tmp/portage/dev-ruby/minitest-4.7.5-r1/work/rbx/minitest-4.7.5/test/minitest/test_minitest_mock.rb:72:in `test_mock_args_does_not_raise'\n    kernel/common/enumerable.rb:49:in `collect'\n    kernel/bootstrap/proc.rb:20:in `call'\n    kernel/bootstrap/thread.rb:391:in `__run__'\n```\n\nTests were run with \"rbx -Ilib:bin:test:. -S testrb test\"\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Process.spawn incomplete? (error in exec.js)",
                "body": "With the current exec.js I see this error. @josh mentioned, that it might be due to an incomplete implementation of Process.spawn https://github.com/sstephenson/execjs/issues/148\n\nThe \"{err: [:child, :out]}\" in lib/execjs/external_runtime.rb#125\n\n```\noutput = sh(binary.split(' ') + [filename, {err: [:child, :out]}])\n```\n\ncauses a\n\n```\nTypeError: Coercion error: :child.to_str => String failed\n  (in /opt/dokmatic1/app/assets/javascripts/emberapp.js.coffee)\nkernel/common/type.rb:26:in `execute_coerce_to'\nkernel/common/type.rb:19:in `coerce_to'\nkernel/common/kernel.rb:147:in `StringValue'\nkernel/common/type.rb:339:in `coerce_to_path'\nkernel/common/file.rb:1112:in `initialize'\nkernel/alpha.rb:94:in `new'\nkernel/common/io.rb:624:in `open'\nkernel/common/process.rb:218:in `setup_redirects'\nkernel/common/hash.rb:342:in `each'\nkernel/common/process.rb:211:in `setup_redirects'\nkernel/common/io.rb:810:in `popen'\n```\n\nwhen run with rubinius 2.2.7. This doesn't happen when I simply remove the hash:\n\n```\noutput = sh(binary.split(' ') + [filename])\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Rbx 2.2.7 sigsegv on \"load 'file' ",
                "body": "https://gist.github.com/slaught/ef91508e2a4124962719\n\nCrash while doing\n\nrbx/irb\nload 'out3'\n\nout3 is 97mb and is the assignment of an array to a variable. The array has a series of complex hashes.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "rand doesn't seem to provide random number for a large enough limit",
                "body": "Here a simple test case:\n\n``` ruby\nlim = 10_000_000_000\n\nn = 20\n\nn.times do\n  puts(rand(-lim..lim))\nend\n\n```\n\nWhen running this I get the following result:\n\n```\n➜  ruby  ruby -v\nrubinius 2.2.7 (2.1.0 build 2014-05-20 JI) [x86_64-linux-gnu]\n➜  ruby  ruby rand_test.rb\n-7070295185\n-8125147908\n-8121139205\n-7451964937\n-6577447939\n-5772150821\n-7194078241\n-7602959499\n-5708188417\n-7475948625\n-8837396483\n-8030807045\n-9131948099\n-5923144705\n-7866147877\n-6244574765\n-8406312067\n-5944828947\n-5706409491\n-5845923337\n\n```\n\nI expected to at least get at least a few positive numbers approximately half the time but every time I run the script, it just gives me negative numbers. When I run the script with a limit of 1_000_000_000 or less, it seems to behave as expected.\n\nHere's the same test under MRI 2.1.1\n\n```\n➜  ruby  ruby -v\nruby 2.1.1p76 (2014-02-24 revision 45161) [x86_64-linux]\n➜  ruby  ruby rand_test.rb\n-3295874603\n-2803158131\n7627272990\n-1816902097\n-1006118531\n135277851\n9486712478\n-6746449458\n5020077110\n4254455872\n-6182422574\n7043240492\n-3920015767\n6209470698\n-6022382948\n9299149416\n809718185\n-1115886247\n-3254854560\n9966790586\n\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "\"buffer overflow detected\" in \"rubinius::IO::read_if_available\"",
                "body": "Likely the same bug as #3025 but no OpenSSL involved\n\n``` C++\nThread 22 (Thread 0x7fffd2ffb700 (LWP 27628)):\n#0  0x00007ffff69dc425 in __GI_raise (sig=<optimized out>) at ../nptl/sysdeps/unix/sysv/linux/raise.c:64\n#1  0x00007ffff69dfb10 in __GI_abort () at abort.c:120\n#2  0x00007ffff6a1a39e in __libc_message (do_abort=2, fmt=0x7ffff6b2257f \"*** %s ***: %s terminated\\n\") at ../sysdeps/unix/sysv/linux/libc_fatal.c:201\n#3  0x00007ffff6ab0f47 in __GI___fortify_fail (msg=0x7ffff6b22516 \"buffer overflow detected\") at fortify_fail.c:32\n#4  0x00007ffff6aafe40 in __GI___chk_fail () at chk_fail.c:29\n#5  0x00007ffff6ab0efe in __fdelt_chk (d=<optimized out>) at fdelt_chk.c:26\n#6  0x00000000006a8086 in rubinius::IO::read_if_available (this=<optimized out>, state=0x7fffd2ffadd0, number_of_bytes=0x8001) at vm/builtin/io.cpp:704\n#7  0x0000000000629bca in rubinius::Primitives::io_read_if_available (state=0x7fffd2ffadd0, call_frame=0x7fffd2ff21f0, exec=0x7ffff5ae87a8, mod=0x16023c0, \n    args=...) at vm/gen/method_primitives.cpp:9881\n#8  0x00000000005bd40f in execute (args=..., call_frame=0x7fffd2ff21f0, state=0x7fffd2ffadd0, this=<optimized out>) at vm/builtin/call_site.hpp:108\n#9  rubinius::MachineCode::interpreter (state=<optimized out>, mcode=0x1870660, call_frame=0x7fffd2ff21f0) at vm/gen/instruction_implementations.hpp:543\n#10 0x00000000005fa9dc in rubinius::MachineCode::execute_specialized<rubinius::GenericArguments> (state=0x7fffd2ffadd0, previous=0x7fffd2ff23d7, \n    exec=0x7ffff5cba0a0, mod=0x16023c0, args=...) at vm/machine_code.cpp:671\n#11 0x00000000005bd40f in execute (args=..., call_frame=0x7fffd2ff26f0, state=0x7fffd2ffadd0, this=<optimized out>) at vm/builtin/call_site.hpp:108\n#12 rubinius::MachineCode::interpreter (state=<optimized out>, mcode=0x7fffa000b3e0, call_frame=0x7fffd2ff26f0) at vm/gen/instruction_implementations.hpp:543\n#13 0x00000000005fc944 in rubinius::MachineCode::execute_specialized<rubinius::NoArguments> (state=0x7fffd2ffadd0, previous=<optimized out>, \n    exec=0x7ffff4c06da0, mod=0x1f61ce0, args=...) at vm/machine_code.cpp:671\n#14 0x00007ffff7e9d369 in ?? ()\n#15 0x0000000000000000 in ?? ()\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "ERROR IN TIMEOUT THREAD private method `raise' called on nil:NilClass. (NoMethodError)",
                "body": "Trying to reproduce #3025 I found this:\n\n```\nERROR IN TIMEOUT THREAD\n\n    private method `raise' called on nil:NilClass. (NoMethodError)\n\nBacktrace:\n\n  Kernel(NilClass)#raise (method_missing) at kernel/delta/kernel.rb:78\n           Timeout::TimeoutRequest#cancel at /home/ghazel/rubinius/gems/gems/rubysl-timeout-2.0.0/lib/rubysl/timeout/timeout.rb:68\n             { } in Timeout.watch_channel at /home/ghazel/rubinius/gems/gems/rubysl-timeout-2.0.0/lib/rubysl/timeout/timeout.rb:109\n                          Array#delete_if at kernel/common/array.rb:516\n                    Timeout.watch_channel at /home/ghazel/rubinius/gems/gems/rubysl-timeout-2.0.0/lib/rubysl/timeout/timeout.rb:107\n         { } in Object(Module)#__script__ at /home/ghazel/rubinius/gems/gems/rubysl-timeout-2.0.0/lib/rubysl/timeout/timeout.rb:125\n                                Proc#call at kernel/bootstrap/proc.rb:20\n                           Thread#__run__ at kernel/bootstrap/thread.rb:391\n```\n\nMy lame repro script (the idea is that Thread.timeout is involved in the original bug because Net::HTTP uses Timeout.timeout)\n\n``` ruby\nrequire 'httparty'\nrequire 'json'\n\nclass GCM\n  include HTTParty\n  PUSH_URL = 'https://android.googleapis.com/gcm/send'\n  base_uri PUSH_URL\n  default_timeout 30\n  format :json\n\n  def send\n    params = {\n      :body => {}.to_json,\n      :headers => {\n        'Content-Type' => 'application/json', \n      }\n    }\n    response = self.class.post('', params)\n  end\n\nend\n\nthreads = []\n10.times do\n  threads << Thread.new do\n    begin\n      gcm = GCM.new\n      loop do\n        begin\n          print '.' \n          Timeout.timeout(0.0001) do\n            gcm.send.code\n          end\n        rescue\n        end\n      end\n    rescue\n      retry\n    end\n  end\nend\n\nloop do \n  sleep 1\nend\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "\"buffer overflow detected\" in \"SSL_connect\"",
                "body": "https://gist.github.com/ghazel/6e3fdd91afab3fc1689d\n\nrelevant bit;\n\n``` C++\nThread 26 (Thread 0x7fffd23f8700 (LWP 2974)):\n#0  _int_malloc (av=0x7fff80000020, bytes=21848) at malloc.c:3900\n#1  0x00007ffff6a28f95 in __GI___libc_malloc (bytes=21848) at malloc.c:2924\n#2  0x00007fffeed84134 in CRYPTO_malloc () from /lib/x86_64-linux-gnu/libcrypto.so.1.0.0\n#3  0x00007fffeee02ddc in BUF_MEM_grow () from /lib/x86_64-linux-gnu/libcrypto.so.1.0.0\n#4  0x00007fffed2bc11e in ?? () from /lib/x86_64-linux-gnu/libssl.so.1.0.0\n#5  0x00007fffef9c9e2f in ossl_start_ssl (self=43990800, func=0x7fffed2cfd30 <SSL_connect>, funcname=0x7fffef9efc39 \"SSL_connect\", nonblock=0)\n    at ossl_ssl.c:1262\n#6  0x00007fffef9c9fcb in ossl_ssl_connect (self=43990800) at ossl_ssl.c:1302\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Some methods in string should not use the same algorithm for multibye and singlebye character",
                "body": "After revewing some code in string.rb. I found some method, like delete, mix the multibye and singlebye together. It will leads some problem obscure. Here is an example:\n\nIn rbx-2.2.6:\n[3] pry(main)> a = '我 love you'\n=> \"我 love you\"\n[4] pry(main)> a.delete '戒'\n=> \"\\x91 love you\"\n\nIn ruby-2.1.1\n a = '我 love you'\n=> \"我 love you\"\n[2] pry(main)> a.delete '戒'\n=> \"我 love you\"\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "tr and tr_s do not have consistent results with MRI in some situation, and sometimes they will be broken.",
                "body": "- Inconsistent result\n\n```\nMRI, 2.1.1\n[13] pry(main)> 'abc'.tr_s('^c','我')\n=> \"我c\"\n\nrbx-2.2.6\n[40] pry(main)> 'abc'.tr_s('^c','我')\n=> \"\\xE6c\"\n```\n- Crash\n\n```\nMRI, 2.2.1\n[2] pry(main)> '我abc'.tr_s('我b','我')\n=> \"我a我c\"\n\nrbx-2.2.6\npry(main)> '我abc'.tr_s('我b','我')\nNoMethodError: undefined method `>=' on nil:NilClass.\nfrom kernel/delta/kernel.rb:78:in `>= (method_missing)'\n```\n- But i found MRI did have some bugs. Check the following example\n\n```\n[14] pry(main)> 'abc'.tr('^c','我')\n=> \"\\u0011\\u0011c\"\n[15] pry(main)> 'abc'.tr_s('^c','我')\n=> \"我c\"\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "SIGSEGV",
                "body": "```\n$ ruby --version\nrubinius 2.2.6 (2.1.0 68d916a5 2014-03-10 JI) [x86_64-linux-gnu]\n```\n\nhttps://gist.github.com/anonymous/701ea4731abc5f5dd874\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Return from eigenclass does not unroll properly",
                "body": "When an eigenclass body appears in a method, returns from that body should return from the method.\n\n```\nsystem ~/projects/jruby $ rvm rbx-2.1.1 do ruby -e 'def foo; p 1; class << self; return; p 2; end; p 3; end; foo'\n1\n3\n\nsystem ~/projects/jruby $ rvm ruby-2.1.1 do ruby -e 'def foo; p 1; class << self; return; p 2; end; p 3; end; foo'\n1\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Crash on external command and puma",
                "body": "rbx is crashing, consistently, at 2 places in my rails app. One is when Paperclip is used, and the other is when ffmpeg is used. It would appear that they are both crashing when an external command (ImagMagick or ffmpeg) is called. Unfortunately, I'm not seeing much of a backtrace. The weird thing is, from console, and running locally on my machine, both of those work just fine.\n\nhttps://gist.github.com/anonymous/961047875d2c564dca50\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "invalid parsing errors when opening csv file",
                "body": "I'm having problems parsing certain CSV files via rubinius. The files appear to be perfectly normal, and can be parsed using MRI-2.0.0-p353, MRI 1.9.3-p484, MRI 1.8.7-p371. This file complains that \"Unquoted fields do not allow \\r or \\n (line 6932). (CSV::MalformedCSVError)\"\n\nerror and stack trace:\n\n```\nAn exception occurred running cbsa.rb:\n\n    Unquoted fields do not allow \\r or \\n (line 6932). (CSV::MalformedCSVError)\n\nBacktrace:\n\n              { } in CSV#shift at .rvm/rubies/rbx-2.2.6/gems/gems\n                                  /rubysl-csv-2.0.2/lib/rubysl\n                                  /csv/csv.rb:1850\n                     Array#each at kernel/bootstrap/array.rb:66\n              { } in CSV#shift at .rvm/rubies/rbx-2.2.6/gems/gems\n                                  /rubysl-csv-2.0.2/lib/rubysl\n                                  /csv/csv.rb:1815\n               Kernel(CSV)#loop at kernel/common/kernel.rb:460\n                     CSV#shift at .rvm/rubies/rbx-2.2.6/gems/gems\n                                  /rubysl-csv-2.0.2/lib/rubysl\n                                  /csv/csv.rb:1775\n                      CSV#each at .rvm/rubies/rbx-2.2.6/gems/gems\n                                  /rubysl-csv-2.0.2/lib/rubysl\n                                  /csv/csv.rb:1717\n            { } in CSV.foreach at .rvm/rubies/rbx-2.2.6/gems/gems\n                                  /rubysl-csv-2.0.2/lib/rubysl\n                                  /csv/csv.rb:1121\n                      CSV.open at .rvm/rubies/rbx-2.2.6/gems/gems\n                                  /rubysl-csv-2.0.2/lib/rubysl\n                                  /csv/csv.rb:1267\n                   CSV.foreach at .rvm/rubies/rbx-2.2.6/gems/gems\n                                  /rubysl-csv-2.0.2/lib/rubysl\n                                  /csv/csv.rb:1120\n              Object#__script__ at cbsa.rb:2\n Rubinius::CodeLoader#load_script at kernel/delta\n                                     /code_loader.rb:66\n Rubinius::CodeLoader.load_script at kernel/delta\n                                     /code_loader.rb:152\n        Rubinius::Loader#script at kernel/loader.rb:649\n          Rubinius::Loader#main at kernel/loader.rb:831\n```\n## Steps to Reproduce\n\ncreate file cbsa.rb\n\n```\nrequire 'csv'\ndata = CSV.foreach('./cbsa.csv') do |datum|\nend\n```\n\nthen:\n\n```\nrvm use rbx-2.2.6\nwget \"https://drive.google.com/uc?id=0B02zQBsLI7H9aVNBOTMyckxmMlk\" -O cbsa.csv\nruby cbsa.rb\n```\n## Meta\n\n```\njw@logopolis:~$ rbx -v\nrubinius 2.2.6 (2.1.0 68d916a5 2014-03-10 JI) [x86_64-linux-gnu]\n\njw@logopolis:~$ uname -a\nLinux logopolis 3.2.0-40-generic #64-Ubuntu SMP Mon Mar 25 21:22:10 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux\n\njw@logopolis:~$ rvm -v\nrvm 1.25.0 (master) by Wayne E. Seguin <wayneeseguin@gmail.com>, Michal Papis <mpapis@gmail.com> [https://rvm.io/]\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "RBX uses 2.7G of RSS vs. MRI's 128M",
                "body": "I am debugging memory growth in a Celluloid/Redis system, and have written this small test.  Surely I am doing something wrong, because RBX's VmRSS (linux) grows to ~2.7GB while MRI 2.1.1p76 hovers ~130MB.\n\nI would appreciate any advice or help on further debugging.  I'm thinking to investigate with valgrind, though I have not used it before.\n\nBelow, the test program, gems, compiled stats from `/proc/<pid>/status` files captured every 10s.\n\nAside, I asked a similar question in the celluloid/celluloid-redis#15 project as well, as I'm seeing quite varying memory growth between redis drivers.  Related to that, I've done rbx heap dumps which, comparing them using the `heap-dump` tool, do not show this memory growth is in Ruby objects.  [Here is a gist](https://gist.github.com/richardkmichael/dd183c8cbaf4b6d530f1) with the RBX heap dump analysis output (and most of the info below as well).\n\n``` ruby\nrequire 'redis'\nrequire 'hiredis'\nrequire 'celluloid'\nrequire 'celluloid/redis'\nrequire 'celluloid/autostart'\n\nclass Leaky\n  include Celluloid\n\n  attr_reader :driver, :redis\n\n  def initialize\n    @driver = :celluloid\n    # @driver = :hiredis\n\n    # @redis = ::Redis.new url: 'redis://localhost:6379', driver: @driver\n    @redis = ::Redis.new path: '/tmp/redis.sock',       driver: @driver\n\n    @publish_count = 0\n  end\n\n  def publish\n    @redis.publish \"test\", @publish_count += 1\n  end\nend\n\nrequire 'optparse'\noption_parser = OptionParser.new do |opts|\n  opts.on('-n X', Integer) { |v| $number_of_iterations = v }\n  opts.on('-s X', Float)   { |v| $sleep_time = v }\nend\noption_parser.parse ARGV\n\nleaky = Leaky.new\n\n$number_of_iterations.times do\n  leaky.publish\n  sleep $sleep_time if $sleep_time\nend\n```\n\n```\nGems included by the bundle:\n  * bundler (1.5.3)\n  * celluloid (0.16.0.pre c71cc18)\n  * celluloid-io (0.15.0)\n  * celluloid-redis (0.0.2 4c6e978)\n  * coderay (1.1.0)\n  * connection_pool (2.0.0)\n  * hiredis (0.4.5)\n  * hitimes (1.2.1)\n  * method_source (0.8.2)\n  * nio4r (1.0.0)\n  * pry (0.10.0.pre 651b154)\n  * redis (3.0.7)\n  * slop (3.5.0)\n  * timers (2.0.0)\n```\n\n```\n$ bundle exec ruby leaky_only.rb\nRuby: ruby 2.1.1p76 (2014-02-24 revision 45161) [x86_64-linux]\nPublishing 10000000 times on #<Redis client v3.0.7 for redis:///tmp/redis.sock/0>, using the\ncelluloid driver.\n(Confirm loaded Redis drivers: [Redis::Connection::Ruby, Redis::Connection::Celluloid])\n\nD, [2014-03-28T12:00:01.067335 #4745] DEBUG -- : Terminating 5 actors...\n\n\nINFO: CLI pid 4745 stats\n\n Duration\n      630s (2014-03-28 11:49:33.204756631 -0400 to 2014-03-28 11:59:53.299789996 -0400)\n\n VmPeak\n      Start : 625176 kB\n      Finish: 627028 kB\n      Delta : 1852 kB\n      Delta/min: 120\n\n VmRSS\n      Start : 26992 kB\n      Finish: 128396 kB\n      Delta : 101404 kB\n      Delta/min: 9600\n\n Threads\n      Start : 7\n      Finish: 7\n      Delta: 0\n\n\n\n\n$ bundle exec ruby leaky_only.rb\nRuby: rubinius 2.2.6 (2.1.0 68d916a5 2014-03-10 JI) [x86_64-linux-gnu]\nPublishing 10000000 times on #<Redis client v3.0.7 for redis:///tmp/redis.sock/0>, using the\ncelluloid driver.\n(Confirm loaded Redis drivers: [Redis::Connection::Ruby, Redis::Connection::Celluloid])\n\nD, [2014-03-28T12:18:05.629466 #12482] DEBUG -- : Terminating 5 actors...\n\n\nINFO: CLI pid 12482 stats\n\n Duration\n      700s (2014-03-28 12:06:34.816978850 -0400 to 2014-03-28 12:18:04.928656695 -0400)\n\n VmPeak\n      Start : 946192 kB\n      Finish: 3543664 kB\n      Delta : 2597472 kB\n      Delta/min: 222600\n\n VmRSS\n      Start : 62856 kB\n      Finish: 2709652 kB\n      Delta : 2646796 kB\n      Delta/min: 226860\n\n Threads\n      Start : 11\n      Finish: 11\n      Delta: 0\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Potential performance issue with C++/Ruby glue code?",
                "body": "I started doing a rewrite a the IO and File classes using FFI to wrap the syscalls. I quickly discovered that the FFI code, with equivalent error checking and locking, was far faster than the same code in C++. \n\nI am attaching two time profiler runs from Apple's Instruments which show the differences. To my eye, it just looks like the FFI code has way less of the interpreter to deal with. As we all know, \"no code\" is the fastest code.\n\nThe FFI IO & File can be found in my fork at https://github.com/chuckremes/rubinius\n\nThe runs are in a gist here: https://gist.github.com/chuckremes/6009174b2094d9f6a1f2\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Segmentation fault on Linux x64",
                "body": "Running a Celluloid system on `rbx-2.2.6`, today I received [this crash](https://gist.github.com/richardkmichael/2178080951025c915ec1).\n\nHowever, running the same code a second time works, so I'm not sure how to duplicate. :-(  Thought I'd report regardless, in case it's meaningful.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Low performance for a Hello World in Puma",
                "body": "Mostly as a joke I put together a basic Ruby vs Node benchmark using the classic \"Hello world\" benchmark (the best benchmark). It can be found at https://gist.github.com/YorickPeterse/9555037.\n\nAll jokes aside, the relatively low performance of Rubinius Git compared to the other Rubies is interesting to say the least. I was expected it to be much closer to JRuby than it really is.\n\nTo measure what was really going on I modified the `start_ruby.sh` script so that it looks like the following:\n\n``` bash\n#!/usr/bin/env bash\n\necho 'Ruby version:'\n\nruby --version\n\nexport RACK_ENV=none\nexport RBXOPT='-Xprofile -Xprofiler.output=/tmp/profile.txt'\n\npuma -e none -p 9292 -t 64:128\n```\n\nI then benchmarked the example using:\n\n```\nsiege -c 10 -b -t 5s http://localhost:9292\n```\n\nThe profiler output can be found here: https://gist.github.com/YorickPeterse/f68420ecbe213fe6d27b\n\nI'll do some digging around to see what we can do to improve performance here. \n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Random crash when using rbx",
                "body": "**The Rubinius version (rbx -v)**\n`rubinius 2.2.5 (2.1.0 e543ba32 2014-02-08 JI) [x86_64-linux-gnu]`\n\n**Your OS (uname -a)**\n`Linux debian 3.2.0-4-amd64 #1 SMP Debian 3.2.54-2 x86_64 GNU/Linux`\n\n**Stack trace (preferably as a gist, since they're easier to read)**\nhttps://gist.github.com/anonymous/a9ec1a86db95fbdf0a12\n\nUnfortunately, I cannot reproduce this issue.  It happened on the second time I ran my ruby code, and hasn't happened since.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Unable to complete simple Base64 benchmark",
                "body": "Was using a small script to compare ruby20, ruby21, and rubinius (CPU/GC) performance when I noticed that rubinius is not able to complete a single loop without getting stuck. It comest to a crawl, 100% CPU usage with very little useful work done (possibly stuck doing GC operations?).\nCode pasted below: ---------------\n\n``` ruby\nrequire 'benchmark'\nrequire 'base64'\n\nREPS = 1000\nPOOL = ('A'..'z').to_a\ndef noise(max)\n  (0...max).map { POOL[rand(42)] }.join\nend\n\nputs 'making dataset'\nsmall  = noise(10_000)\nmedium = noise(100_000)\nlarge  = noise(1_000_000)\n\n0.upto(4) {\n  puts '--------------------------------------------------------------------'\n  puts 'encode64'\n  Benchmark.bm do |b|\n    b.report(\"small: \") { 0.upto(REPS) { Base64.encode64(small) } }\n    b.report(\"medium: \") { 0.upto(REPS) { Base64.encode64(medium) } }\n    b.report(\"large: \") { 0.upto(REPS) { Base64.encode64(large) } }\n  end\n\n  small_encoded  = Base64.encode64(small)\n  medium_encoded = Base64.encode64(medium)\n  large_encoded  = Base64.encode64(large)\n\n  puts '--------------------------------------------------------------------'\n  puts 'decode64'\n  Benchmark.bm do |b|\n    b.report(\"small: \") { 0.upto(REPS) { Base64.decode64(small_encoded) } }\n    b.report(\"medium: \") { 0.upto(REPS) { Base64.decode64(medium_encoded) } }\n    b.report(\"large: \") { 0.upto(REPS) { Base64.decode64(large_encoded) } }\n  end\n\n  puts '--------------------------------------------------------------------'\n  puts 'strict_encode'\n  Benchmark.bm do |b|\n    b.report(\"small: \") { 0.upto(REPS) { Base64.strict_encode64(small) } }\n    b.report(\"medium: \") { 0.upto(REPS) { Base64.strict_encode64(medium) } }\n    b.report(\"large: \") { 0.upto(REPS) { Base64.strict_encode64(large) } }\n  end\n\n  small_encoded  = Base64.strict_encode64(small)\n  medium_encoded = Base64.strict_encode64(medium)\n  large_encoded  = Base64.strict_encode64(large)\n\n  puts '--------------------------------------------------------------------'\n  puts 'strict_decode'\n  Benchmark.bm do |b|\n    b.report(\"small: \") { 0.upto(REPS) { Base64.strict_decode64(small_encoded) } }\n    b.report(\"medium: \") { 0.upto(REPS) { Base64.strict_decode64(medium_encoded) } }\n    b.report(\"large: \") { 0.upto(REPS) { Base64.strict_decode64(large_encoded) } }\n  end\n\n  puts '--------------------------------------------------------------------'\n  puts 'urlsafe_encode'\n  Benchmark.bm do |b|\n    b.report(\"small: \") { 0.upto(REPS) { Base64.urlsafe_encode64(small) } }\n    b.report(\"medium: \") { 0.upto(REPS) { Base64.urlsafe_encode64(medium) } }\n    b.report(\"large: \") { 0.upto(REPS) { Base64.urlsafe_encode64(large) } }\n  end\n\n  small_encoded  = Base64.urlsafe_encode64(small)\n  medium_encoded = Base64.urlsafe_encode64(medium)\n  large_encoded  = Base64.urlsafe_encode64(large)\n\n  puts '--------------------------------------------------------------------'\n  puts 'urlsafe_decode'\n  Benchmark.bm do |b|\n    b.report(\"small: \") { 0.upto(REPS) { Base64.urlsafe_decode64(small_encoded) } }\n    b.report(\"medium: \") { 0.upto(REPS) { Base64.urlsafe_decode64(medium_encoded) } }\n    b.report(\"large: \") { 0.upto(REPS) { Base64.urlsafe_decode64(large_encoded) } }\n  end\n  puts '--------------------------------------------------------------------'\n }\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "gem install couchbase raises error",
                "body": "When I'm trying to install couchbase gem I get the following error\nhttps://gist.github.com/weemanjz/4ab4c2a33adf7b1a0c32\n\nrubinius 2.2.5 (2.1.0 e543ba32 2014-02-08 JI) [x86_64-linux-gnu]\nLinux debian 3.2.0-4-amd64 #1 SMP Debian 3.2.54-2 x86_64 GNU/Linux\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Move verify_build_signature/RedCard checks into a task",
                "body": "Having the `verify_build_signature or $cleaning` and `RedCard.check` in the top-level of the Rakefile makes debugging broken/outdated builds a pain. I had to manually remove these checks just to run `rake -T` and `rake -P`. Instead, these should be moved into a `check` task.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "File.writable? does not consider extended ACL",
                "body": "Steps to reproduce:\n\n``` bash\nsetfacl -R -m u:`whoami`:rwX /opt/rubies/rbx-2.2.5/gems\n```\n\n``` ruby\nFile.writable?('/opt/rubies/rbx-2.2.5/gems') # => false, while MRI returns true.\n```\n\nVersions:\n- rubinius 2.2.5 (2.1.0 e543ba32 2014-02-08 JI) [x86_64-linux-gnu]\n- Debian 7.4 amd64\n\nI use `setfactl` to grant users in `rubygems` group write ability to rubygems directories. This issue makes bundler believe I do not have writable access and ask sudo password every time.\n\nIf people are busy with other issues, I can try to look into this when I am free (probably several weeks later).\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Debugger doesn't seem to work with the JIT",
                "body": "I'm trying out the Rubinius debugger, but I can't seem to get it set a breakpoint on a method that has already been compiled. They do work before the method is compiled.\n\nExpected behaviour is that the breakpoints would work on compiled code, and presumably the compiled code would be deoptimized when I install the breakpoint.\n\nThis is with v2.2.4, Mac, x86_64.\n\nTake this test file, `test.rb`.\n\n```\nrequire 'rubinius/debugger'\n\ndef foo\n  a = 1\n  b = 2\n  c = 3\nend\n\n10_000_000.times do\n  foo\nend\n\nRubinius::Debugger.start\n\n10_000_000.times do\n  foo\nend\n```\n\nRun it and set a breakpoint on line 5. The breakpoint doesn't seem to work.\n\n```\n$ rubinius/bin/ruby test.rb\n\n| Breakpoint: Object#__script__ at test.rb:13 (38)\n| 13: Rubinius::Debugger.start\ndebug> b Object#foo:5\n| Set breakpoint 1: test.rb:5 (+4)\ndebug> c\n$\n```\n\nPerhaps it's the JIT - try it with JIT disabled.\n\n```\n$ rubinius/bin/ruby -Xint test.rb \n\n| Breakpoint: Object#__script__ at test.rb:13 (38)\n| 13: Rubinius::Debugger.start\ndebug> b Object#foo:5\n| Set breakpoint 1: test.rb:5 (+4)\ndebug> c\n\n| Breakpoint: Object#foo at test.rb:5 (4)\n| 5:   b = 2\ndebug> exit\n$\n```\n\nNow it works.\n\nWe can also make it work by not running enough iterations to provoke the JIT -\nchange 10_000_000 to 1.\n\n```\n$ rubinius/bin/ruby test.rb \n\n| Breakpoint: Object#__script__ at test.rb:13 (37)\n| 13: Rubinius::Debugger.start\ndebug> b Object#foo:5\n| Set breakpoint 1: test.rb:5 (+4)\ndebug> c\n\n| Breakpoint: Object#foo at test.rb:5 (4)\n| 5:   b = 2\ndebug> exit\n$\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "The binding behaviour with respect to local variables is inconsistent with MRI",
                "body": "The code.\n\n``` ruby\nbindings = [binding, binding, binding, binding]\nbindings.each_with_index { |bind, idx| bind.eval(\"x = #{ idx }\") }\nputs 'Output:'\np bindings.map { |bind| bind.eval('x') }\n```\n\nLet's run that code.\n#### Rubinius 2.2.5\n\n```\nrubinius 2.2.5 (2.1.0 e543ba32 2014-02-08 JI) [x86_64-linux-gnu]\n```\n\n```\nOutput:\n[3, 3, 3, 3]\n```\n#### MRI 1.8.7\n\n```\nruby 1.8.7 (2013-06-27 patchlevel 374) [x86_64-linux]\n```\n\n```\nOutput:\n[3, 3, 3, 3]\n```\n#### MRI 1.9.3 and greater\n\n```\nOutput:\n[0, 1, 2, 3]\n```\n\nPersonally, I find the current Rubinius' behaviour understandable. Each different binding object references to the same scope it was created in. However, I don't have much knowledge or MRI's and Rubinius' internals, so I have no idea what led them to do this. I consider this a bug, though.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Getting `Rubinius::ToolSet::Runtime::CompileError` from some of rspec-expectations files",
                "body": "For RSpec's travis builds we've started getting `Rubinius::ToolSet::Runtime::CompileError` errors for some files from rspec-expectations.  It's inconsistent, though; originally it happened once or twice and appeared to be purely transient because the build would pass on retry, but now it's happening much more consistently.\n\nNote that it varies which file in rspec-expectations triggers the compile error; for example, in [this build](https://travis-ci.org/rspec/rspec-core/jobs/18589997#L325) it's [match.rb](https://github.com/rspec/rspec-expectations/blob/b5afcfbcfb0ca3ddefee1d469aa246ac7125a620/lib/rspec/matchers/built_in/match.rb) but in [this build](https://travis-ci.org/rspec/rspec-core/jobs/18588991#L356) it's [contain_exactly.rb](https://github.com/rspec/rspec-expectations/blob/b5afcfbcfb0ca3ddefee1d469aa246ac7125a620/lib/rspec/matchers/built_in/contain_exactly.rb).\n\nThese files are [loaded lazily via autoload](https://github.com/rspec/rspec-expectations/blob/b5afcfbcfb0ca3ddefee1d469aa246ac7125a620/lib/rspec/matchers/built_in.rb) so the failure happens the first time the named matcher is used.  After that, the constant remains undefined so the build gets \"Missing or uninitialized constant: ...\" `NameError`s for any later use of the matcher that failed to compile.\n\nFor both of these specific build failure examples, travis reports this rubinius version:\n\n```\nrubinius 2.2.5 (2.1.0 e543ba32 2014-02-08 JI) [x86_64-linux-gnu]\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "gem install error on rbx-2.2.5",
                "body": "$`ruby -wdS gem install haml`\n\n``` bash\nException: `LoadError' kernel/common/code_loader.rb:431 - no such file to load -- rubygems/defaults/operating_system\nException: `NoMethodError' /home/mpapis/.rvm/rubies/rbx-2.2.5/site/rubygems/config_file.rb:63 - undefined method `sysconfdir' on Etc (Module)\nException: `LoadError' kernel/common/code_loader.rb:431 - no such file to load -- Win32API\nException: `LoadError' kernel/common/code_loader.rb:431 - no such file to load -- Win32API\nException: `NameError' /home/mpapis/.rvm/rubies/rbx-2.2.5/site/rubygems/config_file.rb:325 - Missing or uninitialized constant: Gem::ConfigFile::Psych\nException: `Gem::LoadError' /home/mpapis/.rvm/rubies/rbx-2.2.5/site/rubygems/dependency.rb:309 - Could not find 'psych' (>= 1.2.1, ~> 1.2) among 103 total gem(s)\nException: `LoadError' kernel/common/code_loader.rb:431 - no such file to load -- psych\nException: `LoadError' kernel/common/code_loader.rb:431 - no such file to load -- psych\nException: `LoadError' kernel/common/code_loader.rb:431 - no such file to load -- psych\nException: `LoadError' kernel/common/code_loader.rb:431 - no such file to load -- psych\nException: `NameError' kernel/bootstrap/array.rb:66 - method `yaml_as' not defined in Module\nException: `NameError' kernel/common/module.rb:347 - undefined method `to_yaml_properties' for Object\nException: `NameError' /home/mpapis/.rvm/rubies/rbx-2.2.5/site/rubygems/syck_hack.rb:20 - Missing or uninitialized constant: Syck::Syck\nException: `NameError' kernel/bootstrap/array.rb:66 - method `to_s' not defined in Syck::DefaultKey\nException: `LoadError' kernel/common/code_loader.rb:431 - no such file to load -- etc.so\nException: `LoadError' kernel/common/code_loader.rb:431 - no such file to load -- etc.so\nException: `NoMethodError' kernel/common/type.rb:24 - undefined method `to_str' on spec:Symbol.\nException: `TypeError' kernel/common/type.rb:19 - Coercion error: :spec.to_str => String failed\nException: `NoMethodError' kernel/common/type.rb:24 - undefined method `to_str' on path:Symbol.\nException: `TypeError' kernel/common/type.rb:19 - Coercion error: :path.to_str => String failed\nException: `NoMethodError' kernel/common/type.rb:24 - undefined method `to_str' on value:Symbol.\nException: `TypeError' kernel/common/type.rb:19 - Coercion error: :value.to_str => String failed\nException: `NoMethodError' kernel/common/type.rb:24 - undefined method `to_str' on needed:Symbol.\nException: `TypeError' kernel/common/type.rb:19 - Coercion error: :needed.to_str => String failed\nException: `Resolv::ResolvTimeout' /home/mpapis/.rvm/rubies/rbx-2.2.5/gems/gems/rubysl-resolv-2.0.0/lib/rubysl/resolv/resolv.rb:521 - Resolv::ResolvTimeout\nException: `Errno::EINVAL' /home/mpapis/.rvm/rubies/rbx-2.2.5/gems/gems/rubysl-socket-2.0.1/lib/rubysl/socket.rb:1321 - Invalid argument - connect(2)\nERROR:  While executing gem ... (Errno::EINVAL)\n    Invalid argument - connect(2)\n        kernel/common/errno.rb:17:in `handle'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/gems/gems/rubysl-socket-2.0.1/lib/rubysl/socket.rb:1321:in `connect'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/gems/gems/rubysl-socket-2.0.1/lib/rubysl/socket.rb:1328:in `send'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/gems/gems/rubysl-resolv-2.0.0/lib/rubysl/resolv/resolv.rb:768:in `send'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/gems/gems/rubysl-resolv-2.0.0/lib/rubysl/resolv/resolv.rb:662:in `request'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/gems/gems/rubysl-resolv-2.0.0/lib/rubysl/resolv/resolv.rb:521:in `each_resource'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/gems/gems/rubysl-resolv-2.0.0/lib/rubysl/resolv/resolv.rb:1055:in `resolv'\n        kernel/bootstrap/array.rb:66:in `each'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/gems/gems/rubysl-resolv-2.0.0/lib/rubysl/resolv/resolv.rb:1053:in `resolv'\n        kernel/bootstrap/array.rb:66:in `each'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/gems/gems/rubysl-resolv-2.0.0/lib/rubysl/resolv/resolv.rb:1052:in `resolv'\n        kernel/bootstrap/array.rb:66:in `each'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/gems/gems/rubysl-resolv-2.0.0/lib/rubysl/resolv/resolv.rb:1050:in `resolv'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/gems/gems/rubysl-resolv-2.0.0/lib/rubysl/resolv/resolv.rb:513:in `each_resource'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/gems/gems/rubysl-resolv-2.0.0/lib/rubysl/resolv/resolv.rb:490:in `getresource'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/site/rubygems/remote_fetcher.rb:88:in `api_endpoint'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/site/rubygems/source.rb:42:in `api_uri'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/site/rubygems/source.rb:170:in `load_specs'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/site/rubygems/spec_fetcher.rb:266:in `tuples_for'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/site/rubygems/spec_fetcher.rb:226:in `available_specs'\n        kernel/bootstrap/array.rb:66:in `each'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/site/rubygems/source_list.rb:97:in `each_source'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/site/rubygems/spec_fetcher.rb:222:in `available_specs'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/site/rubygems/spec_fetcher.rb:102:in `search_for_dependency'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/site/rubygems/dependency_installer.rb:216:in `find_gems_with_sources'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/site/rubygems/dependency_installer.rb:292:in `find_spec_by_name_and_version'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/site/rubygems/dependency_installer.rb:166:in `available_set_for'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/site/rubygems/dependency_installer.rb:418:in `resolve_dependencies'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/site/rubygems/dependency_installer.rb:371:in `install'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/site/rubygems/commands/install_command.rb:219:in `install_gem'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/site/rubygems/commands/install_command.rb:263:in `install_gems'\n        kernel/bootstrap/array.rb:66:in `each'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/site/rubygems/commands/install_command.rb:259:in `install_gems'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/site/rubygems/commands/install_command.rb:171:in `execute'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/site/rubygems/command.rb:305:in `invoke_with_build_args'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/site/rubygems/command_manager.rb:167:in `process_args'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/site/rubygems/command_manager.rb:137:in `run'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/site/rubygems/gem_runner.rb:54:in `run'\n        /home/mpapis/.rvm/rubies/rbx-2.2.5/library/bin/gem.rb:21:in `__script__'\n        kernel/delta/code_loader.rb:66:in `load_script'\n        kernel/delta/code_loader.rb:152:in `load_script'\n        kernel/loader.rb:649:in `script'\n        kernel/loader.rb:831:in `main'\nException: `Gem::SystemExitException' /home/mpapis/.rvm/rubies/rbx-2.2.5/site/rubygems/user_interaction.rb:158 - Exiting RubyGems with exit_code 1\nException: `SystemExit' kernel/common/kernel.rb:265 - SystemExit\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Hash lookup sometimes fails with Thread objects.",
                "body": "I was writing a small connection pool and I came across a bug when using threads as hash keys. I tried a bit and couldn't reproduce this outside of my spec suite, so I made a branch to demonstrate it:\n\nhttps://github.com/chanks/pond/tree/rbx_bug\n\nHere's an example of the behavior I'm seeing. Note that it took two tries, it doesn't always show up the first time. I also started stepping through the logic in Hash#find_item to see where it broke down, but I haven't studied the internals of Hash enough to see what the actual problem is.\n\n```\nchris@lovelace ~/pond $ ruby -v\nrubinius 2.2.4 (2.1.0 fd07f670 2014-02-01 JI) [x86_64-linux-gnu]\nchris@lovelace ~/pond $ rake\n/home/chris/.rvm/rubies/rbx-2.2.4/bin/rbx -S rspec ./spec/pond_spec.rb\n......................................................................................................................................................................................................................................................................................................\nFrom: /home/chris/pond/spec/pond_spec.rb @ line 146 :\n\n    141: \n    142:       hash = pond.allocated\n    143: \n    144:       unless hash.empty?\n    145:         require 'pry'\n => 146:         binding.pry\n    147:       end\n    148: \n    149:       pond.size.should == 4\n    150:       results.should == (1..4).cycle(4).to_a\n    151:     end\n\n[1] pry(#<RSpec::Core::ExampleGroup::Nested_1>)> hash\n=> {#<Thread:0x1a158 id=4599 dead>=>4}\n[2] pry(#<RSpec::Core::ExampleGroup::Nested_1>)> t = hash.keys.first\n=> #<Thread:0x1a158 id=4599 dead>\n[3] pry(#<RSpec::Core::ExampleGroup::Nested_1>)> hash.delete(t)\n=> 4\n[4] pry(#<RSpec::Core::ExampleGroup::Nested_1>)> exit\nnFrom: /home/chris/pond/spec/pond_spec.rb @ line 146 :\n\n    141: \n    142:       hash = pond.allocated\n    143: \n    144:       unless hash.empty?\n    145:         require 'pry'\n => 146:         binding.pry\n    147:       end\n    148: \n    149:       pond.size.should == 4\n    150:       results.should == (1..4).cycle(4).to_a\n    151:     end\n\n[1] pry(#<RSpec::Core::ExampleGroup::Nested_1>)> hash\n=> {#<Thread:0x3132c id=15562 dead>=>3}\n[2] pry(#<RSpec::Core::ExampleGroup::Nested_1>)> t = hash.keys.first\n=> #<Thread:0x3132c id=15562 dead>\n[3] pry(#<RSpec::Core::ExampleGroup::Nested_1>)> hash.delete(t)\n=> nil\n[4] pry(#<RSpec::Core::ExampleGroup::Nested_1>)> hash\n=> {#<Thread:0x3132c id=15562 dead>=>3}\n[5] pry(#<RSpec::Core::ExampleGroup::Nested_1>)> key_hash = t.hash\n=> 201516\n[6] pry(#<RSpec::Core::ExampleGroup::Nested_1>)> entries = hash.send(:instance_variable_get, :@entries)\n=> #<Rubinius::Tuple: #<Hash::Bucket:0x32fac @link=nil @next=nil @state=#<Hash::State:0x32fb0 @tail=#<Hash::Bucket:0x32fac ...> @compare_by_identity=false @head=#<Hash::Bucket:0x32fac ...>> @value=3 @previous=nil @key=#<Thread:0x3132c id=15562 dead> @key_hash=0>, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil>\n[7] pry(#<RSpec::Core::ExampleGroup::Nested_1>)> key_index = hash.send(:key_index, key_hash)\n=> 12\n[8] pry(#<RSpec::Core::ExampleGroup::Nested_1>)> entries[key_index]\n=> nil\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "[imap ] unknown token - \"K\"",
                "body": "Hi,\n\nI have successfully install [rubinus](http://rubini.us) on my system :\n- Rubinius : `rubinius 2.2.4 (2.1.0 fd07f670 2014-02-01 JI) [x86_64-linux-gnu]`\n- OS : `Fedora 20 x86_64`\n- RVM/Rbenv : `without`\n- Rbx_Path : `/opt/rbx/bin`\n\nI hava a basic script fetching my email (**gmail** powered), and it crash after\n\n``` ruby\nimap = Net::IMAP.new('imap.googlemail.com', 993, usessl = true, certs = nil, verify = false)\n```\n\nThe stack is \n\n``` ruby\nAn exception occurred running ./sms_sync.rb:\n\n    unknown token - \"K\" (Net::IMAP::ResponseParseError)\n\nBacktrace:\n\n        Net::IMAP::ResponseParser#parse_error at /opt/rbx/gems/gems/rubysl-net-imap-2.0.1/lib/rubysl/net/imap/imap.rb:3362\n         Net::IMAP::ResponseParser#next_token at /opt/rbx/gems/gems/rubysl-net-imap-2.0.1/lib/rubysl/net/imap/imap.rb:3279\n          Net::IMAP::ResponseParser#lookahead at /opt/rbx/gems/gems/rubysl-net-imap-2.0.1/lib/rubysl/net/imap/imap.rb:3224\n              Net::IMAP::ResponseParser#match at /opt/rbx/gems/gems/rubysl-net-imap-2.0.1/lib/rubysl/net/imap/imap.rb:3212\n      Net::IMAP::ResponseParser#text_response at /opt/rbx/gems/gems/rubysl-net-imap-2.0.1/lib/rubysl/net/imap/imap.rb:2720\n  Net::IMAP::ResponseParser#response_untagged at /opt/rbx/gems/gems/rubysl-net-imap-2.0.1/lib/rubysl/net/imap/imap.rb:2176\n           Net::IMAP::ResponseParser#response at /opt/rbx/gems/gems/rubysl-net-imap-2.0.1/lib/rubysl/net/imap/imap.rb:2132\n              Net::IMAP::ResponseParser#parse at /opt/rbx/gems/gems/rubysl-net-imap-2.0.1/lib/rubysl/net/imap/imap.rb:2058\n                       Net::IMAP#get_response at /opt/rbx/gems/gems/rubysl-net-imap-2.0.1/lib/rubysl/net/imap/imap.rb:1181\n                         Net::IMAP#initialize at /opt/rbx/gems/gems/rubysl-net-imap-2.0.1/lib/rubysl/net/imap/imap.rb:1062\n                            Object#__script__ at sms_sync.rb:23\n             Rubinius::CodeLoader#load_script at kernel/delta/code_loader.rb:66\n             Rubinius::CodeLoader.load_script at kernel/delta/code_loader.rb:140\n                      Rubinius::Loader#script at kernel/loader.rb:649\n                        Rubinius::Loader#main at kernel/loader.rb:831\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "undefined method `handle_interrupt' on Thread (Class)",
                "body": "Should the following work?\n\n``` bash\n$ ruby -v\nrubinius 2.2.3 (2.1.0 4792e746 2013-12-29 JI) [x86_64-linux-gnu]\n$ rbenv --version\nrbenv 0.4.0-89-g14bc162\n$ uname -a\nLinux myitcv-virtual-machine 3.11.0-15-generic #23-Ubuntu SMP Mon Dec 9 18:17:04 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux\n```\n\n``` ruby\n# Gemfile\nsource \"https://rubygems.org\"\ngem 'rubysl'\n```\n\n``` ruby\n# repro.rb\nrequire 'sync'\n\nclass MyHash < ::Hash\n  include Sync_m\n\n  def keys\n    sync_synchronize(:SH){ super }\n  end\nend\n\nh = MyHash.new\nputs h.keys\n```\n\nproduces the following:\n\n``` bash\n$ bundle install\n$ ruby repro.rb\nAn exception occurred running repro.rb:\n\n    undefined method `handle_interrupt' on Thread (Class) (NoMethodError)\n\nBacktrace:\n\n  Kernel(Class)#handle_interrupt (method_missing) at kernel/delta/kernel.rb:78\n                  Sync_m(MyHash)#sync_synchronize at /home/myitcv/.rbenv/versions/rbx-2.2.3/gems/gems/rubysl-sync-2.0.0/lib/rubysl/sync/sync.rb:230\n                                      MyHash#keys at repro.rb:7\n                                Object#__script__ at repro.rb:12\n                 Rubinius::CodeLoader#load_script at kernel/delta/code_loader.rb:66\n                 Rubinius::CodeLoader.load_script at kernel/delta/code_loader.rb:201\n                          Rubinius::Loader#script at kernel/loader.rb:649\n                            Rubinius::Loader#main at kernel/loader.rb:831\n\n```\n\nAnything I'm doing wrong here? \n\nOr any other suggestions for how to achieve a thread-safe hash?\n\nThanks in advance\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "support building with mingw64?",
                "body": "",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "[security] Build-time RPATH in gems' .so",
                "body": "Shared object libraries installed with gems include RPATH with build-time path. This is wrong and has security implications. Example using Rubinius built on 1.1.2014 from the `/tmp/rubinius` directory and installed to `/opt/rubinius_2014010100`:\n\n```\n$ readelf -d /opt/rubinius_2014010100/gems/gems/rubysl-openssl-2.0.5/lib/openssl/openssl.so | fgrep RPATH\n 0x000000000000000f (RPATH)              Library rpath: [/tmp/rubinius/staging/lib:/usr/pkg/lib]\n```\n\nThe path `/tmp/rubinius/staging/lib` should not be there (the path `/usr/pkg/lib` is correct).\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Support the ARM architecture",
                "body": "Rubinius would benefit from being the go-to solution for high-performance Ruby on ARM devices.\n\nI discussed this matter with @brixen and @YorickPeterse on IRC.  They mentioned that the main blocker is the JIT (and possibly memory management), which would require some nontrivial changes.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "close_on_exec flags on child process",
                "body": "when using puma in clustered mode (i.e. it forks a child) if that child process has a Process.span, popen, system or (backtick) call when that sub process of the child exists, it appears some file descriptors are inheriting and being closed resulting in non deterministic behaviour. Its behaving differeently than MRI 2.1.0 \n\ntest case to see effect\n1. stub any rails app\n2. start rails using puma -w 1 (starts 1 worker process)\n3. any action can be called with a `ps -ef` or something similiar\n4. run as rbx .. worker process has its comm pipe to the parent closed, thinking it died.\n5. run as mri and it works as expected.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Rubinius skips calling `respond_to_missing?` in some circumstances",
                "body": "```\n$ ruby -v\nrubinius 2.2.1 (2.1.0 3ed43137 2013-11-17 JI) [x86_64-darwin12.5.0]\n```\n\nWe're getting a build failure from rubinius for rspec-expectations for something that passes for all the other rubies we build against (MRI 1.8.7 - 2.1.0-preview2, JRuby in 1.8 and 1.9 mode and REE).  I spent a while this morning trying to isolate it to a standalone script.  I didn't quite get there but I've got an rspec-expectations branch that   has easy repro steps to trigger the failure:\n- Clone rspec-expectations\n- `bundle install`\n- Checkout the [rubinius-failure](https://github.com/rspec/rspec-expectations/tree/rubinius-failure) branch\n- Run `bundle exec rspec spec/rspec/matchers/legacy_spec.rb -fp --seed 42356`. You'll get the failure (with some logging output I added):\n\n```\nRun options: include {:focused=>true}\n\nAll examples were filtered out; ignoring {:focused=>true}\n..#<RSpec::Expectations::LegacyMacherAdapter::RSpec2:0x1b8c0>.respond_to?(:does_not_match) = false\nF\n\nFailures:\n\n  1) Legacy matchers written using the RSpec 2.x `failure_message_for_should` and `failure_message_for_should_not` protocol behaves like a matcher written against a legacy protocol when matched negatively calls `does_not_match?` if it is defined on the matcher\n     Failure/Error: expect(called).to be true\n\n       expected true\n            got #<FalseClass:10> => false\n     Shared Example Group: \"a matcher written against a legacy protocol\" called from ./spec/rspec/matchers/legacy_spec.rb:45\n     # ./lib/rspec/expectations/fail_with.rb:32:in `fail_with'\n     # ./lib/rspec/expectations/handler.rb:38:in `handle_failure'\n     # ./lib/rspec/expectations/handler.rb:49:in `handle_matcher'\n     # ./lib/rspec/expectations/expectation_target.rb:29:in `to'\n     # ./spec/rspec/matchers/legacy_spec.rb:33:in `__script__'\n```\n- Run `bundle exec rspec spec/rspec/matchers/legacy_spec.rb:25 -fp --seed 42356` (to isolate the run to just the failing spec).  Notice that it passes:\n\n```\nRun options: include {:locations=>{\"./spec/rspec/matchers/legacy_spec.rb\"=>[25]}}\nrespond_to_missing?(does_not_match?)\n#<RSpec::Expectations::LegacyMacherAdapter::RSpec2:0x1b830>.respond_to?(:does_not_match) = true\n.\n\nFinished in 0.00767 seconds\n1 example, 0 failures\n\nRandomized with seed 42356\n```\n\nNotice that in this case `respond_to_missing?` is being called ([logged here](https://github.com/rspec/rspec-expectations/blob/rubinius-failure/lib/rspec/matchers/matcher_delegator.rb#L19)), but in the first place it's not.  Rubinius appears to wrongly cache something that causes it to not check `respond_to_missing?` when it should.\n\nLet me know if you need anything else.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "pry-remote client fails",
                "body": "Trying to run pry-remote to inspect a process running under pow results in the error:\n\n   allocator undefined for Thread (TypeError)  \n\nfull stack trace:  https://gist.github.com/hassan/0ae6e7e9bf5b125e54fe\n\nMRI client works as expected.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Intermittent segfault when running tests on rbx-2.2.1",
                "body": "We're seeing occasional segfaults when running the test suites for the newrelic_rpm gem against rbx-2.2.1. They don't happen every time (or even most of the time).\n\nI unfortunately don't have a reliable reproduction case yet, but here's an example stack trace:\nhttps://gist.github.com/anonymous/50931a5aeee668acd219\n\nI'll update here with more info if I figure out how to reproduce this.\n\n```\n$ rbx -v\nrubinius 2.2.1 (2.1.0 3ed43137 2013-11-17 JI) [x86_64-linux-gnu]\n$ uname -a\nLinux <hostname redacted> 2.6.32-279.el6.x86_64 #1 SMP Fri Jun 22 12:19:21 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Date#mon is slow",
                "body": "Date#mon is 20 times slower in rubinius 2.2.1 than mri 2.1.0\n\nThis seems to be the main reason that bm_cal.rb is 7 times slower in rubinius than mri.\n\ntest code:  ( date is diddled to avoid apparent memoization)\n\n``` ruby\nrequire 'date'\n\nfi = Date.new(1926,6,1)\n\n800_000.times do |i|\n  (fi + i%2).mon\nend\n```\n\nSemi-Fancy ips style benchmark exercising mon and other accessors to follow in forthcoming PR.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Signals not handled when main thread executes join",
                "body": "I noticed that when creating multiple threads that Rubinius was not terminating my script when i pressed `ctrl-c`.  The following is a simple script that demonstrates the problem:\n\n```\nSignal.trap(\"SIGINT\") do\n  puts \"Caught SIGINT\"\n  exit\nend\n\ndef func \n  while true do\n    sleep(0.1)\n    puts \"Thread running\"\n  end\nend\n\nt = Thread.new{ func() }\nt.join\n```\n\nWhen running this script with MRI, typing `ctlr-c` causes the program to exit with the message `Caught SIGINT`.  But when run with Rubinius the script ignores `ctrl-c` and the rbx process has to be killed to terminate the program. Note that the signal handler and the printing are not necessary, I only added them to check why the process seemed hung.  The following also has the same problem:\n\n```\nt = Thread.new{ while true do sleep(0.1) end }\nt.join\n```\n\nAnd the problem is related to `join` because the following correctly catches and terminates the script when `ctrl-c` is typed:\n\n```\nt = Thread.new{ while true do sleep(0.1) end }\nwhile true do sleep(0.1) end\n```\n\nI tested when building from head on the master branch while running with Ubuntu 12.04.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Bignum#& is slow",
                "body": "Bignum#& is 6 times slower in rubinius than in mri.\n\nThis counts for approximately 75 percent of the relative slowness in\n  bm_meteor_contest.rb which itself is 2.8 times slower in rubinius\n  than in mri.\n\ntest code:\n\n  a = 123456790123456789012345678901234567890\n\n  16_000_000.times do\n     b = a & 27\n  end\n\ntimings:\n\nRubinius 2.2.1:\nreal    0m10.306s\nuser    0m10.372s\nsys 0m0.102s\n\nRuby 2.1.0-preview1\nreal    0m2.359s\nuser    0m2.328s\nsys 0m0.012s\n\nam working on semi-fancy benchmark/ips version for forthcoming pull request\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "String#[]= is slow",
                "body": "String#[]= is 3 times slower in rubinius than in mri 2.1.0.preview1            \n\nIt is approx 40 percent of the problem with the bm_word_anagrams.rb benchmark\n  which is 3 times slower in rubinius than mri\n\ntest code:\n\n7_000_000.times do\n  s = \"abcdefghijk\"\n  s[5] = \"x\"\nend\n\nTimings:\n\nrubinius 2.2.1\nreal    0m9.811s\nuser    0m10.204s\nsys 0m0.103s\n\nruby 2.1.0.preview1\nreal    0m2.910s\nuser    0m2.878s\nsys 0m0.012s\n\nrubinius style benchmark: https://gist.github.com/kwleland/7988659\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "\"include\" does not behave the same in rubinius as in MRI or JRuby",
                "body": "If you include a module then attempt to modify a class from the included module, you must specify the modules namespace or a new class is created instead of modifying the modules class.  For example, if the following code was in a file named \"mymod.rb\":\n\n<pre><code>\nmodule TestMod\n   class SupportClass\n      def print_modclass_method\n         puts \"This is from the module's class method\"\n      end\n   end\nend\n</code></pre>\n\nThen \"require\" the file and include the \"TestMod\" namespace as follows:\n\n<pre><code>\nrequire './mymod.rb'\ninclude TestMod\n\nclass TestMod::SupportClass  # This line works in rubinius\n#class SupportClass  # This line does NOT work in rubinius, but does in jruby and mri\n\n   def print_should_add\n      puts \"This is from the dynamically added method\"\n   end\nend\n\nSupportClass.new.print_should_add\nSupportClass.new.print_modclass_method\n</code></pre>\n\nAs noted, the commented out line does not work in rubinius, but it will work properly in JRuby and MRI.  What it appears to do is create a new class which shadows the TestMod::SupportClass.  Therefore the call to \"print_modclass_method\" fails because it does not exist in \"SupportClass\".\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "NoMethodError: undefined method `[]' on nil:NilClass.",
                "body": "I have done some test, and found a strange error. Here is my code\n\n[25] pry(main)> a = \"11111\"\n=> \"11111\"\n[26] pry(main)> a.size.times { |i| a[i] }\n=> 5\n\nIt looks ok, \n\n[37] pry(main)> 10_000.times { a.size.times { |i| a[i] } }\n=> 10000\n\nIt also looks ok,but\n\n[38] pry(main)> 100_000.times { a.size.times { |i| a[i] } }\nNoMethodError: undefined method `[]' on nil:NilClass.\nfrom kernel/delta/kernel.rb:78:in`[](method_missing)'\n\nwhat happened?\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "String#scan is slow",
                "body": "String#scan is 3 times slower than MRI and is the cause weak performance (3x slower) on the bm_norvig_spelling.rb benchmark.\n\n  text = File.new('holmes.txt').read.downcase  \n  #holmes.txt available from norvig's website\n\n  100.times do\n    a = text.scan(/[a-z]+/)\n  end\n\nTimings:\n\nrbx-2.2.1\n\nreal    0m19.131s\nuser    0m19.066s\nsys 0m0.894s\n\nruby-2.1.0-preview1\n\nreal    0m6.260s\nuser    0m5.847s\nsys 0m0.146s\n\nProfiler (just around the 100.times block)\n\nThread 1: total running time: 152.02466238300002s\n\n%   cumulative   self                self     total\n      time   seconds   seconds      calls  ms/call  ms/call  name\n       ------------------------------------------------------------\n       31.44  152.02     47.80        100   478.03  1520.23  String#scan\n       12.46   43.32     18.94   10818600     0.00     0.00  MatchData#ÆÅ\n       10.97   22.23     16.68   10818600     0.00     0.00  MatchData#matched_area\n        8.56   15.53     13.02   10818600     0.00     0.00  MatchData#collapsing?\n        6.16    9.66      9.37   10818700     0.00     0.00  Regexp#search_region\n        6.12    9.30      9.30       2460     3.78     3.78  GC.collect_young\n        5.89   10.92      8.96   10818600     0.00     0.00  MatchData#length\n        4.28   16.17      6.51   10818700     0.00     0.00  Regexp#match_from\n        3.56    7.95      5.42   10818600     0.00     0.00  Array#<<\n        2.03    3.40      3.09   10818600     0.00     0.00  String#byteslice\n        1.47    2.53      2.23   10818600     0.00     0.00  Array#set_index\n        1.42    3.06      2.16   32455800     0.00     0.00  Rubinius::Tuple#at\n        1.42    3.07      2.16   32455800     0.00     0.00  Fixnum#==\n        0.96    2.07      1.46   21637200     0.00     0.00  Rubinius::Tuple#ÆÅ\n        0.72    1.40      1.10   10818600     0.00     0.00  MatchData#full\n        0.62    1.26      0.95   10818600     0.00     0.00  Rubinius::Tuple#fields\n        0.48    1.05      0.73   10818600     0.00     0.00  Fixnum#<=\n        0.47    1.02      0.72   10818600     0.00     0.00  Fixnum.===\n        0.47    1.02      0.72   10818600     0.00     0.00  Fixnum#-\n        0.47    1.01      0.71   10818700     0.00     0.00  Fixnum#+\n        0.01    0.01      0.01         36     0.40     0.40  GC.collect_mature\n        0.00  152.02      0.00          1     0.62 152024.36  Integer#times\n        0.00  152.02      0.00        100     0.00  1520.24  Object::**script**<6> æå\n        0.00  152.02      0.00          1     0.03 152024.39  Object::**script**<5> æå\n\n   24 methods called a total of 248,830,798 times\n\nA little experiment where I called Regexp#search_region 10818700 times walking through the string 4 chars at a time and resetting as appropriate, took around 5 seconds in Rubinius. So the primitive is apparently around 25 percent of the total time.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Segfault in racc 1.4.10 with Rails 4.0.2",
                "body": "https://gist.github.com/brixen/7845825\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "IO#read without args on a socket should return ASCII-8BIT string",
                "body": "external_encoding on sockets seem to always be ASCII-8BIT on MRI\nsockets are special somehow (but IMHO, all IO should be ASCII-8BIT\non *nix).\n\nrequire 'socket'\na, b = UNIXSocket.pair\np a.external_encoding\np b.external_encoding\nb.close\ns = a.read\np s.encoding\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "BigDecimal is too slow (need benchmark)",
                "body": "I was trying BigDecimal in many different ruby implementations, and noted that bigdecimal in rubinius is many times slower than MRI and jRuby.\n\nThe benchmark I'm using is the one at this question on stackoverflow:\n\nhttp://stackoverflow.com/questions/8514167/float-vs-decimal-in-activerecord\n\nI would like to ask if porting this benchmark, following the instructions here: http://rubini.us/doc/en/how-to/write-benchmarks/ will be useful for the project?\n\nHere are my specs:\n\nrubinius 2.1.1.n301 (2.1.0 4892d3f5 2013-10-28 JI) [x86_64-darwin13.0.0]\n\nand these are the results for \"BigDecimal\":\n\n```\n 30.243971   0.207703  30.451674 ( 30.686957)\n```\n\nfloat:\n\n```\n  2.819188   0.017359   2.836547 (  2.857857)\n```\n\nthe MRI version:\nruby 2.0.0p247 (2013-06-27 revision 41674) [x86_64-darwin12.4.0]\n\nBigDecimal:\n\n```\n  6.820000   0.070000   6.890000 (  6.915909)\n```\n\nfloat:\n\n```\n  0.780000   0.000000   0.780000 (  0.785991) \n```\n\nand finally jRuby:\njruby 1.7.5 (1.9.3p392) 2013-10-07 74e9291 on Java HotSpot(TM) 64-Bit Server VM 1.7.0_40-b43 [darwin-x86_64]\n\nBigDecimal:\n\n```\n  1.810000   0.040000   1.850000 (  1.827000)\n```\n\nfloat:\n\n```\n  0.800000   0.030000   0.830000 (  0.823000)\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Some failures when running the mspecs on OpenBSD",
                "body": "rbx -v\n\n```\nrubinius 2.1.1 (2.1.0 be67ed17 2013-10-18 JI) [i386-openbsd]\n```\n\nRunning the mspecs on OpenBSD i386 yields the following near the end\n\n```\n2156 files, 19039 examples, 148844 expectations, 22 failures, 0 errors\n```\n\nSee https://gist.github.com/jeremyevans/7145471 for a list of the errors output.\n\nAlso, I had to skip the File.open FIFO test as that was causing the tests to halt.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "RSpec / Rails: Slow startup/run times.",
                "body": "I **really** want to use Rubinius. However, I'm having a hard time dealing with the extremely slow process boot times. Particularly when running tests.\n\nFor example, under Ruby 2.1.0-preview1 it takes about 2 seconds for my rspec/rails process to boot, and another 0.75s to run the 64 tests I have.\n\nNow, switching to RBX it takes about 30 seconds for the RSpec process to boot, and then another 7 seconds to run the tests.\n\nIs this normal?\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Global variables with local scope",
                "body": "I'm sorry if this issue has already been reported, I searched the issues but I didn't found a duplicate.\n\nThere are some ruby globals that should have local scope, like `$~` and `$_` and in rubinius they don't. Please refer to [this](http://www.rubyist.net/~slagell/ruby/globalvars.html) and [this](https://github.com/ruby/ruby/blob/trunk/doc/globals.rdoc) documents.\n\nMy setup:\n- rubinius 2.0.0 (2.1.0  2013-10-04 JI) [x86_64-darwin12.5.0]\n- rbenv 0.4.0-67-g3300587\n\n[This gist](https://gist.github.com/patriciomacadden/557be4c83247c136269f) is the test case I'm using, with the output of ruby 2.0, rubinius and jruby.\n\nI would love to help, but I don't know where to start.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "IO#ensure_open_and_writable might not check writability correctly",
                "body": "As shown by this:\n\n``` ruby\nrd = IO.popen('echo test')\nwr = IO.popen('cat', 'r+')\nIO.copy_stream(rd, wr)\np wr.read(5) # => \"test\\n\" expected.\n```\n\nExecuted in oneliner:\n\n```\n$ ./bin/rbx -ve 'IO.copy_stream(IO.popen(\"echo test\"), i=IO.popen(\"cat\", \"r+\")); p i.read(5)'\nrubinius 2.0.0n282 (2.1.0 1052afac 2013-10-09 JI) [x86_64-darwin12.2.1]\nAn exception occurred evaluating command line code:\n\n    not opened for writing (IOError)\n\nBacktrace:\n\n  IO(IO::BidirectionalPipe)#ensure_open_and_writable at kernel/common/io.rb:1456\n                     IO::StreamCopier#run at kernel/common/io.rb:309\n                           IO.copy_stream at kernel/common/io.rb:347\n                 { } in Object#__script__ at -e:1\n  Rubinius::BlockEnvironment#call_on_instance at kernel/common/block_environment.rb:53\n            Kernel(Rubinius::Loader)#eval at kernel/common/eval.rb:176\n                   Rubinius::Loader#evals at kernel/loader.rb:615\n                    Rubinius::Loader#main at kernel/loader.rb:829\n```\n\nWhile MRI works as expected:\n\n```\n$ ruby -ve 'IO.copy_stream(IO.popen(\"echo test\"), i=IO.popen(\"cat\", \"r+\")); p i.read(5)'\nruby 2.0.0p247 (2013-06-27 revision 41674) [x86_64-darwin12.2.1]\n\"test\\n\"\n```\n\nSince I am not sure how to fix this for now,\nand there's a test failure in this test case:\n\"uses a trailing Hash in the Array for spawn-like settings\"\non my computer, I don't attempt to fix it for now,\nbut I could add a spec if we're going to fix this\nbefore actually fix it.\n\nThanks for looking into this.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "mysql2 related crashes when running specs",
                "body": "When running the specs of my application, the process would crash intermittently. Seems like a similar issue to https://github.com/rubinius/rubinius/issues/2655, but specific to mysql2.\n\nhttps://gist.github.com/sayap/6861102\n\nrubinius 2.0.0 (2.1.0  2013-10-04 JI) [x86_64-linux-gnu]\n\nLinux henry 3.11.1-ck1 #1 SMP PREEMPT Sun Sep 22 17:47:30 MYT 2013 x86_64 Intel(R) Core(TM) i5-2410M CPU @ 2.30GHz GenuineIntel GNU/Linux\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "assignment-in-if statement inconsistency",
                "body": "I'm on a roll these last couple weeks.\n\nIn particular, in rbx:\n\n```\ndef test\n  return foo.bar if foo = get_foo\n  #snip \nend\n```\n\nfails in MRI, but succeeds in RBX, given that `get_foo` returns something which responds to `bar` or nil. In particular, it complains that `foo` doesn't exist on MRI.\n\nI'll add a working repro script shortly.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "String delete/tr slowish compared to MRI",
                "body": "For long strings, String#delete and String#tr are about five times slower than MRI.\n\nBorrowing from Tass's benchmark from #268 , available at https://gist.github.com/agrimm/6138788\n\n```\n# Under MRI 2.0.0-p247\n# ruby 2.0.0p247 (2013-06-27 revision 41674) [x86_64-darwin11.4.2]\n# Rehearsal ----------------------------------------------------\n# delete             0.030000   0.010000   0.040000 (  0.032588)\n# tr                 0.030000   0.000000   0.030000 (  0.029961)\n# gsub with regexp   0.670000   0.000000   0.670000 (  0.670667)\n# gsub with string   0.670000   0.000000   0.670000 (  0.673313)\n# ------------------------------------------- total: 1.410000sec\n#\n# user     system      total        real\n# delete             0.040000   0.000000   0.040000 (  0.032628)\n# tr                 0.030000   0.000000   0.030000 (  0.032721)\n# gsub with regexp   0.690000   0.000000   0.690000 (  0.697010)\n# gsub with string   0.670000   0.000000   0.670000 (  0.671953)\n\n# Under rbx\n# rubinius 2.0.0.n204 (1.9.3 97416082 2013-07-23 JI) [x86_64-apple-darwin11.4.2]\n# Rehearsal ----------------------------------------------------\n# delete             0.223000   0.003194   0.226194 (  0.189438)\n# tr                 0.153779   0.000554   0.154333 (  0.154239)\n# gsub with regexp   1.289229   0.012082   1.301311 (  1.008253)\n# gsub with string   0.806960   0.006720   0.813680 (  0.809855)\n# ------------------------------------------- total: 2.495518sec\n#\n# user     system      total        real\n# delete             0.149678   0.000271   0.149949 (  0.149861)\n# tr                 0.149242   0.000271   0.149513 (  0.149397)\n# gsub with regexp   0.798716   0.006516   0.805232 (  0.801440)\n# gsub with string   0.814010   0.007074   0.821084 (  0.817623)\n```\n\nIf you profile the calling of tr! 10 times on a sequence 10_000 letters long, you get\n\n```\n===== Thread 1 =====\nTotal running time: 0.16702006s\nindex  % time     self  children         called       name\n----------------------------------------------------------\n[1]      99.9     0.00      0.17          1           SequenceCreator#target [1]\n                  0.00      0.17          1               Integer#times [2]\n-------------------------------------------------------\n                  0.00      0.17          1               SequenceCreator#target [1]\n[2]      99.8     0.00      0.17          1           Integer#times [2]\n                  0.00      0.17         10               SequenceCreator::target<27> {} [3]\n-------------------------------------------------------\n                  0.00      0.17          1               Integer#times [2]\n[3]      99.8     0.00      0.17         10           SequenceCreator::target<27> {} [3]\n                  0.00      0.17         10               String#tr! [4]\n-------------------------------------------------------\n                  0.00      0.17         10               SequenceCreator::target<27> {} [3]\n[4]      99.7     0.00      0.17         10           String#tr! [4]\n                  0.00      0.17         10               String#tr_trans [5]\n-------------------------------------------------------\n                  0.00      0.17         10               String#tr! [4]\n[5]      99.7     0.00      0.17         10           String#tr_trans [5]\n                  0.14      0.03         10               String#delete! [6]\n-------------------------------------------------------\n                  0.00      0.17         10               String#tr_trans [5]\n[6]      99.6     0.14      0.03         10           String#delete! [6]\n                  0.01      0.00     200000               Rubinius::ByteArray#[] [7]\n                  0.01      0.00     200010               Fixnum#+ [8]\n                  0.00      0.00     100000               Rubinius::ByteArray#[]= [9]\n                  0.00      0.00     100000               Fixnum#== [10]\n                  0.00      0.00     100020               Fixnum#< [11]\n-------------------------------------------------------\n                  0.14      0.03         10               String#delete! [6]\n[7]       4.7     0.01      0.00     200000           Rubinius::ByteArray#[] [7]\n-------------------------------------------------------\n                  0.14      0.03         10               String#delete! [6]\n[8]       4.6     0.01      0.00     200010           Fixnum#+ [8]\n-------------------------------------------------------\n                  0.14      0.03         10               String#delete! [6]\n[9]       2.4     0.00      0.00     100000           Rubinius::ByteArray#[]= [9]\n-------------------------------------------------------\n                  0.14      0.03         10               String#delete! [6]\n[10]      2.4     0.00      0.00     100000           Fixnum#== [10]\n-------------------------------------------------------\n                  0.14      0.03         10               String#delete! [6]\n[11]      2.2     0.00      0.00     100020           Fixnum#< [11]\n-------------------------------------------------------\n\n11 methods called a total of 0 times\n```\n\nI haven't measured the effects of this on production, but it contributes to unit tests for my project running slower in Rubinius compared to MRI.\n\nI call String#tr! in the BioRuby method Bio::Sequence::NA.new, which converts an ordinary string into an object that represents a DNA sequence.\n\nThis is pretty low priority for me, though. I'm more concerned about the correctness of implementations than their speed.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Strange typing behaviour using -n option",
                "body": "When using the -n option, global variables defined in BEGIN blocks appear to be coerced to strings by the time they're used in the main body. I found this when I ran the following, which prints '1225' on 1.8.7:\n\n```\nseq 49 | ruby -ne 'require \"English\"; BEGIN { $tot=0 }; $tot += $LAST_READ_LINE.to_i; END { print $tot }'\n```\n\nOn rbx, this results in:\n\n```\n~> seq 49 | ruby -ne 'require \"English\"; BEGIN { $tot=0 }; $tot += $LAST_READ_LINE.to_i; END { print $tot }'\n49494949494949494949494949494949494949494949494949494949494949494949494949494949494949494949494949\n```\n\nI cut out the use of $LAST_READ_LINE/$_, and found that the same happens as soon as you use -n with an input file having more than one line:\n\n```\n~> seq 2 | ruby -ne 'BEGIN { $tot = 0 }; $tot += 1; END { print $tot }'\n11\n~> echo \"hi\" | ruby -ne 'BEGIN { $tot = 0 }; $tot += 1; END { print $tot }'\n1\n~> echo \"hi\\nhi\" | ruby -ne 'BEGIN { $tot = 0 }; $tot += 1; END { print $tot }' \n11                                                                                                                                                                                                                                                                                                                                                                                                                                                                        \n```\n\nExpected (1.8.7) behaviour for reference:\n\n```\n~> seq 2 | ruby -ne 'BEGIN { $tot = 0 }; $tot += 1; END { print $tot }'\n2\n~> echo \"hi\" | ruby -ne 'BEGIN { $tot = 0 }; $tot += 1; END { print $tot }'\n1\n~> echo \"hi\\nhi\" | ruby -ne 'BEGIN { $tot = 0 }; $tot += 1; END { print $tot }' \n2\n```\n\nRelevant information per contribution guidelines:\n\n```\n~> rbx -v\nrubinius 2.0.0.rc1 (1.8.7 382a140d yyyy-mm-dd JI) [x86_64-apple-darwin12.2.1]\n~> uname -a\nDarwin igraine.local 12.2.1 Darwin Kernel Version 12.2.1: Thu Oct 18 16:32:48 PDT 2012; root:xnu-2050.20.9~2/RELEASE_X86_64 x86_64\n~> rvm version\n\nrvm 1.19.5 (master) by Wayne E. Seguin <wayneeseguin@gmail.com>, Michal Papis <mpapis@gmail.com> [https://rvm.io/]\n```\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Building Melbourne for Rubinius, fails on armv7l",
                "body": "I'm trying to build rbx-2.0.0-rc1 using `rbenv-build`\n\nMy build keeps failing when trying to build `melbourne`, here is my [full stacktrace](https://gist.github.com/martinffx/5516817/raw/78ca7b37ab920fb22e6bd10b20114ea64ff75b77/ruby-build.log).\n\nHere is the output of `lscpu`\n\n```\nArchitecture:          armv7l\nByte Order:            Little Endian\nCPU(s):                2\nOn-line CPU(s) list:   0,1\nThread(s) per core:    1\nCore(s) per socket:    2\nSocket(s):             1\n```\n\nAny idea about how to go about resolving this issue?\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Support accessing Fiber-locals and backtraces for a Fiber",
                "body": "As part of debugging @celluloid, I have been wanting to diagnose where the `Fiber`s are running and their various locals. \n\nI would expect the following to work. \n\n``` ruby\nThread.current[:key] = \"outside\"\nfiber = Fiber.new do\n  Thread.current[:key] = \"inside\"\n  Fiber.yield\nend\nfiber.resume\nfiber[:key] == \"inside\" # true\nfiber.backtrace # ...\n```\n\nI also wonder whether `Fiber#[]` should be implemented, so `Fiber.current[:key]` is possible. \n\n/cc @evanphx \n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Ensure the tests for these FFI projects pass on Rubinius",
                "body": "Here is a list of popular FFI-dependent gems. Ensure the tests for each pass on Rubinius in 1.8 and 1.9 modes.\n\n<h1>Needs help</h1>\n\n\n<table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>1.x (Ruby 1.8.7)</th>\n      <th>2.x (Ruby 2.x)</th>\n      <th>Tested?</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"http://github.com/chuckremes/ffi-rzmq\">ffi-rzmq</a></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=chuckremes&repo-name=ffi-rzmq&ruby-engine=rbx-1\" /></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=chuckremes&repo-name=ffi-rzmq&ruby-engine=rbx-2\" /></td>\n      <td><a href=\"https://travis-ci.org/chuckremes/ffi-rzmq\">Travis (o)</a></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://www.ensta.fr/~diam/ruby/online/pub/\">Gnu Linear Programming Toolkit</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=xxx&repo-name=Gnu Linear Programming Toolkit&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=xxx&repo-name=Gnu Linear Programming Toolkit&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/xxx/Gnu Linear Programming Toolkit\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/remogatto/ffi-wiiuse\">ffi-wiiuse</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=remogatto&repo-name=ffi-wiiuse&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=remogatto&repo-name=ffi-wiiuse&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/remogatto/ffi-wiiuse\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/jacius/nice-ffi/\">NiceFFI</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=jacius&repo-name=NiceFFI&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=jacius&repo-name=NiceFFI&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/jacius/NiceFFI\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/jacius/ruby-sdl-ffi/\">Ruby-SDL-FFI</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=jacius&repo-name=Ruby-SDL-FFI&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=jacius&repo-name=Ruby-SDL-FFI&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/jacius/Ruby-SDL-FFI\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://rubygame.org/\">Rubygame</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=xxx&repo-name=Rubygame&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=xxx&repo-name=Rubygame&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/xxx/Rubygame\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/remogatto/ffi-inliner\">ffi-inliner</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=remogatto&repo-name=ffi-inliner&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=remogatto&repo-name=ffi-inliner&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/remogatto/ffi-inliner\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/remogatto/ffi-opengl\">ffi-opengl</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=remogatto&repo-name=ffi-opengl&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=remogatto&repo-name=ffi-opengl&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/remogatto/ffi-opengl\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/remogatto/ffi-life\">ffi-life</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=remogatto&repo-name=ffi-life&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=remogatto&repo-name=ffi-life&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/remogatto/ffi-life\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/remogatto/ffi-tcc\">ffi-tcc</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=remogatto&repo-name=ffi-tcc&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=remogatto&repo-name=ffi-tcc&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/remogatto/ffi-tcc\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/jbarnette/johnson/tree/ffi\">Johnson FFI port</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=jbarnette&repo-name=johnson&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=jbarnette&repo-name=johnson&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/jbarnette/Johnson FFI port\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/jmettraux/rufus-tokyo\">rufus-tokyo</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=jmettraux&repo-name=rufus-tokyo&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=jmettraux&repo-name=rufus-tokyo&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/jmettraux/rufus-tokyo\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/manveru/ffi-tk\">ffi-tk</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=manveru&repo-name=ffi-tk&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=manveru&repo-name=ffi-tk&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/manveru/ffi-tk\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/mvz/ruby-gir-ffi\">GirFFI</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=mvz&repo-name=girffi&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=mvz&repo-name=girffi&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/mvz/GirFFI\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/splattael/libnotify\">libnotify</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=splattael&repo-name=libnotify&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=splattael&repo-name=libnotify&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/splattael/libnotify\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/tlossen/spread_client\">spread_client</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=tlossen&repo-name=spread_client&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=tlossen&repo-name=spread_client&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/tlossen/spread_client\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/shawn42/chipmunk-ffi\">chipmunk-ffi</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=shawn42&repo-name=chipmunk-ffi&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=shawn42&repo-name=chipmunk-ffi&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/shawn42/chipmunk-ffi\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/galdor/ffi-allegro\">ffi-allegro</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=galdor&repo-name=ffi-allegro&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=galdor&repo-name=ffi-allegro&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/galdor/ffi-allegro\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/arvicco/win\">Win</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=arvicco&repo-name=win&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=arvicco&repo-name=win&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/arvicco/win\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/sophsec/ffi-udis86\">ffi-udis86</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=sophsec&repo-name=ffi-udis86&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=sophsec&repo-name=ffi-udis86&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/sophsec/ffi-udis86\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/jvoorhis/ruby-llvm\">ruby-llvm</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=jvoorhis&repo-name=ruby-llvm&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=jvoorhis&repo-name=ruby-llvm&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/jvoorhis/ruby-llvm\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/jvoorhis/ruby-portaudio\">ruby-portaudio</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=jvoorhis&repo-name=ruby-portaudio&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=jvoorhis&repo-name=ruby-portaudio&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/jvoorhis/ruby-portaudio\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/homonecloco/samtools-ruby\">samtools-ruby</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=homonecloco&repo-name=samtools-ruby&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=homonecloco&repo-name=samtools-ruby&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/homonecloco/samtools-ruby\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/timfel/simple_krb5\">simple_krb5</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=timfel&repo-name=simple_krb5&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=timfel&repo-name=simple_krb5&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/timfel/simple_krb5\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/morellon/rrd-ffi\">rrd-ffi</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=morellon&repo-name=rrd-ffi&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=morellon&repo-name=rrd-ffi&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--?<!--<a href=\"https://travis-ci.org/morellon/rrd-ffi\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/v01d/ruby-gsl-ng\">ruby-gsl-ng</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=v01d&repo-name=ruby-gsl-ng&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=v01d&repo-name=ruby-gsl-ng&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/v01d/ruby-gsl-ng\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/sophsec/ffi-pcap\">ffi-pcap</a></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=sophsec&repo-name=ffi-pcap&ruby-engine=rbx-1\" /></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=sophsec&repo-name=ffi-pcap&ruby-engine=rbx-2\" /></td>\n      <td><a href=\"https://travis-ci.org/sophsec/ffi-pcap\">Travis (o)</a></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/postmodern/ffi-libc\">ffi-libc</a></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=postmodern&repo-name=ffi-libc&ruby-engine=rbx-1\" /></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=postmodern&repo-name=ffi-libc&ruby-engine=rbx-2\" /></td>\n      <td><a href=\"https://travis-ci.org/postmodern/ffi-libc\">Travis (o)</a></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/postmodern/ffi-msgpack\">ffi-msgpack</a></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=postmodern&repo-name=ffi-msgpack&ruby-engine=rbx-1\" /></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=postmodern&repo-name=ffi-msgpack&ruby-engine=rbx-2\" /></td>\n      <td><a href=\"https://travis-ci.org/postmodern/ffi-msgpack\">Travis (o)</a></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/bendiken/rdf-raptor\">RDF::Raptor</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=bendiken&repo-name=rdf-raptor&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=bendiken&repo-name=rdf-raptor&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/bendiken/rdf-raptor\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/robgleeson/dia\">Dia</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=robgleeson&repo-name=dia&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=robgleeson&repo-name=dia&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/robgleeson/Dia\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"https://github.com/postmodern/ffi-hunspell\">ffi-hunspell</a></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=postmodern&repo-name=ffi-hunspell&ruby-engine=rbx-1\" /></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=postmodern&repo-name=ffi-hunspell&ruby-engine=rbx-2\" /></td>\n      <td><a href=\"https://travis-ci.org/postmodern/ffi-hunspell\">Travis (o)</a></td>\n    </tr>\n    <tr>\n      <td><a href=\"https://github.com/xman/sgc-ruby-cuda\">sgc-ruby-cuda</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=xman&repo-name=sgc-ruby-cuda&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=xman&repo-name=sgc-ruby-cuda&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/xman/sgc-ruby-cuda\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"https://github.com/saepia/libjack-ffi-ruby\">libjack-ffi-ruby</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=saepia&repo-name=libjack-ffi-ruby&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=saepia&repo-name=libjack-ffi-ruby&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/saepia/libjack-ffi-ruby\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"https://github.com/saepia/pulseaudio-ffi-ruby\">pulseaudio-ffi-ruby</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=saepia&repo-name=pulseaudio-ffi-ruby&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=saepia&repo-name=pulseaudio-ffi-ruby&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/saepia/pulseaudio-ffi-ruby\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"https://github.com/zenchild/gssapi\">gssapi</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=zenchild&repo-name=gssapi&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=zenchild&repo-name=gssapi&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/zenchild/gssapi\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"https://github.com/costan/smartcard\">smartcard</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=costan&repo-name=smartcard&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=costan&repo-name=smartcard&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/costan/smartcard\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"https://github.com/Burgestrand/spotify\">spotify</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=Burgestrand&repo-name=spotify&ruby-engine=rbx-1\" />--></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=Burgestrand&repo-name=spotify&ruby-engine=rbx-2\" /></td>\n      <td>?<!--<a href=\"https://travis-ci.org/Burgestrand/spotify\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/arirusso/alsa-rawmidi\">alsa-rawmidi</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=arirusso&repo-name=alsa-rawmidi&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=arirusso&repo-name=alsa-rawmidi&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/arirusso/alsa-rawmidi\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/arirusso/midi-winmm\">midi-winmm</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=arirusso&repo-name=midi-winmm&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=arirusso&repo-name=midi-winmm&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/arirusso/midi-winmm\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/arirusso/ffi-coremidi\">ffi-coremidi</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=arirusso&repo-name=ffi-coremidi&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=arirusso&repo-name=ffi-coremidi&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/arirusso/ffi-coremidi\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/tduehr/ragweed\">ragweed</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=tduehr&repo-name=ragweed&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=tduehr&repo-name=ragweed&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/tduehr/ragweed\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/meh/ruby-x11\">x11</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=meh&repo-name=x11&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=meh&repo-name=x11&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/meh/x11\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"https://github.com/halostatue/rubypython\">rubypython</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=xxx&repo-name=rubypython&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=xxx&repo-name=rubypython&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/xxx/rubypython\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"https://github.com/flipback/ruby-player\">ruby-player</a></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=flipback&repo-name=ruby-player&ruby-engine=rbx-1\" /></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=flipback&repo-name=ruby-player&ruby-engine=rbx-2\" /></td>\n      <td><a href=\"https://travis-ci.org/flipback/ruby-player\">Travis (o)</a></td>\n    </tr>\n    <tr>\n      <td><a href=\"https://github.com/mydoghasworms/nwrfc\">SAP Netweaver RFC SDK</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=mydoghasworms&repo-name=nwrfc&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=mydoghasworms&repo-name=nwrfc&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/mydoghasworms/nwrfc\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"https://github.com/larskanis/libusb\">libusb</a></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=larskanis&repo-name=libusb&ruby-engine=rbx-1\" /></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=larskanis&repo-name=libusb&ruby-engine=rbx-2\" /></td>\n      <td><a href=\"https://travis-ci.org/larskanis/libusb\">Travis (o)</a></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/amarburg/opencv-ffi\">OpenCV-FFI</a></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=amarburg&repo-name=opencv-ffi&ruby-engine=rbx-1\" /></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=amarburg&repo-name=opencv-ffi&ruby-engine=rbx-2\" /></td>\n      <td><a href=\"https://travis-ci.org/amarburg/opencv-ffi\">Travis (o)</a></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/amarburg/opencv-ffi-ext\">OpenCV-FFI-Ext</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=amarburg&repo-name=opencv-ffi-ext&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=amarburg&repo-name=opencv-ffi-ext&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/amarburg/opencv-ffi-ext\">Travis (o)</a>--></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/amarburg/opencv-ffi-fast\">OpenCV-FFI-FAST</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=amarburg&repo-name=opencv-ffi-fast&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=amarburg&repo-name=opencv-ffi-fast&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/amarburg/opencv-ffi-fast\">Travis (o)</a>--></td>\n    </tr>\n\n    <tr>\n      <td><a href=\"http://github.com/dark-panda/ffi-geos\">GEOS</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=dark-panda&repo-name=ffi-geos&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=dark-panda&repo-name=ffi-geos&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/dark-panda/ffi-geos\">Travis (o)</a>--></td>\n    </tr>\n\n    <tr>\n      <td><a href=\"http://github.com/dark-panda/ffi-geos\">Ruby/GD2 interface</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=dark-panda&repo-name=gd2-ffij&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=dark-panda&repo-name=gd2-ffij&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/dark-panda/gd2-ffij\">Travis (o)</a>--></td>\n    </tr>\n\n    <tr>\n      <td><a href=\"http://github.com/dark-panda/ffi-proj4\">PROJ.4 Cartographic Projections</a></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=dark-panda&repo-name=ffi-proj4&ruby-engine=rbx-1\" />--></td>\n      <td>?<!--<img src=\"https://travis-build-status.herokuapp.com/?owner-name=dark-panda&repo-name=ffi-proj4&ruby-engine=rbx-2\" />--></td>\n      <td>?<!--<a href=\"https://travis-ci.org/dark-panda/ffi-proj4\">Travis (o)</a>--></td>\n    </tr>\n  </tbody>\n</table>\n\n\n_Note_: `Travis (o)` means the owner of the repo is testing on Travis (official) and `Travis (u)` means it's unofficial (one of us set it up)\n\nWe can add to this list as well.\n\nSome of these may already pass, but we should verify them all.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Ensure the tests for these C-exts pass on Rubinius",
                "body": "Here is a list of popular C-ext gems. Ensure the tests for each pass on Rubinius in 1.x and 2.x branches.\n\n<h1>Needs help</h1>\n\n\n<table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>1.x (Ruby 1.8.7)</th>\n      <th>2.x (Ruby 2.x)</th>\n      <th>Tested?</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://github.com/flori/json\">JSON</a></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=flori&repo-name=json&ruby-engine=rbx-1\" /></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=flori&repo-name=json&ruby-engine=rbx-2\" /></td>\n      <td><a href=\"https://travis-ci.org/flori/json\">Travis (o)</a></td>\n    </tr>\n    <tr>\n      <td><a href=\"https://github.com/cowboyd/therubyracer\">therubyracer</a></td>\n    <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=cowboyd&repo-name=therubyracer&ruby-engine=rbx-1\" /></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=cowboyd&repo-name=therubyracer&ruby-engine=rbx-2\" /></td>\n      <td><a href=\"https://travis-ci.org/cowboyd/therubyracer\">Travis (o)</a></td>\n    </tr>\n    <tr>\n      <td><a href=\"\">fast-xs</a></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=brianmario&repo-name=fast_xs&ruby-engine=rbx-1\" /></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=brianmario&repo-name=fast_xs&ruby-engine=rbx-2\" /></td>\n      <td><a href=\"https://travis-ci.org/brianmario/fast_xs\">Travis (o)</a></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/luislavena/sqlite3-ruby\">sqlite3-ruby</a></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=luislavena&repo-name=sqlite3-ruby&ruby-engine=rbx-1\" /></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=luislavena&repo-name=sqlite3-ruby&ruby-engine=rbx-2\" /></td>\n      <td><a href=\"https://travis-ci.org/luislavena/sqlite3-ruby\">Travis (o)</a></td>\n    </tr>\n    <tr>\n      <td><a href=\"https://github.com/slyphon/zookeeper\">zookeeper</a></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=slyphon&repo-name=zookeeper&ruby-engine=rbx-1\" /></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=slyphon&repo-name=zookeeper&ruby-engine=rbx-2\" /></td>\n      <td><a href=\"https://travis-ci.org/slyphon/zookeeper\">Travis (o)</a></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/thoughtbot/capybara-webkit\">capybara-webkit</a></td>\n      <td>x[3]</td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=thoughtbot&repo-name=capybara-webkit&ruby-engine=rbx-2\" /></td>\n      <td><a href=\"https://travis-ci.org/thoughtbot/capybara-webkit\">Travis (o)</a></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://rubyeventmachine.com/\">EventMachine</a></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=eventmachine&repo-name=eventmachine&ruby-engine=rbx-1\" /></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=eventmachine&repo-name=eventmachine&ruby-engine=rbx-2\" /></td>\n      <td><a href=\"https://travis-ci.org/eventmachine/eventmachine\">Travis (o)</a></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://unicorn.bogomips.org/\">Unicorn</a></td>\n      <td><a href=\"https://gist.github.com/4070179\">-</a></td>\n      <td><a href=\"https://gist.github.com/4070223\">-</a></td>\n      <td><a href=\"#\">Local</a> [1]</td>\n    </tr>\n    <tr>\n      <td><a href=\"http://raindrops.bogomips.org/\">raindrops</a></td>\n      <td>?</td>\n      <td>?</td>\n      <td>?</td>\n    </tr>\n    <tr>\n      <td><a href=\"http://rainbows.rubyforge.org/\">rainbows</a></td>\n      <td>?</td>\n      <td>?</td>\n      <td>?</td>\n    </tr>\n    <tr>\n      <td><a href=\"http://bogomips.org/kgio/\">kgio</a></td>\n      <td>?</td>\n      <td>?</td>\n      <td>?</td>\n    </tr>\n    <tr>\n      <td><a href=\"http://code.macournoyer.com/thin/\">thin</a>[5]</td>\n      <td>?</td>\n      <td>?</td>\n      <td><a href=\"https://travis-ci.org/macournoyer/thin\">Travis (o)</a></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/brianmario/mysql2\">mysql2</a></td>\n      <td>+</td>\n      <td>+</td>\n      <td><a href=\"https://github.com/rubinius/rubinius/issues/2006#issuecomment-16284362\">Local</a></td>\n    </tr>\n    <tr>\n      <td><a href=\"https://bitbucket.org/ged/ruby-pg\">pg</a></td>\n      <td>+</td>\n      <td>+</td>\n      <td><a href=\"https://github.com/rubinius/rubinius/issues/2006#issuecomment-16284362\">Local</a></td>\n    </tr>\n    <tr>\n      <td><a href=\"https://github.com/vmg/redcarpet\">RedCarpet</a></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=vmg&repo-name=redcarpet&ruby-engine=rbx-2\" /></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=vmg&repo-name=redcarpet&ruby-engine=rbx-2\" /></td>\n      <td><a href=\"https://github.com/rubinius/rubinius/issues/2006#issuecomment-10384064\">Travis (o)</td>\n    </tr>\n    <tr>\n      <td><a href=\"https://github.com/sparklemotion/nokogiri\">nokogiri</a></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=sparklemotion&repo-name=nokogiri&ruby-engine=rbx-1\" /></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=sparklemotion&repo-name=nokogiri&ruby-engine=rbx-2\" /></td>\n      <td><a href=\"https://travis-ci.org/sparklemotion/nokogiri\">Travis (o)</a></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/brianmario/yajl-ruby\">yajl-ruby</a></td>\n     <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=brianmario&repo-name=yajl-ruby&ruby-engine=rbx-1\" /></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=brianmario&repo-name=yajl-ruby&ruby-engine=rbx-2\" /></td>\n      <td><a href=\"https://travis-ci.org/brianmario/yajl-ruby\">Travis (o)</a></td>\n    </tr>\n    <tr>\n      <td><a href=\"https://github.com/libgit2/rugged\">rugged</a></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=libgit2&repo-name=rugged&ruby-engine=rbx-1\" /></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=libgit2&repo-name=rugged&ruby-engine=rbx-2\" /></td>\n      <td><a href=\"https://travis-ci.org/libgit2/rugged\">Travis (o)</a></td>\n    </tr>\n    <tr>\n      <td><a href=\"https://github.com/djberg96/sys-proctable\">sys-proctable</a></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=jc00ke&repo-name=sys-proctable&ruby-engine=rbx-1\" /></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=jc00ke&repo-name=sys-proctable&ruby-engine=rbx-2\" /></td>\n      <td><a href=\"https://travis-ci.org/jc00ke/sys-proctable\">Travis (u)</a></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/codahale/bcrypt-ruby\">bcrypt-ruby</a></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=codahale&repo-name=bcrypt-ruby&ruby-engine=rbx-1&x=1\" /></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=codahale&repo-name=bcrypt-ruby&ruby-engine=rbx-2\" /></td>\n      <td><a href=\"https://travis-ci.org/codahale/bcrypt-ruby\">Travis (o)</a></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/hpricot/hpricot\">hpricot</a></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=hpricot&repo-name=hpricot&ruby-engine=rbx-1\" /></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=hpricot&repo-name=hpricot&ruby-engine=rbx-2\" /></td>\n      <td><a href=\"https://travis-ci.org/hpricot/hpricot\">Travis (o)</a></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://github.com/blackwinter/rb-gsl\">rb-gsl</a></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=blackwinter&repo-name=rb-gsl&ruby-engine=rbx-1\" /></td>\n      <td><img src=\"https://travis-build-status.herokuapp.com/?owner-name=blackwinter&repo-name=rb-gsl&ruby-engine=rbx-2\" /></td>\n      <td><a href=\"https://travis-ci.org/blackwinter/rb-gsl\">Travis (o)</a></td>\n    </tr>\n  </tbody>\n</table>\n\n\n_Note_: `Travis (o)` means the owner of the repo is testing on Travis (official) and `Travis (u)` means it's unofficial (one of us set it up)\n[1] @kungfumike's findings\n[2] vmg/redcarpet#172\n[3] They don't test 1.8.x so we won't either.\n[4] Locally I get an `undefined method 'spawn' on Kernel` https://gist.github.com/4145191\n[5] rbx has been added to the `.travis.yml` but the tests aren't running on Travis. Some issue w/Travis.\n\nWe can add to this list as well.\n\nSome of these may already pass, but we should verify them all.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "Missing concurrency primitives",
                "body": "I'm implementing a thread safe hash-like [`ThreadSafe::Cache`](https://github.com/thedarkone/thread_safe/blob/cache/lib/thread_safe/cache.rb) data structure that is internally used by Rails 4.0: https://github.com/rails/rails/pull/8510.\n\nThe current [rbx implementation](https://github.com/headius/thread_safe/blob/master/lib/thread_safe/atomic_reference_cache_backend.rb) is based on wrapping everything in `Rubinius::AtomicReference`, as you can imagine - this is not terribly efficient.\n\nWhat is needed:\n###### Volatile tuple\n\n`Rubinius::Tuple` additions:\n- `Tuple#volatile_get(index)` volatile read\n- `Tuple#volatile_set(index, value)` volatile write\n- `Tuple#cas(index, expected_value, new_value)` a strong CAS with volatile read/write semantics\n\nor a new `Rubinius::VolatileTuple` with volatile semantics for `[]`, `[]=` and `cas` method.\n###### Volatile i-vars\n\nHere I'm seeing these alternative APIs:\n\n**i-var based API** (my preferred variant)\n\n``` ruby\nclass Foo\n  volatile :bar\n  volatile :@bar # alternative syntax?\n\n  def hello\n    @bar # volatile read\n    @bar = 1 # volatile write\n    cas_bar(1, 2) # => true\n    # no way to do non-volatile reads or writes of @bar\n  end\nend\n```\n\n**Method based API**\n\n``` ruby\nclass Foo\n  attr_volatile :bar\n\n  def hello\n    bar # volatile read\n    self.bar = 1 # volatile write\n    cas_bar(1, 2) # => true\n    @bar # non-volatile read, *dangerous* use at your own risk\n    @bar = 1 # non-volatile write, *dangerous* use at your own risk\n  end\nend\n```\n\n**Struct based API**\n\n``` ruby\nclass Foo < VolatileStruct.new(:bar)\n  def hello\n    bar # volatile read\n    self[:bar] # volatile read\n    self.bar = 1 # volatile write\n    self[:bar] = 1 # volatile write\n    cas_bar(1, 2) # => true\n    cas(:bar, 2, 3) # => true\n    @test = 1 # other non declared i-vars are *not* volatile\n  end\nend\n```\n\nAll of the i-var volatile extension APIs might require including a module (`include Rubinius::Volatile`) or have other VM-imposed restrictions like no `metaclass` volatiles, requiring that volatile fields be declared upfront before a first instance of the class is instantiated etc.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "In irb, variable is not created if it's defined in code that never runs",
                "body": "In MRI (and JRuby) following code will not raise NameError.\n\n``` ruby\nif false\n  a = 1\nend\n\na\n# => nil\n```\n\nIn rbx that code that will raise NameError: undefined local variable or method `a' on an instance of Object.\n\nAccording to [issue 2362](http://bugs.ruby-lang.org/issues/2362) in Ruby Redmine this behavior is \"well-known and well-documented\". On the other hand I couldn't find it in Rubyspec anywhere.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "#readlines significantly slower than MRI",
                "body": "Calling #readline in Rubinius is significantly slower than MRI. For example, MRI #readlines requires just a tenth of a second or so, but Rubinius #readlines requires over 5 seconds on a file with 500,000 words separated by line break.\n### Steps to reproduce\n- Prepare a sample source file to read. For example, run the following with Ruby18 or 19. You can't use Rubinius because of a different issue with map which I'll file another bug for. The following will create a source file with 500,000 words consisting of 8 random characters.\n\n```\nSOURCE = 'source.txt'\n\n# File.open(SOURCE, 'w') do |f|\n#   500000.times do\n#     f.puts (0...8).map{65.+(rand(25)).chr}.join # http://stackoverflow.com/questions/88311/how-best-to-generate-a-random-string-in-ruby\n#   end\n# end\n```\n- Run an example of the troubled code:\n\n```\nSOURCE = 'source.txt'\nfile = File.new(SOURCE)\nwords = file.readlines\n\np words.size\n```\n### Timed Benchmarks\n#### Ruby 1.9.2p312\n\n```\nJon-Staceys-MacBook-Pro:Desktop jon$ time ruby readline_speed.rb \n500000\n\nreal    0m0.183s\nuser    0m0.143s\nsys 0m0.034s\n```\n#### Rubinius 2.0.testing @ 27509446430f53e1c10293339170bf11a5d6db2f\n\n```\nJon-Staceys-MacBook-Pro:Desktop jon$ time rubinius_bin/bin/rbx ./readline_speed.rb \n500000\n\nreal    0m5.965s\nuser    0m6.245s\nsys 0m0.188s\n```\n### Profiles\n#### Ruby 1.9.2p312 with ruby-prof\n\n```\nJon-Staceys-MacBook-Pro:Desktop jon$ ruby-prof ./readline_speed.rb \n500000\nThread ID: 70308421914320\nTotal: 0.141768\n\n %self     total     self     wait    child    calls  name\n 99.69      0.14     0.14     0.00     0.00        1  IO#readlines\n  0.19      0.14     0.00     0.00     0.14        1  Kernel#load\n  0.05      0.00     0.00     0.00     0.00        1  Kernel#p\n  0.03      0.14     0.00     0.00     0.14        2  Global#[No method]\n  0.01      0.00     0.00     0.00     0.00        1  File#initialize\n  0.01      0.00     0.00     0.00     0.00        1  Kernel#inspect\n  0.01      0.00     0.00     0.00     0.00        4  Hash#default\n  0.01      0.00     0.00     0.00     0.00        2  IO#set_encoding\n  0.00      0.00     0.00     0.00     0.00        1  <Class::IO>#new\n  0.00      0.00     0.00     0.00     0.00        1  Fixnum#to_s\n  0.00      0.00     0.00     0.00     0.00        1  <Class::IO>#allocate\n```\n#### Rubinius 2.0.testing @ 27509446430f53e1c10293339170bf11a5d6db2f\n\n```\nJon-Staceys-MacBook-Pro:Desktop jon$ time rubinius_bin/bin/rbx ./readline_speed.rb \n500000\nThread 1: total running time: 19.015297034s\n\n  %   cumulative   self                self     total\n time   seconds   seconds      calls  ms/call  ms/call  name\n------------------------------------------------------------\n  16.76    6.59      3.19    1015628     0.00     0.01  Rubinius::Channel#as_lock\n  13.06   13.57      2.48     500001     0.00     0.03  IO#read_to_separator\n   8.75   17.91      1.66     500001     0.00     0.04  IO#gets\n   8.54    1.99      1.62    1000002     0.00     0.00  Rubinius::GlobalVariables#[]=\n   6.03    1.15      1.15        115     9.97     9.97  GC.collect_young\n   4.89    1.19      0.93     507814     0.00     0.00  IO::InternalBuffer::fill_from<63> {}\n   4.79    1.13      0.91     507814     0.00     0.00  IO::InternalBuffer::shift<152> {}\n   4.43    5.17      0.84     507814     0.00     0.01  IO::InternalBuffer#fill_from\n   3.34   19.01      0.64          1   635.60 19014.62  IO#readlines\n   3.26    0.72      0.62     500001     0.00     0.00  IO#ensure_open_and_readable\n   2.91    0.60      0.55    1015628     0.00     0.00  Rubinius::Channel#receive\n   2.79    0.58      0.53    1015628     0.00     0.00  Rubinius::Channel#<<\n   2.76    3.59      0.52     507814     0.00     0.01  IO::InternalBuffer#shift\n   2.66    0.51      0.51          7    72.29    72.29  GC.collect_mature\n   2.26    0.89      0.43     500005     0.00     0.00  Kernel#StringValue\n   2.05    0.48      0.39     507814     0.00     0.00  IO::InternalBuffer#find\n   1.96    0.46      0.37     500006     0.00     0.00  Rubinius::Type.coerce_to\n   1.65    0.44      0.31     500000     0.00     0.00  Array#<<\n   0.74    0.16      0.14     507814     0.00     0.00  String.from_chararray\n   0.69    0.18      0.13    1000002     0.00     0.00  Rubinius::LookupTable#[]=\n   0.68    0.18      0.13    1000002     0.00     0.00  String#empty?\n   0.61    0.16      0.12    1015628     0.00     0.00  IO::InternalBuffer#size\n   0.61    0.16      0.12    1007816     0.00     0.00  IO::InternalBuffer#exhausted?\n   0.55    0.15      0.10    1000006     0.00     0.00  Rubinius::LookupTable#key?\n   0.53    0.12      0.10     500000     0.00     0.00  Array#set_index\n   0.43    0.13      0.08    1000007     0.00     0.00  Rubinius::LookupTable#[]\n   0.37    0.09      0.07     507815     0.00     0.00  IO::InternalBuffer#empty_to\n   0.33    0.09      0.06     507814     0.00     0.00  Rubinius::CharArray#locate\n   0.31    0.08      0.06     500006     0.00     0.00  Rubinius::Type.object_kind_of?\n   0.31    0.08      0.06     507815     0.00     0.00  IO::InternalBuffer#empty?\n   0.22    0.04      0.04       8791     0.00     0.00  IO::InternalBuffer#fill\n   0.21    0.06      0.04     500004     0.00     0.00  Fixnum#&\n   0.19    0.06      0.04     500011     0.00     0.00  IO#ensure_open\n   0.18    0.06      0.03     500000     0.00     0.00  Kernel#taint\n   0.11    0.03      0.02       7813     0.00     0.00  String#<<\n   0.02    0.00      0.00       8791     0.00     0.00  IO::InternalBuffer#reset!\n   0.01    0.00      0.00       7813     0.00     0.00  String#append\n   0.01    0.00      0.00       7813     0.00     0.00  String#modify!\n   0.00   19.01      0.00          1     0.38 19015.00  Object::__script__<16> {}\n\n39 methods called a total of 20,181,855 times\n\n\nreal    0m20.618s\nuser    0m20.862s\nsys 0m0.301s\n```\n\nI tried the 19 syntax, but it was even slower:\n\n```\nJon-Staceys-MacBook-Pro:Desktop jon$ rubinius_bin/bin/rbx -X19 ./readline_speed.rb \n500000\nThread 1: total running time: 28.908094775000002s\n\n  %   cumulative   self                self     total\n time   seconds   seconds      calls  ms/call  ms/call  name\n------------------------------------------------------------\n  11.80    6.95      3.41    1015628     0.00     0.01  Rubinius::Channel#as_lock\n  11.64   19.59      3.37     500001     0.01     0.04  IO::EachReader#read_to_separator\n   9.01   27.05      2.60     500001     0.01     0.05  IO#each\n   5.90    2.08      1.71    1000001     0.00     0.00  Rubinius::GlobalVariables#[]=\n   5.82    1.68      1.68        208     8.09     8.09  GC.collect_young\n   5.39    3.08      1.56     500002     0.00     0.01  Rubinius::CharArray#dup\n   4.08    5.00      1.18     507815     0.00     0.01  String#<<\n   3.55   20.72      1.03     500001     0.00     0.04  IO::EachReader#each\n   3.50    1.30      1.01     507814     0.00     0.00  IO::InternalBuffer::fill_from<63> {}\n   3.37    1.21      0.97     507814     0.00     0.00  IO::InternalBuffer::shift<152> {}\n   2.50    0.72      0.72          9    80.43    80.43  GC.collect_mature\n   2.40   27.74      0.69     500001     0.00     0.06  IO#gets\n   2.36    0.79      0.68     500001     0.00     0.00  IO#ensure_open_and_readable\n   2.32   28.91      0.67          1   670.57 28907.34  IO#readlines\n   2.16    0.78      0.62     500002     0.00     0.00  Rubinius::CharArray.new\n   2.14    4.90      0.62     507814     0.00     0.01  IO::InternalBuffer#fill_from\n   2.03    0.69      0.59     500002     0.00     0.00  Kernel#initialize_copy\n   1.83    0.58      0.53    1015628     0.00     0.00  Rubinius::Channel#receive\n   1.82    3.19      0.53     507814     0.00     0.01  IO::InternalBuffer#shift\n   1.81    3.60      0.52     507815     0.00     0.01  String#modify!\n   1.71    1.43      0.49     500000     0.00     0.00  IO::gets<391> {}\n   1.69    0.54      0.49    1015628     0.00     0.00  Rubinius::Channel#<<\n   1.31    0.46      0.38     507813     0.00     0.00  IO::InternalBuffer#find\n   1.17    0.46      0.34     500000     0.00     0.00  Array#<<\n   0.95    0.30      0.27     500001     0.00     0.00  IO::EachReader#initialize\n   0.66    2.54      0.19     500001     0.00     0.01  Class#allocate\n   0.54    0.18      0.16     507814     0.00     0.00  String.from_chararray\n   0.48    0.19      0.14    1015628     0.00     0.00  IO::InternalBuffer#size\n   0.44    0.15      0.13     500000     0.00     0.00  IO#increment_lineno\n   0.42    0.17      0.12    1007815     0.00     0.00  IO::InternalBuffer#exhausted?\n   0.42    0.17      0.12    1000001     0.00     0.00  Rubinius::LookupTable#[]=\n   0.42    0.14      0.12     507815     0.00     0.00  String#append\n   0.39    0.16      0.11    1000005     0.00     0.00  Rubinius::LookupTable#key?\n   0.34    0.12      0.10     500000     0.00     0.00  Array#set_index\n   0.31    0.14      0.09    1000006     0.00     0.00  Rubinius::LookupTable#[]\n   0.29    0.11      0.08     507815     0.00     0.00  IO::InternalBuffer#empty_to\n   0.28    0.13      0.08    1000004     0.00     0.00  Kernel#__class__\n   0.27    0.12      0.08    1000002     0.00     0.00  Proc.__from_block__\n   0.27    0.10      0.08     500002     0.00     0.00  Rubinius::CharArray.allocate_sized\n   0.25    0.10      0.07     500002     0.00     0.00  String#empty?\n   0.22    0.09      0.06     500001     0.00     0.00  Module#===\n   0.21    0.08      0.06     507813     0.00     0.00  Rubinius::CharArray#locate\n   0.21    0.08      0.06     507814     0.00     0.00  IO::InternalBuffer#empty?\n   0.20    0.08      0.06     507822     0.00     0.00  Kernel#kind_of?\n   0.17    0.07      0.05     500002     0.00     0.00  BasicObject#initialize\n\n9 methods omitted\n\n54 methods called a total of 29,697,594 times\n```\n\nCode used for Rubinius test:\n\n```\nrequire 'profiler'\nSOURCE = 'source.txt'\n\nprofiler = Rubinius::Profiler::Instrumenter.new\n\nprofiler.profile do\n  file = File.new(SOURCE)\n  words = file.readlines\n\n  p words.size\nend\n```\n### Conclusion\n\nIt appears that IO#read_to_separator and/or IO#gets need some performance tuning in 18, and 19 needs some work in other areas.\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "RBX exits without handling LocalJumpError exception in closure",
                "body": "https://gist.github.com/1301471\n\nAdding a \"return\" to a Proc should produce a LocalJumpError. MRI catches this exception and prints it out. RBX just exits.\n\nExample came from http://innig.net/software/ruby/closures-in-ruby.rb\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            },
            {
                "state": "open",
                "title": "CSV is much slower than MRI",
                "body": "*\\* edited to require fastercsv in 1.8 as I forgot the standard CSV library in 1.8 is very slow\n\n``` ruby\nbegin\n  require \"faster_csv\"\n  FasterCSV.build_csv_interface\nrescue LoadError\n  require \"csv\"\nend\n\nCSV.foreach('thirty-megs.csv') do |row|\nend\n```\n# ruby 1.8.7 (2011-02-18 patchlevel 334) [i686-darwin10.7.0]\n\nreal    0m20.300s\nuser    0m20.118s\nsys 0m0.117s\n# ruby 1.9.2p180 (2011-02-18 revision 30909) [x86_64-darwin10.7.0]\n\nreal    0m12.281s\nuser    0m11.952s\nsys 0m0.159s\n# rubinius 2.0.0dev (1.8.7 23af0f7b yyyy-mm-dd JI) [x86_64-apple-darwin10.7.0]\n\nreal    1m39.303s\nuser    1m39.536s\nsys 0m0.713s\n",
                "user": {
                    "name": "",
                    "email": ""
                }
            }
        ]
    }
]
